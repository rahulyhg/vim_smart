<?php/* * 现金红包（普通）/代金券 * 陈琦 * 2016.12.12 */class Redpack{    function postXmlSSLCurl($xml,$url,$second=30,$apiclient_cert,$apiclient_key,$rootca){        $ch = curl_init();        //设置超时        curl_setopt($ch, CURLOPT_TIMEOUT, $second);        //如果有配置代理这里就设置代理        if(WxPay_CURL_PROXY_HOST != "0.0.0.0" && WxPay_CURL_PROXY_PORT != 0){            curl_setopt($ch,CURLOPT_PROXY, WxPay_CURL_PROXY_HOST);            curl_setopt($ch,CURLOPT_PROXYPORT, WxPay_CURL_PROXY_PORT);        }        curl_setopt($ch,CURLOPT_URL, $url);        //设置header        curl_setopt($ch, CURLOPT_HEADER, FALSE);        //要求结果为字符串且输出到屏幕上        curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE);        //设置证书        curl_setopt($ch,CURLOPT_SSL_VERIFYPEER,TRUE);        curl_setopt($ch,CURLOPT_SSL_VERIFYHOST,2);//严格校验        //使用证书：cert 与 key 分别属于两个.pem文件        curl_setopt($ch,CURLOPT_SSLCERT, $apiclient_cert);        curl_setopt($ch,CURLOPT_SSLKEY, $apiclient_key);        //curl_setopt($ch, CURLOPT_CAINFO,$rootca);//经过测试可不带（但不确定，陈琦2016.12.13）                //post提交方式        curl_setopt($ch, CURLOPT_POST, TRUE);        curl_setopt($ch, CURLOPT_POSTFIELDS, $xml);        //运行curl        $data = curl_exec($ch);        //返回结果        if($data){            curl_close($ch);            return $data;        } else {            $error = curl_errno($ch);            curl_close($ch);            //throw new WxPayException("curl出错，错误码:$error");            echo "curl出错，错误码:$error";            echo "<a href='http://curl.haxx.se/libcurl/c/libcurl-errors.html'>错误原因查询</a></br>";            exit();        }    }    public function postXmlCurl($xml,$url,$second=30)    {        //初始化curl        $ch = curl_init();        //设置超时        curl_setopt($ch, CURLOPT_TIMEOUT, $second);        //这里设置代理，如果有的话        //curl_setopt($ch,CURLOPT_PROXY, '8.8.8.8');        //curl_setopt($ch,CURLOPT_PROXYPORT, 8080);        curl_setopt($ch,CURLOPT_URL, $url);        curl_setopt($ch,CURLOPT_SSL_VERIFYPEER,FALSE);        curl_setopt($ch,CURLOPT_SSL_VERIFYHOST,FALSE);        //设置header        curl_setopt($ch, CURLOPT_HEADER, FALSE);        //要求结果为字符串且输出到屏幕上        curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE);        //post提交方式        curl_setopt($ch, CURLOPT_POST, TRUE);        curl_setopt($ch, CURLOPT_POSTFIELDS, $xml);        //运行curl        $data = curl_exec($ch);        //curl_close($ch);        //返回结果        if($data)        {            curl_close($ch);            return $data;        }        else        {            $error = curl_errno($ch);            echo "curl出错，错误码:$error"."<br>";            echo "<a href='http://curl.haxx.se/libcurl/c/libcurl-errors.html'>错误原因查询</a></br>";            curl_close($ch);            return false;        }    }        public function createNoncestr( $length = 32 ){//获取随机数        $chars = "abcdefghijklmnopqrstuvwxyz0123456789";        $str ="";        for ( $i = 0; $i < $length; $i++ )  {            $str.= substr($chars, mt_rand(0, strlen($chars)-1), 1);        }        return $str;    }        public function getSign($Obj){//获取签名        foreach ($Obj as $k => $v)        {            $Parameters[$k] = $v;        }        //签名步骤一：按字典序排序参数        $key='FK3939483FK3JFK3JFK3JFKL3JLKFJ3L';        ksort($Parameters);        $String = $this->formatBizQueryParaMap($Parameters, false);        //echo '【string1】'.$String.'</br>';        //签名步骤二：在string后加入KEY        $String = $String."&key=".$key;        //echo "【string2】".$String."</br>";        //签名步骤三：MD5加密        $String = md5($String);        //echo "【string3】 ".$String."</br>";        //签名步骤四：所有字符转为大写        $result_ = strtoupper($String);        //echo "【result】 ".$result_."</br>";        return $result_;    }        public function formatBizQueryParaMap($paraMap, $urlencode){        $buff = "";        ksort($paraMap);        foreach ($paraMap as $k => $v)        {            if($urlencode)            {                $v = urlencode($v);            }            //$buff .= strtolower($k) . "=" . $v . "&";            $buff .= $k . "=" . $v . "&";        }        $reqPar;        if (strlen($buff) > 0)        {            $reqPar = substr($buff, 0, strlen($buff)-1);        }        return $reqPar;    }        public function arrayToXml($arr){//数组转化成xml        $xml = "<xml>";        foreach ($arr as $key=>$val)        {            if (is_numeric($val))            {                $xml.="<".$key.">".$val."</".$key.">";            }            else                $xml.="<".$key."><![CDATA[".$val."]]></".$key.">";        }        $xml.="</xml>";        return $xml;    }    public function xmlToArray($result){        //libxml_disable_entity_loader(true);        //将XML转为array        $array_data = json_decode(json_encode(simplexml_load_string($result, 'SimpleXMLElement', LIBXML_NOCDATA)), true);        return $array_data;    }}