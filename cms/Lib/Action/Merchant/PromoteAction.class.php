<?php/* * 商家推广 * * @  Writers    Jaty * @  BuildTime  2014/11/05 15:28 *  */class PromoteAction extends BaseAction{	    public function index()    {    	$database_merchant = D('Merchant');		$condition_merchant['mer_id'] = $this->merchant_session['mer_id'];		$now_merchant = $database_merchant->field(true,'pwd')->where($condition_merchant)->find();		if(!empty($now_merchant['pic_info'])){			$merchant_image_class = new merchant_image();			$tmp_pic_arr = explode(';',$now_merchant['pic_info']);			foreach($tmp_pic_arr as $key=>$value){				$now_merchant['pic'][$key]['title'] = $value;				$now_merchant['pic'][$key]['url'] = $merchant_image_class->get_image_by_path($value);			}		}		$this->assign('now_merchant',$now_merchant);				$merchant_group_list = D('Group')->get_grouplist_by_MerchantId($now_merchant['mer_id']);		$this->assign('merchant_group_list',$merchant_group_list);				// 		$hits = D('Group')->get_hits_log($now_merchant['mer_id']);// 		$this->assign('hits', $hits['group_list']);		// 		$this->assign('pagebar', $hits['pagebar']);		    	$this->display();    }	    public function info()    {		$hits = D('Group')->get_hits_log($this->merchant_session['mer_id']);		if(!empty($hits)){			import('ORG.Net.IpLocation');			$IpLocation = new IpLocation();			foreach($hits['group_list'] as &$hit){				$last_location = $IpLocation->getlocation($hit['ip']);				$hit['ip_txt'] = iconv('GBK','UTF-8',$last_location['country']);			}		}		$this->assign('hits', $hits['group_list']);				$this->assign('pagebar', $hits['pagebar']);		    	$this->display();    }        /*public function set()    {    	$home_share = D('Home_share')->where(array('mer_id' => $this->merchant_session['mer_id']))->find();    	if (IS_POST) {    		$data['a_href'] = isset($_POST['a_href']) ? htmlspecialchars($_POST['a_href']) : $this->config['site_url'] . '/wap.php?c=Index&a=index&token=' . $this->merchant_session['mer_id'];    		$data['a_name'] = isset($_POST['a_name']) ? htmlspecialchars($_POST['a_name']) : '查看';    		$data['title'] = isset($_POST['title']) ? htmlspecialchars($_POST['title']) : '您是通过' . $this->merchant_session['name'] . '店铺进入本站';    		if ($home_share) {    			D('Home_share')->where(array('mer_id' => $this->merchant_session['mer_id']))->save($data);    		} else {    			$data['mer_id'] = $this->merchant_session['mer_id'];    			D('Home_share')->add($data);    		}    		$this->success('操作成功');    	} else {    		if (empty($home_share)) {    			$home_share = array('title' => '您是通过' . $this->merchant_session['name'] . '店铺进入本站', 'a_name' => '查看', 'a_href' => $this->config['site_url'] . '/wap.php?c=Index&a=index&token=' . $this->merchant_session['mer_id']);    		}    		$this->assign('home_share', $home_share);    		$this->display();    	}    }*/	/**	 * 优惠卷推广	 * 汪威	 * 2016.04.12	 */	public function discountSpead(){		$mer_info = $this->merchant_session;		//dump ($mer_info);exit;		$discount_spead = M('merchant_discount_spead');		$data = $discount_spead->order('ds_id asc')->select();		$this->assign('mer_info','$mer_info');		$this->assign('mer_id',$mer_info['mer_id']);//		dump($mer_info['mer_id']);//		dump($data);exit;		$this->assign('data_vip',$data);		$this->display();	}	/**	 * 优惠卷的推广新增编辑	 * 汪威	 * 2016.04.12	 */	public function ds_edit()	{		$mer_info = $this->merchant_session;		$discount_spead = M('merchant_discount_spead');		if (IS_POST) {			$_POST['ds_name'] = htmlspecialchars($_POST['name']);			$_POST['ds_img'] = htmlspecialchars($_POST['pic']);			$_POST['ds_description'] = I('info');			$_POST['ds_type'] = I('ds_type');			$_POST['ds_scale'] = sprintf("%.2f",I('ds_scale'));			$_POST['ds_scope'] = I('ds_scope');			$_POST['ds_money'] =  I('ds_money');			$_POST['ds_minmoney'] =  I('ds_minmoney');			$_POST['ds_maxmoney'] =  I('ds_maxmoney');			$_POST['ds_reMoney'] = I('ds_money');			$_POST['ds_merId'] = $mer_info['mer_id'];			if (empty($_POST['ds_name'])) $this->error('优惠名称不能为空');			if (empty($_POST['ds_img'])) $this->error('您还没有上传图片');			if (empty($_POST['ds_money'])) $this->error('请输入总金额');			$_POST['ds_beginTime'] = strtotime($_POST['statdate']);			$_POST['ds_endTime'] = strtotime($_POST['enddate'].' 23:59:59');			$atime = $_POST['ds_endTime']-$_POST['ds_beginTime'];			if($atime<=0){				$this->error('您填写的时间有误！');			}			if($_POST['ds_type']=="1"){				if($_POST['ds_scale']<0||$_POST['ds_scale']>1){					$this->error('折扣必须在0-1之间！');				}			}			$_POST['ds_day'] = intval(($atime)/(3600*24));			if (!isset($_GET['disid'])) {				//添加				$res = $discount_spead->add($_POST);//                echo  $discount_spead->getLastSql();exit;				$merchant_alter=D('Merchant')->where(array('mer_id'=>$this->merchant_session['mer_id']))->setDec('money',I('ds_money'));//修改当前商户余额			} else {				//编辑				$id = intval($_GET['disid']);				$ds_money=$discount_spead->where(array('ds_id' => $id))->find();				$_POST['ds_reMoney'] = $ds_money['ds_reMoney'];				$res = $discount_spead->where(array('ds_id' => $id))->save($_POST);			}			if ($res>=0) {				$this->success('操作成功', U('Promote/discountSpead'));			} else {				$this->error('操作失败');			}		} else {			$now = time();			$this->assign('point',$mer_info['point']);			if (isset($_GET['disid'])) {				$data = $discount_spead->where(array('ds_id'=>$_GET['disid']))->find();				$data['statdate'] = $data['ds_beginTime'];				$data['enddate'] = $data['ds_endTime'];				$this->assign('disid', $_GET['disid']);	//获取id			} else {				$data['statdate'] = $now;				$data['enddate'] = $now + 10 * 24 * 3600;			}//            dump($data);			$this->assign('vip', $data);			$merchant_one=D('Merchant')->where(array('mer_id'=>$this->merchant_session['mer_id']))->find();			$this->assign('money', $merchant_one['money']);	//获取商户余额			$this->display();		}	}	/**	 * 优惠卷的查看	 * 汪威	 * 2016.04.12	 */	public function ds_look()	{		$mer_info = $this->merchant_session;		$discount_spead = M('merchant_discount_spead');		$now = time();		$this->assign('point',$mer_info['point']);		if (isset($_GET['disid'])) {			$data = $discount_spead->where(array('ds_id'=>$_GET['disid']))->find();			$data['statdate'] = $data['ds_beginTime'];			$data['enddate'] = $data['ds_endTime'];		} else {			$data['statdate'] = $now;			$data['enddate'] = $now + 10 * 24 * 3600;		}//            dump($data);		$this->assign('vip', $data);		$this->display();	}	/**	 * 优惠卷的推广删除	 * 汪威	 * 2016.04.12	 */	public function ds_del()	{		$data = M('merchant_discount_spead')->where(array('ds_id'=>$_GET['itemid']))->delete();		if ($data == false) {			$this->error('没删除成功');		} else {			$this->success('操作成功', U('Promote/discountSpead'));		}	}	public function ds_administration(){		$mer_id = intval($this->merchant_session['mer_id']);		$percent = '';		if ($this->merchant_session['percent']) {			$percent = $this->merchant_session['percent'];		} elseif ($this->config['platform_get_merchant_percent']) {			$percent = $this->config['platform_get_merchant_percent'];		}		$this->assign('percent', $percent);		$merchant = D('Merchant')->field(true)->where('mer_id=' . $mer_id)->find();		$discount_spead = M('merchant_discount_spead');		$data = $discount_spead->where('ds_merId='.$mer_id)->order('ds_id asc')->select();		foreach($data as $k=>$v){			$data[$k] = $v['ds_id'];		}		$result = D("Meal_order")->get_order_id($mer_id,$data);//        dump($result);exit;		$count = "";		$counts = "";		foreach($result['order_list'] as $ke=>$va){			if($va['card_id']==0){				unset($result['order_list'][$ke]);			}else{				$count+=$va['minus_price'];				$counts+=floatval($va['order_price']);			}		}		$this->assign($result);		$this->assign('count',$count);		$this->assign('counts',$counts);		$this->assign('total_percent', $result['total'] * (100 - $percent) * 0.01);		$this->assign('all_total_percent', ($result['alltotal'] + $result['alltotalfinsh']) * (100 - $percent) * 0.01);		$this->assign('now_merchant', $merchant);		$this->assign('mer_id', $mer_id);		$this->display();	}	/**	 * 现金劵的相关统计	 * 2016.4.15	 * 汪威	 */	public function couponStatistics(){		$condition_merchant_request['mer_id'] = $this->merchant_session['mer_id'];		$today_zero_time = mktime(0,0,0,date('m',$_SERVER['REQUEST_TIME']),date('d',$_SERVER['REQUEST_TIME']), date('Y',$_SERVER['REQUEST_TIME']));		if(empty($_GET['day'])){			$_GET['day'] = date('d',$_SERVER['REQUEST_TIME']);		}		if($_GET['day'] < 1){			$this->error('日期非法！');		}else if($_GET['day'] > 180){			$this->error('最长只能查询180天！');		}		$condition_merchant_request['time'] = array(array('egt',$today_zero_time-(($_GET['day']-1)*86400)),array('elt',$today_zero_time));		$request_list = M('Merchant_request')->field(true)->where($condition_merchant_request)->order('`time` ASC')->select();		foreach($request_list as $value){			$tmp_time = date('Ymd',$value['time']);			$tmp_array[$tmp_time] = $value;		}		for($i=1;$i<=$_GET['day'];$i++){			$tmp_time = date('Ymd',$today_zero_time-(($i-1)*86400));			if(empty($tmp_array[$tmp_time])){				$tmp_array[$tmp_time] = array('time'=>$today_zero_time-(($i-1)*86400));			}		}		foreach($tmp_array as $key=>$value){			//基础统计			$pigcms_list['xAxis_arr'][]  = '"'.date('j',$value['time']).'日"';			$pigcms_list['follow_arr'][] = '"'.intval($value['follow_num']).'"';			$pigcms_list['img_arr'][]   = '"'.intval($value['img_num']).'"';			$pigcms_list['website_hits_arr'][]   = '"'.intval($value['website_hits']).'"';			//优惠劵推广统计			$pigcms_list['coupon_money_arr'][] = '"'.floatval($value['coupon_money']).'"';			$pigcms_list['coupon_pay_money_arr'][]   = '"'.floatval($value['coupon_pay_money']).'"';			$pigcms_list['coupon_all_money_arr'][]   = '"'.floatval($value['coupon_all_money']).'"';		}		//基础统计		$pigcms_list['xAxis_txt'] = implode(',',$pigcms_list['xAxis_arr']);		$pigcms_list['follow_txt'] = implode(',',$pigcms_list['follow_arr']);		$pigcms_list['img_txt'] = implode(',',$pigcms_list['img_arr']);		$pigcms_list['website_hits_txt'] = implode(',',$pigcms_list['website_hits_arr']);		//优惠劵推广统计		$pigcms_list['coupon_money_txt'] = implode(',',$pigcms_list['coupon_money_arr']);		$pigcms_list['coupon_pay_money_txt'] = implode(',',$pigcms_list['coupon_pay_money_arr']);		$pigcms_list['coupon_all_money_txt'] = implode(',',$pigcms_list['coupon_all_money_arr']);		$this->assign($pigcms_list);		krsort($tmp_array);		$this->assign('request_list',$tmp_array);		$this->display();	}	/* 商户后台充值	* @time 2016-04-13	* @author	小邓  <969101097@qq.com>*/	public function recharge(){		if(IS_POST){			//print_r($_POST);			//echo '<br/>';			$account=isset($_POST['account']) ? $_POST['account'] : NULL;	//支付类型			$pay_money=isset($_POST['money']) ? $_POST['money'] : NULL;	//支付金额			$pay_method=D('Config')->get_pay_method();			//print_r($pay_method[$account]);			$pay_config=$pay_method[$account]['config'];	//支付类对应的配置参数			$pay_class_name=ucwords($account);			import('@.ORG.pay.'.$pay_class_name);	//引入支付类（微信或支付宝）			$pay_class=new $pay_class_name('',$pay_money,$account,$pay_config);			//$pay_class=new $pay_class_name('','1',$account,$pay_config);			$out_trade_no='C'.time().substr(str_shuffle('1234567890'),0,8);	//订单号			if($account=='weixin'){		//判断是否是微信支付				$recharge_arr=$pay_class->recharge_pay($out_trade_no);				//echo $recharge_arr['qrcode'];exit;				$this->assign('code_url',$recharge_arr['qrcode']);				$config_arr=array();				$config_arr['code']=$out_trade_no;				$config_arr['money']=$pay_money;				$this->assign('config_arr',$config_arr);	//订单信息				$this->display('wxqrcode');			}else{				echo $pay_class->recharge_pay($out_trade_no);			}		}else{			$now_merchant=D('Merchant')->field('money')->where(array('mer_id'=>$this->merchant_session['mer_id']))->find();			$this->assign('money',$now_merchant['money']);	//订单信息			$this->display();		}	}	/* 商户后台充值处理(微信扫码支付)	* @time 2016-04-13	* @author	小邓  <969101097@qq.com>*/	public function weixinAdd(){		import('@.ORG.pay.Weixinnewpay.WxPay');	//引入微信核心文件		$orderQuery=new OrderQuery_pub();		//print_r($orderQuery->getResult());		if (!isset($_POST["out_trade_no"])){			$out_trade_no = " ";		}else{			$out_trade_no = $_POST["out_trade_no"];			//使用订单查询接口			$orderQuery = new OrderQuery_pub();			//设置必填参数			//appid已填,商户无需重复填写			//mch_id已填,商户无需重复填写			//noncestr已填,商户无需重复填写			//sign已填,商户无需重复填写			$orderQuery->setParameter("out_trade_no","$out_trade_no");//商户订单号			//获取订单查询结果			$orderQueryResult = $orderQuery->getResult();			//商户根据实际情况设置相应的处理流程,此处仅作举例			$result=array();			if ($orderQueryResult["return_code"] == "FAIL") {				//echo "通信出错：".$orderQueryResult['return_msg']."<br>";				$result['code']=-1;				$result['msg']="通信出错：".$orderQueryResult['return_msg'];				echo json_encode($result);				exit;			}else if($orderQueryResult["result_code"] == "FAIL"){				//echo "错误代码：".$orderQueryResult['err_code']."<br>";				//echo "错误代码描述：".$orderQueryResult['err_code_des']."<br>";				$result['code']=-2;				$result['msg']="错误代码描述：".$orderQueryResult['err_code_des'];				echo json_encode($result);				exit;			}else{				if($orderQueryResult['trade_state']=='NOTPAY'){	//订单未支付					$result['code']=-3;					$result['msg']=$orderQueryResult['trade_state_desc'];					echo json_encode($result);					exit;				}else{					$total_fee_t = $orderQueryResult['total_fee']/100;					//$total_fee_t=$_POST['money'];					$out_trade_no=$orderQueryResult['out_trade_no'];					$mer_id = $this->merchant_session['mer_id'];	//商户ID					$merchant_alter= D('Merchant')->where(array('mer_id'=>$mer_id))->setInc('money',$total_fee_t);	//增加用户金额					//$merchant_alter= D('Merchant')->where(array('mer_id'=>$mer_id))->find();					if($merchant_alter){						$result['code']=4;	//充值成功						$result['msg']="充值成功！";						echo json_encode($result);						exit;					}else{						$result['code']=-4;	//充值失败						$result['msg']="充值失败！".$total_fee_t;						echo json_encode($result);						exit;					}				}			}		}	}	/* 商户后台充值处理(支付宝扫码支付)	* @time 2016-04-13	* @author	小邓  <969101097@qq.com>*/	public function alipayReturn(){		//echo '支付宝扫码同步处理';exit;		import("@.ORG.pay.Alipay.alipay_notify");		$pay_method=D('Config')->get_pay_method();		$pay_config=$pay_method['alipay']['config'];	//支付类对应的配置参数		$alipay_config['partner']		= $pay_config['pay_alipay_pid'];		$alipay_config['seller_email']	= $pay_config['pay_alipay_name'];		$alipay_config['key']			= $pay_config['pay_alipay_key'];		$alipay_config['sign_type']    = 'MD5';		$alipay_config['input_charset']= 'utf-8';		$alipay_config['transport']    = 'http';		$alipayNotify = new AlipayNotify($alipay_config);		$verify_result = $alipayNotify->verifyNotify();		$out_trade_no = $_GET['out_trade_no'];	//商户订单号		//$trade_no = $_GET['trade_no'];	//支付宝交易号		$trade_status = $_GET['trade_status'];	//交易状态		$total_fee_t = $_GET['total_fee'];	//金额		if($_GET['trade_status'] == 'TRADE_SUCCESS'){	//判断是否交易成功			$mer_id = $this->merchant_session['mer_id'];	//商户ID			$merchant_alter= D('Merchant')->where(array('mer_id'=>$mer_id))->setInc('money',$total_fee_t);	//增加用户金额			if($merchant_alter){				$this->success('充值成功！',U('Recharge/index'));	//充值成功			}else{				$this->error('充值失败！');	//充值失败			}		}else {			$this->error('交易失败！');	//充值失败		}	}	public function activity() {		// $activity_list = D('Extension_activity_list')->where(array('mer_id'=>$this->merchant_session['mer_id']))->order('`pigcms_id` DESC')->select();		$mer_id = $this->merchant_session['mer_id'];		$activity_list = D('')->field('`eal`.*,`ea`.`begin_time`,`ea`.`end_time`')->table(array(C('DB_PREFIX').'extension_activity_list'=>'eal',C('DB_PREFIX').'extension_activity'=>'ea'))->where("`eal`.`mer_id`='$mer_id' AND `eal`.`activity_term`=`ea`.`activity_id`")->order('`eal`.`pigcms_id` DESC')->select();		foreach($activity_list as &$value){			$value['type_txt'] = $this->type_txt($value['type']);		}		$this->assign('activity_list',$activity_list);		// dump(D(''));		$this->display();	}	protected function type_txt($type){		switch($type){			case '1':				return '一元夺宝';			case '2':				return '优惠券';			case '3':				return '秒杀';			case '4':				return '红包';			case '5':				return '卡券';		}	}	public function add(){		if(IS_POST){			if(empty($_POST['activity_term'])){				$this->error('请选择参与活动期数');			}			if(empty($_POST['name'])){				$this->error('请填写活动名称');			}			if(empty($_POST['title'])){				$this->error('请填写活动标题');			}			if(empty($_POST['pic'])){				$this->error('请至少上传一张照片');			}			$_POST['pic'] = implode(';',$_POST['pic']);			if(empty($_POST['info'])){				$this->error('请填写活动详情');			}			$_POST['info'] = fulltext_filter($_POST['info']);			$_POST['all_count'] = intval($_POST['all_count']);			if(empty($_POST['all_count'])){				$this->error('请填写合法的商品数量，最低1件');			}			$_POST['price'] = intval($_POST['price']);			$_POST['mer_score'] = intval($_POST['mer_score']);			$_POST['money'] = floatval($_POST['money']);			if($_POST['type'] == 1){				$_POST['all_count'] = 1;				$_POST['money'] = 1;				$_POST['activity_limit'] = 1;				$_POST['mer_score'] = 0;				if(empty($_POST['price'])){					$this->error('一元夺宝 需要设置商品价格');				}			}else{				unset($_POST['price']);			}			if($_POST['activity_limit']){				if(empty($_POST['money'])){					$this->error('请填写合法的消耗金钱，需要整数');				}				unset($_POST['mer_score']);			}else{				if(empty($_POST['mer_score'])){					$this->error('请填写合法的消耗积分，需要整数');				}				if($_POST['mer_score'] % $this->config['activity_score_scale']){					$this->error('消耗积分必须是 '.$this->config['activity_score_scale'].' 的倍数');				}				unset($_POST['money']);			}			$_POST['mer_id'] = $this->merchant_session['mer_id'];			$_POST['last_time'] = $_SERVER['REQUEST_TIME'];			if(D('Extension_activity_list')->data($_POST)->add()){				$this->success('添加成功，请耐心等待管理员审核该活动。');			}else{				$this->error('添加失败，请重试。');			}		}else{			$activity_term_list = array();			if($this->config['activity_sign_term']){				$activity_term_list = D('Extension_activity')->where(array('end_time'=>array('gt',$_SERVER['REQUEST_TIME']),'status'=>'1'))->order('`activity_id` ASC')->select();			}else{				$activity_term_list[0] = D('Extension_activity')->where(array('end_time'=>array('gt',$_SERVER['REQUEST_TIME']),'status'=>'1'))->find();			}			if(empty($activity_term_list) || empty($activity_term_list[0])){				$this->error('平台暂时没有开启的活动！');			}			$this->assign('activity_term_list',$activity_term_list);			$this->display();		}	}	public function yiyuanduobao(){		$database_extension_activity_list = D('Extension_activity_list');		$condition_extension_activity_list['pigcms_id'] = $_GET['id'];		$database_extension_activity_list = D('Extension_activity_list');		$condition_extension_activity_list['pigcms_id'] = $_GET['id'];		$now_activity = $database_extension_activity_list->field(true)->where($condition_extension_activity_list)->find();		if(empty($now_activity) || $now_activity['type'] != 1 || $now_activity['status'] != 2){			$this->assign('jumpUrl',$this->config['site_url']);			$this->error('该活动不存在');		}		$now_user = D('User')->get_user($now_activity['lottery_uid']);		$now_user_adress = D('User_adress')->get_one_adress($now_user['uid']);		$this->assign('now_activity',$now_activity);		$this->assign('now_user',$now_user);		$this->assign('now_user_adress',$now_user_adress);		$this->display();	}	public function frame_edit(){		if(empty($_SESSION['system'])){			$this->error('非法修改');		}		if(IS_POST){			$now_activity = D('Extension_activity_list')->where(array('pigcms_id'=>$_GET['id']))->find();			if(empty($now_activity)){				$this->error('该活动不存在');			}			if(empty($_POST['name'])){				$this->error('请填写活动名称');			}			if(empty($_POST['title'])){				$this->error('请填写活动标题');			}			if(empty($_POST['pic'])){				$this->error('请至少上传一张照片');			}			$_POST['pic'] = implode(';',$_POST['pic']);			if(empty($_POST['info'])){				$this->error('请填写活动详情');			}			$_POST['info'] = fulltext_filter($_POST['info']);			if($now_activity['type'] == 1){				$_POST['all_count'] = intval($now_activity['price']);			}else{				if($_POST['all_count']) $_POST['all_count'] = intval($_POST['all_count']);				if($_POST['all_count'] > $now_activity['part_count']){					$_POST['is_finish'] = 0;					$_POST['finish_time'] = 0;				}			}			if($_POST['price']) $_POST['price'] = intval($_POST['price']);			if($_POST['mer_score']) $_POST['mer_score'] = intval($_POST['mer_score']);			if($_POST['money']) $_POST['money'] = floatval($_POST['money']);			if(isset($_POST['activity_limit'])){				if($_POST['activity_limit']){					if(empty($_POST['money'])){						$this->error('请填写合法的消耗金钱，需要整数');					}					$_POST['mer_score'] = '0';				}else{					if(empty($_POST['mer_score'])){						$this->error('请填写合法的消耗积分，需要整数');					}					if($_POST['mer_score'] % $this->config['activity_score_scale']){						$this->error('消耗积分必须是 '.$this->config['activity_score_scale'].' 的倍数');					}					$_POST['money'] = '0';				}			}			$_POST['last_time'] = $_SERVER['REQUEST_TIME'];			if(D('Extension_activity_list')->where(array('pigcms_id'=>$_GET['id']))->data($_POST)->save()){				$this->success('编辑成功');			}else{				$this->error('编辑失败，请重试。');			}		}else{			$now_activity = D('Extension_activity_list')->where(array('pigcms_id'=>$_GET['id']))->find();			if(empty($now_activity)){				$this->error('该活动不存在');			}			if($now_activity['type'] == 1 && $now_activity['is_finish']){				$this->error('该一元夺宝活动已售罄结束，无法编辑修改');			}			$extension_image_class = new extension_image();			//图片			$tmp_pic_arr = explode(';',$now_activity['pic']);			foreach($tmp_pic_arr as $key=>$value){				$now_activity['pic_arr'][$key]['title'] = $value;				$now_activity['pic_arr'][$key]['url'] = $extension_image_class->get_image_by_path($value,'s');			}			$now_activity['type_txt'] = $this->type_txt($now_activity['type']);			$now_activity['money'] = floatval($now_activity['money']);			$this->assign('now_activity',$now_activity);			$activity_term_list = array();			if($this->config['activity_sign_term']){				$activity_term_list = D('Extension_activity')->where(array('end_time'=>array('gt',$_SERVER['REQUEST_TIME']),'status'=>'1'))->order('`activity_id` ASC')->select();			}else{				$activity_term_list[0] = D('Extension_activity')->where(array('end_time'=>array('gt',$_SERVER['REQUEST_TIME']),'status'=>'1'))->find();			}			$now_activity_term = array();			foreach($activity_term_list as $value){				if($value['activity_id'] == $now_activity['activity_term']){					$now_activity_term = $value;				}			}			if(empty($now_activity_term)){				$this->error('当前活动期数不存在或已过期，无法编辑该活动');			}			if(empty($activity_term_list) || empty($activity_term_list[0])){				$this->error('平台暂时没有开启的活动！');			}			$this->assign('now_activity_term',$now_activity_term);			$this->assign('activity_term_list',$activity_term_list);			$this->display();		}	}	public function ajax_upload_pic(){		if($_FILES['imgFile']['error'] != 4){			$param = array('size' => $this->config['activity_pic_size']);			$param['thumb'] = true;			$param['imageClassPath'] = 'ORG.Util.Image';			$param['thumbPrefix'] = 'm_,s_';			$param['thumbMaxWidth']  = $this->config['activity_pic_width'];			$param['thumbMaxHeight'] = $this->config['activity_pic_height'];			$param['thumbRemoveOrigin'] = false;			$image = D('Image')->handle($this->merchant_session['mer_id'], 'extension', 1, $param);			if (!$image['error']) {				exit(json_encode(array('error' => 0, 'url' => $image['url']['imgFile'], 'title' => $image['title']['imgFile'])));			} else {				exit(json_encode(array('error' => 1, 'message' => $image['msg'])));			}// 			$img_mer_id = sprintf("%09d",$this->merchant_session['mer_id']);// 			$rand_num = mt_rand(10,99).'/'.substr($img_mer_id,0,3).'/'.substr($img_mer_id,3,3).'/'.substr($img_mer_id,6,3);// 			$upload_dir = './upload/extension/'.$rand_num.'/';// 			if(!is_dir($upload_dir)){// 				mkdir($upload_dir,0777,true);// 			}// 			import('ORG.Net.Upload File');// 			$upload = new Upload File();// 			$upload->maxSize = $this->config['activity_pic_size']*1024*1024;// 			$upload->allowExts = array('jpg','jpeg','png','gif');// 			$upload->allowTypes = array('image/png','image/jpg','image/jpeg','image/gif');// 			$upload->savePath = $upload_dir;// 			$upload->thumb=true;// 			$upload->imageClassPath = 'ORG.Util.Image';// 			$upload->thumbPrefix = 'm_,s_';// 			$upload->thumbMaxWidth  = $this->config['activity_pic_width'];// 			$upload->thumbMaxHeight = $this->config['activity_pic_height'];// 			$upload->thumbRemoveOrigin = false;// 			$upload->saveRule = 'uniqid';// 			if($upload->upload()){// 				$uploadList = $upload->getUpload FileInfo();// 				$title = $rand_num.','.$uploadList[0]['savename'];// 				$extension_image_class = new extension_image();// 				$url = $extension_image_class->get_image_by_path($title,'s');// 				exit(json_encode(array('error' => 0,'url' =>$url,'title'=>$title)));// 			}else{// 				exit(json_encode(array('error' => 1,'message' =>$upload->getErrorMsg())));// 			}		}else{			exit(json_encode(array('error' => 1,'message' =>'没有选择图片')));		}	}}