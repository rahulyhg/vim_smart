<?php/* * 社区首页 * */class IndexAction extends BaseAction{	protected $village_id;	protected $village;		public function _initialize(){		parent::_initialize();		$this->village_id = $this->house_session['village_id'];		$this->village = D('House_village')->field(true)->where(array('village_id'=>$this->village_id))->find();		if(!session('is_o2o_system')){            if(empty($this->village)){                $this->error('该小区不存在！');            }            if($this->village['status'] == 0 && MODULE_NAME == 'Index' && (ACTION_NAME != 'index' && ACTION_NAME != 'village_edit')){                $this->assign('jumpUrl',U('Index/index'));                $this->error('您需要先完善信息才能继续操作');            }        }	}	    public function index(){		$village_id = $this->village_id;		if($village_id){			$village_info = D('House_village')->field(true)->where(array('village_id'=>$village_id))->find();			$village_info['long'] = floatval($village_info['long']);			$village_info['lat'] = floatval($village_info['lat']);			$this->assign('village_info',$village_info);            //获取社区抄表配置            $re_setmeter = re_setmeter_config($this->village_id);            $this->assign('re_setmeter',$re_setmeter);		}		//dump($re_setmeter);exit();		$this->display();    }    /**     * 抄表配置修改     * @param $sstr     * @update-time: 2017-08-23 15:48:42     * @author: 王亚雄     */    public function edit_re_setmeter($use_arr){        $config = re_setmeter_config($this->village_id);        foreach ($config as $key=>&$row){            $row['is_use'] = $this->get_use($row['sign'],$use_arr);            foreach($row['_child'] as $k=>&$v){                $v = array_merge($v,$this->get_price($v['sign'],$use_arr));            }        }        $re =  M('house_village','pigcms_')            ->where('village_id=%d',$this->village_id)            ->setField('re_setmeter',serialize($config));        return $re;    }    //获取使用状态 for 抄表配置修改    function get_use($sign,$use_arr){        foreach($use_arr as $k=>$v){            if($sign==$k) return $v['is_use']?:'f';        }        return 'f';    }    //获取单价 for 抄表配置修改    function get_price($sign,$use_arr){        foreach($use_arr as $k=>$v){            if(array_key_exists($sign,$v)){                return $v[$sign];            }        }        return null;    }    /**     * 弹出层 二维码列表     * @param $usernum     * @update-time: 2017-08-23 15:49:24     * @author: 王亚雄     */    public function re_setmeter_qr($usernum){        $village_id = M('house_village_user_bind','pigcms_')->where('usernum="%s"',$usernum)->getField('village_id');        $re_setmeter = re_setmeter_config($village_id,$usernum);        $model = new ReSetmeterModel();        //获取所有tid        $ub_data = M('house_village_user_bind')->alias('ub')            ->field('ubt.id')            ->join('left join __HOUSE_VILLAGE_USER_BIND_TENEMENT__ ubt on ub.usernum=ubt.usernum')            ->where('ub.usernum="%s"',$usernum)            ->select();        $tmp = array();        foreach($ub_data as $ub){            foreach($re_setmeter as $key => $row){                $tmp[$row['sign']][$ub['id']] = $model->get_device_option($usernum,$row['sign'],$ub['id']);                $tmp[$row['sign']]['is_use'] = $row['is_use'];                $tmp[$row['sign']]['desc'] = $row['desc'];            }        }        $this->assign('re_setmeter',$tmp);        $this->display();    }    /**     * 设置硬件码     * @param $device_code 硬件码     * @param $tid 楼层表主键     * @param $sign 水电表类型标记     * @update-time: 2017-08-23 15:49:37     * @author: 王亚雄     */    public function edit_device_code($device_code,$tid,$sign){        $model = new ReSetmeterModel();        $re = $model->save_device_code($device_code,$tid,$sign);        if($re!==false){            $this->ajaxReturn(array('err'=>0,'msg'=>'成功','data'=>null));        }else{            $this->ajaxReturn(array('err'=>1,'msg'=>'失败','data'=>null));        }    }    /**     * 显示二维码     * @param $url 扫码后的跳转地址     * @update-time: 2017-08-23 15:50:05     * @author: 王亚雄     */    public function show_qr($url){      qr($url);    }    /**     * 打印     * @param $img 图片链接     * @update-time: 2017-08-23 15:50:02     * @author: 王亚雄     */    public function print_img($img){        $this->assign('img',$img);        $this->display();    }    /**     * TODO::打印抄表图该业主的所有抄表二维码     * @update-time: 2017-08-23 15:50:48     * @author: 王亚雄     */    public function print_re_setmeter($usernum){    }    public function village_edit(){        //dump($_POST);exit();    	$village_id = $this->village_id;    	$condition_village['village_id'] = $village_id;    	    	if(IS_POST){    		if(empty($_POST['long_lat'])){    			$this->error('小区经纬度必填！');    		}    		if(empty($_POST['village_address'])){    			$this->error('小区地址必填！');    		}    			    		$long_lat = explode(',',$_POST['long_lat']);    		$_POST['long'] = floatval($long_lat[0]);    		$_POST['lat'] = floatval($long_lat[1]);    		$_POST['status'] = 1;			if(empty($_POST['long']) || empty($_POST['lat'])){    			$this->error('请选取小区经纬度！');    		}    		    		$result = D('House_village')->where($condition_village)->data($_POST)->save();    		if($result !== false){                $res = $this->edit_re_setmeter($_POST['re_setmeter']);    			$this->success('修改成功！');    		}else{    			$this->error('修改失败！请重试。');    		}    	}    }    public function active_group_list(){    	$village_id = $this->village_id;    	$group = D('House_village_group')->get_limit_list_page($village_id);    	    	$this->assign('group',$group);    	    	$this->display();    }        public function active_group(){    	if(IS_AJAX){    		$group_id = intval($_POST['group_id']);    		$sort = $_POST['sort']?intval($_POST['sort']):0;    		$result = $this->checkVillageGroup($group_id);    		if($result['error'] == 0){    				    			$data['village_id'] = $this->village_id;    			$data['group_id'] = $group_id;    			$data['sort'] = $sort;    			if(D('house_village_group')->add($data)){    				$this->ajaxReturn(array('error'=>0));    			}    				    			$this->ajaxReturn(array('msg'=>'保存失败请重试','error'=>1));    		}elseif($result['error'] == 1){    			$this->ajaxReturn(array('msg'=>$result['msg'],'error'=>1));    		}else{    			$this->ajaxReturn(array('msg'=>'保存失败请重试','error'=>1));    		}    		exit;    	}else{    		$this->display();    	}    }        public function check_group(){    	if(IS_AJAX){    		$village_id = $this->village_id;    		$group_id = $_POST['group_id'];    		    		$result = $this->checkVillageGroup($group_id);    		if($result['error'] == 0){    			$this->ajaxReturn($result);    		}elseif($result['error'] == 1){    			$this->ajaxReturn(array('msg'=>$result['msg'],'error'=>1));    		}else{    			$this->ajaxReturn(array('msg'=>'暂无匹配的团购信息','error'=>1));;    		}    		exit;    	}    }       	public function active_group_del(){   		if(IS_AJAX){   			$group_id = $_POST['group_id'];   			if(!$group_id){   				$this->ajaxReturn( array('msg'=>'信息错误','error'=>1));   			}   			$condition['village_id'] = $this->village_id;   			$condition['group_id'] = $group_id;   			$village_group = D('House_village_group')->where($condition)->find();   			if(!$village_group){   				$this->ajaxReturn( array('msg'=>'暂无此信息','error'=>1));   			}   			if(D('House_village_group')->where($condition)->delete()){   				$this->ajaxReturn( array('msg'=>'删除成功','error'=>0));   			}   			$this->ajaxReturn( array('msg'=>'删除失败','error'=>1));   			exit;   		}   	}   	    public function checkVillageGroup($group_id){    	$village_id = $this->village_id;    	    	if(!$group_id){    		return array('msg'=>'检测通过之后才能保存哦','error'=>1);    	}    	    	$village_group = D('House_village_group')->field(true)->where(array('village_id'=>$village_id,'group_id'=>$group_id))->find();    	if($village_group){    		return array('msg'=>'您已经保存该团购了，请勿重复操作','error'=>1);    	}    	    	$now_time = $_SERVER['REQUEST_TIME'];    	$group_info = D('')->field('`g`.`name` AS `group_name`,`m`.`name` AS `merchant_name`')->table(array(C('DB_PREFIX').'group'=>'g',C('DB_PREFIX').'merchant'=>'m'))->where("`g`.`mer_id`=`m`.`mer_id` AND `g`.`status`='1' AND `m`.`status`='1' AND `g`.`type`='1' AND `g`.`begin_time`<'$now_time' AND `g`.`end_time`>'$now_time' AND `g`.`group_id` ='$group_id'")->find();    	if(!empty($group_info)){    		$group_info['error'] = 0;    		return $group_info;    	}    	return array('msg'=>'暂无匹配的团购信息','error'=>1);    }        // 预约相关    public function active_appoint_list(){    	$village_id = $this->village_id;    	$appoint = D('House_village_appoint')->get_limit_list_page($village_id);    	    	$this->assign('appoint',$appoint);    	$this->display();    }        public function active_appoint(){    	if(IS_POST){    		$appoint_id = intval($_POST['appoint_id']);    		$sort = $_POST['sort']?intval($_POST['sort']):0;        		$result = $this->checkVillageAppoint($appoint_id);    		if($result['error'] == 0){				if($_FILES['img']['error'] != 4){					$image = D('Image')->handle($this->village['village_id'],'house/appoint',3,array('size'=>5),false);					if (!$image['error']) {						$data['pic'] = str_replace('/upload/house/appoint/','',$image['url']['img']);					}else{						$this->error($image['msg']);					}					$data['label'] = $_POST['label'];					$data['index_show'] = '1';				}    			$data['village_id'] = $this->village_id;    			$data['appoint_id'] = $appoint_id;    			$data['sort'] = $sort;    			    			if(D('house_village_appoint')->add($data)){					$this->success('添加成功');    			}else{					$this->error('保存失败请重试');				}    		}elseif($result['error'] == 1){				$this->error($result['msg']);    		}else{				$this->error('保存失败请重试');    		}    	}else{    		$this->display();    	}    }	public function active_appoint_edit(){		$now_acitive = D('house_village_appoint')->field(true)->where(array('pigcms_id'=>$_GET['id'],'village_id'=>$this->village['village_id']))->find();		if(empty($now_acitive)){			$this->error('当前推荐的预约不存在');		}    	if(IS_POST){			$data['pigcms_id'] = $now_acitive['pigcms_id'];    		$appoint_id = intval($_POST['appoint_id']);    		$sort = $_POST['sort']?intval($_POST['sort']):0;        		$result = $this->checkVillageAppoint($appoint_id);    		if($result['error'] == 0){				if($_FILES['img']['error'] != 4){					$image = D('Image')->handle($this->village['village_id'],'house/appoint',3,array('size'=>5),false);					if (!$image['error']) {						$data['pic'] = str_replace('/upload/house/appoint/','',$image['url']['img']);						unset($now_acitive['pic']);					}else{						$this->error($image['msg']);					}					$data['label'] = $_POST['label'];					$data['index_show'] = '1';				}				if(empty($now_acitive['pic']) && empty($label['pic'])){					unset($data['label']);					$data['index_show'] = '0';				}else{					$data['label'] = $_POST['label'];				}				    			$data['village_id'] = $this->village_id;    			$data['appoint_id'] = $appoint_id;    			$data['sort'] = $sort;    			    			if(D('house_village_appoint')->data($data)->save()){					$this->success('编辑成功');    			}else{					$this->error('保存失败请重试');				}    		}elseif($result['error'] == 1){				$this->error($result['msg']);    		}else{				$this->error('保存失败请重试');    		}    	}else{			$this->assign('now_acitive',$now_acitive);    		$this->display();    	}    }        public function check_appoint(){    	if(IS_AJAX){    		$village_id = $this->village_id;    		$appoint_id = $_POST['appoint_id'];        		$result = $this->checkVillageAppoint($appoint_id);    		if($result['error'] == 0){    			$this->ajaxReturn($result);    		}elseif($result['error'] == 1){    			$this->ajaxReturn(array('msg'=>$result['msg'],'error'=>1));    		}else{    			$this->ajaxReturn(array('msg'=>'暂无匹配的预约信息','error'=>1));;    		}    		exit;    	}    }        public function active_appoint_del(){    	if(IS_AJAX){    		$appoint_id = $_POST['appoint_id'];    		if(!$appoint_id){    			$this->ajaxReturn( array('msg'=>'信息错误','error'=>1));    		}    		$condition['village_id'] = $this->village_id;    		$condition['appoint_id'] = $appoint_id;    		$village_appoint = D('House_village_appoint')->field(true)->where($condition)->find();    		if(!$village_appoint){    			$this->ajaxReturn( array('msg'=>'暂无此信息','error'=>1));    		}    		if(D('House_village_appoint')->where($condition)->delete()){    			$this->ajaxReturn( array('msg'=>'删除成功','error'=>0));    		}    		$this->ajaxReturn( array('msg'=>'删除失败','error'=>1));    		exit;    	}    }        public function checkVillageAppoint($appoint_id){    	$village_id = $this->village_id;    	     	if(!$appoint_id){    		return array('msg'=>'检测通过之后才能保存哦','error'=>1);    	}    	$condition = array('village_id'=>$village_id,'appoint_id'=>$appoint_id);		if($_GET['id']){			$condition['pigcms_id'] = array('neq',$_GET['id']);		}    	$village_appoint = D('House_village_appoint')->field(true)->where($condition)->find();    	if($village_appoint){    		return array('msg'=>'您已经保存该预约了，请勿重复操作','error'=>1);    	}    	     	$now_time = $_SERVER['REQUEST_TIME'];    	$appoint_info = D('')->field('`a`.`appoint_name` ,`m`.`name` AS `merchant_name`')->table(array(C('DB_PREFIX').'appoint'=>'a',C('DB_PREFIX').'merchant'=>'m'))->where("`a`.`mer_id`=`m`.`mer_id` AND `a`.`check_status`='1' AND `a`.`appoint_status`='0' AND `m`.`status`='1' AND `a`.`start_time`<'$now_time' AND `a`.`end_time`>'$now_time' AND `a`.`appoint_id`='$appoint_id'")->find();    	if(!empty($appoint_info)){    		$appoint_info['error'] = 0;    		return $appoint_info;    	}    	return array('msg'=>'暂无匹配的预约信息','error'=>1);    }        // 快店相关    public function active_meal_list(){    	    	$village_id = $this->village_id;    	$meal = D('House_village_meal')->get_limit_list_page($village_id);    	$this->assign('meal',$meal);    	$this->display();    }        public function active_meal(){    	if(IS_AJAX){    		$store_id = intval($_POST['store_id']);    		$sort = $_POST['sort']?intval($_POST['sort']):0;        		$result = $this->checkVillageMeal($store_id);    		if($result['error'] == 0){        			$data['village_id'] = $this->village_id;    			$data['store_id'] = $store_id;    			$data['sort'] = $sort;    			if(D('house_village_meal')->add($data)){    				$this->ajaxReturn(array('error'=>0));    			}        			$this->ajaxReturn(array('msg'=>'保存失败请重试','error'=>1));    		}elseif($result['error'] == 1){    			$this->ajaxReturn(array('msg'=>$result['msg'],'error'=>1));    		}else{    			$this->ajaxReturn(array('msg'=>'保存失败请重试','error'=>1));    		}    		exit;    	}else{    		$this->display();    	}    }        public function check_meal(){    	if(IS_AJAX){    		$village_id = $this->village_id;    		$store_id = $_POST['store_id'];        		$result = $this->checkVillageMeal($store_id);    		if($result['error'] == 0){    			$this->ajaxReturn($result);    		}elseif($result['error'] == 1){    			$this->ajaxReturn(array('msg'=>$result['msg'],'error'=>1));    		}else{    			$this->ajaxReturn(array('msg'=>'暂无匹配的快店信息','error'=>1));;    		}    		exit;    	}    }        public function active_meal_del(){    	if(IS_AJAX){    		$store_id = $_POST['store_id'];    		if(!$store_id){    			$this->ajaxReturn( array('msg'=>'信息错误','error'=>1));    		}    		$condition['village_id'] = $this->village_id;    		$condition['store_id'] = $store_id;    		$village_appoint = D('House_village_meal')->where($condition)->find();    		if(!$village_appoint){    			$this->ajaxReturn( array('msg'=>'暂无此信息','error'=>1));    		}    		if(D('House_village_meal')->where($condition)->delete()){    			$this->ajaxReturn( array('msg'=>'删除成功','error'=>0));    		}    		$this->ajaxReturn( array('msg'=>'删除失败','error'=>1));    		exit;    	}    }        public function checkVillageMeal($store_id){    	$village_id = $this->village_id;        	if(!$store_id){    		return array('msg'=>'检测通过之后才能保存哦','error'=>1);    	}        	$village_meal= D('House_village_meal')->where(array('village_id'=>$village_id,'store_id'=>$store_id))->find();    	if($village_meal){    		return array('msg'=>'您已经保存该快店了，请勿重复操作','error'=>1);    	}        	$now_time = $_SERVER['REQUEST_TIME'];    	$meal_info = D('')->field('`m`.`name` AS `merchant_name`,`ms`.`name` AS `store_name`')->table(array(C('DB_PREFIX').'merchant_store'=>'ms',C('DB_PREFIX').'merchant_store_meal'=>'msm',C('DB_PREFIX').'merchant'=>'m'))->where("`ms`.`have_meal`='1' AND `ms`.`status`='1' AND `m`.`mer_id`=`ms`.`mer_id` AND `ms`.`store_id`=`msm`.`store_id` AND `ms`.`store_id`='$store_id'")->find();    	if(!empty($meal_info)){    		$meal_info['error'] = 0;    		return $meal_info;    	}    	return array('msg'=>'暂无匹配的快店信息','error'=>1);    }    //合同列表    public function contract() {        if ($_SESSION['system']['id'] != 1) $this->contract_auth();//权限过滤        $filed = array(            'hvs.*',            'hv.village_name'        );        $shequArr = D('house_village_shequ')->alias('hvs')            ->field($filed)            ->join('left join __HOUSE_VILLAGE__ hv on hv.village_id = hvs.village_id')            ->where(array('hv.village_id'=>$this->village_id))            ->select();        if ($shequArr) $this->assign('shequArr',$shequArr);        $this->display();    }    //合同详情页    public function contract_edit() {        if ($_SESSION['system']['id'] != 1) $this->contract_auth();//权限过滤        if ($_POST) {            $id = $_POST['id'];            if (!$id) $this->error('错误警告',U("Index/contract"));            if(empty($_POST['pic'])){                $this->error('请至少上传一张图片');            }            $data['pic_info'] = implode(';',$_POST['pic']);            $data['contract_name'] =  $_POST['contract_name'];//合同名称            $data['contract_start'] =  $_POST['contract_start'];//合同签订时间            $data['contract_end'] =  $_POST['contract_end'];//合同截止时间            $data['update_name'] = $_SESSION['system']['realname'];//修改人真实姓名            $data['update_time'] = time();//修改时间            $re = D('house_village_shequ')->where(array('id'=>$id))->save($data);            if ($re) {                $this->success('修改成功');            } else {                $this->error('修改失败');            }        } else {            $id = $_GET['id'];            if (!$id) $this->error('未选择合同',U("Index/contract"));            $shequArr = D('house_village_shequ')->where(array('id'=>$id))->find();            if(!empty($shequArr['pic_info'])){                $tmp_pic_arr = explode(';',$shequArr['pic_info']);                foreach($tmp_pic_arr as $key=>$value){                    $shequArr['pic'][$key]['title'] = $value;                    $shequArr['pic'][$key]['url'] = $this->get_image_by_path($value);                }            }            if ($shequArr) $this->assign('shequArr',$shequArr);            $this->display();        }    }    //添加合同    public function contract_add() {        if ($_SESSION['system']['id'] != 1) $this->contract_auth();//权限过滤        if ($_POST) {            if(empty($_POST['pic'])){                $this->error('请至少上传一张图片');            }            $data['pic_info'] = implode(';',$_POST['pic']);            $data['contract_name'] =  $_POST['contract_name'];//合同名称            //合同名称不可重复            if (D('house_village_shequ')->where(array('contract_name'=>$data['contract_name']))->find()) $this->error('合同名称不可重复');            $data['contract_start'] =  $_POST['contract_start'];//合同签订时间            $data['contract_end'] =  $_POST['contract_end'];//合同截止时间            $data['village_id'] = $this->village_id;//对应社区            $data['admin_id'] = $_SESSION['system']['id'];//创建人id            $data['admin_name'] = $_SESSION['system']['realname'];//创建人姓名            $data['create_time'] = time();//创建时间            $re = D('house_village_shequ')->add($data);            if ($re) {                $this->success('添加成功');            } else {                $this->error('添加失败');            }        } else {            $this->display();        }    }    //删除合同    public function contract_del() {        if ($_SESSION['system']['id'] != 1) $this->contract_auth();//权限过滤        $id = $_GET['id'];        if (!$id) $this->error('错误警告');        $re = D('house_village_shequ')->where(array('id'=>$id))->delete();        if ($re) {            $this->success('删除成功',U('Index/contract'));        } else {            $this->error('删除失败',U('Index/contract'));        }    }    /*     * 删除合同图片     */    public function store_ajax_del_pic(){        $this->del_image_by_path($_POST['path']);    }    /*根据商品数据表的图片字段来删除图片*/    public function del_image_by_path($path){        if(!empty($path)){            $image_tmp = explode(',',$path);            unlink('./upload/store/'.$image_tmp[0].'/'.$image_tmp['1']);            return true;        }else{            return false;        }    }    /*     * 添加合同图片     */    public function store_ajax_upload_pic() {        if ($_FILES['imgFile']['error'] != 4) {            $image = D('Image')->handle($this->merchant_session['mer_id'], 'store', 1);            if ($image['error']) {                exit(json_encode($image));            } else {                $title = $image['title']['imgFile'];                $url = $this->get_image_by_path($title);                exit(json_encode(array('error' => 0, 'url' => $url, 'title' => $title)));            }        } else {            exit(json_encode(array('error' => 1,'message' =>'没有选择图片')));        }    }    /*根据商品数据表的图片字段的一段来得到图片*/    public function get_image_by_path($path){        if(!empty($path)){            $image_tmp = explode(',',$path);            $return = C('config.site_url').'/upload/store/'.$image_tmp[0].'/'.$image_tmp['1'];            return $return;        }else{            return false;        }    }    /*     * 图片上传     */    public function upload() {        import('ORG.Net.UploadFile');        $upload = new UploadFile();// 实例化上传类        $upload->maxSize = 3145728;// 设置附件上传大小        $upload->allowExts = array('jpg', 'gif', 'png', 'jpeg');// 设置附件上传类型        $upload->savePath = './upload/';// 设置附件上传目录        if (!$upload->upload()) {// 上传错误提示错误信息            $this->error($upload->getErrorMsg());        } else {// 上传成功 获取上传文件信息            $info = $upload->getUploadFileInfo();        }        return $info;    }    //查看合同权限管理    public function contract_auth() {        $admin_id = $_SESSION['system']['id'];        $adminArr = D('admin')->where(array('id'=>$admin_id))->find();        if ($adminArr['village_id'] != $this->village_id) $this->error('抱歉，您不属于该小区');        $roleArr = explode(',',$adminArr['role_id']);        if (!in_array(68,$roleArr) && !in_array(78,$roleArr)) {            $this->error('抱歉，您没有该权限');        }    }       }