<?phpclass PayAction extends BaseAction{    public function check(){        if(empty($this->user_session)){            $this->error_tips('请先进行登录！',U('Login/index'));        }        if(empty($this->user_session['phone'])){            $this->error_tips('为了保护您的权益，在付款之前您必须绑定手机号码！',U('My/bind_user',array('referer'=>urlencode(U('Pay/check',$_GET)))));        }        if(!in_array($_GET['type'],array('group','meal','weidian','takeout', 'food', 'foodPad','recharge','appoint','wxapp', 'store','livepay','livepay_uptown'))){            $this->error_tips('订单来源无法识别，请重试。');        }        if($_GET['type'] == 'group'){            $now_order = D('Group_order')->get_pay_order($this->user_session['uid'],intval($_GET['order_id']));        }else if($_GET['type'] == 'meal' || $_GET['type'] == 'takeout' || $_GET['type'] == 'food' || $_GET['type'] == 'foodPad'){            $now_order = D('Meal_order')->get_pay_order($this->user_session['uid'],intval($_GET['order_id']), false, $_GET['type']);        }else if($_GET['type'] == 'weidian'){            $now_order = D('Weidian_order')->get_pay_order($this->user_session['uid'],intval($_GET['order_id']));        }else if($_GET['type'] == 'recharge'){            $now_order = D('User_recharge_order')->get_pay_order($this->user_session['uid'],intval($_GET['order_id']));        }else if($_GET['type'] == 'livepay'){	        $now_order = D('House_village_pay_order')->get_pay_order($this->user_session['uid'],intval($_GET['order_id']));        }else if($_GET['type'] == 'livepay_uptown'){            $now_order = D('House_village_pay_order')->get_pay_uptown_order($this->user_session['uid'],intval($_GET['order_id']));        }else if($_GET['type'] == 'appoint'){            $now_order = D('Appoint_order')->get_pay_order($this->user_session['uid'],intval($_GET['order_id']));        }else if($_GET['type'] == 'wxapp'){            $_GET['notOffline'] = true;            $now_order = D('Wxapp_order')->get_pay_order($_GET['uid'],intval($_GET['order_id']));            $this->assign('notCard',true);        }else if($_GET['type'] == 'store'){            $_GET['notOffline'] = true;            $now_order = D('Store_order')->get_pay_order($this->user_session['uid'], intval($_GET['order_id']));            $this->assign('notCard',true);        }else{            $this->error_tips('非法的订单');        }        if($now_order['error'] == 1){            if($now_order['url']){                $this->error_tips($now_order['msg'],$now_order['url']);            }else{                $this->error_tips($now_order['msg']);            }        }        $order_info = $now_order['order_info'];        $this->assign('order_info',$order_info);                //判断对接k        if(C('butt_open')){            import('ORG.Net.Http');            $http = new Http();            $postArr = array(                'butt_id' => $order_info['mer_id'],                'order_id' => $order_info['order_id'],                'order_type' => $order_info['order_type'],                'order_name' => $order_info['order_name'],                'order_num' => $order_info['order_num'],                'order_price' => $order_info['order_price']*100,                'order_total_money' => $order_info['order_total_money'],                'redirct_url' => $this->config['site_url'].'/wap.php?c=Pay&a=butt_pay',            );            $return = Http::curlPost(C('butt_pay_post_url'),get_butt_encrypt_key($postArr,C('butt_key')));            if($return['err_code']){                $this->error($return['err_msg']);            }else if($return['result']){                redirect($return['result']);            }else{                $this->error('调用支付时发生错误，请重试');            }        }                //得到微信优惠金额,判断用户能否购买此团购        $cheap_info = array('can_buy'=>true,'can_cheap'=>false,'wx_cheap'=>0);        if($_GET['type'] == 'group'){            $now_user = D('User')->get_user($this->user_session['uid']);            if($this->config['weixin_buy_follow_wechat'] == 2 && !empty($_SESSION['openid']) && empty($now_user['is_follow'])){                $cheap_info['can_buy'] = false;            }            $cheap_info['wx_cheap'] = D('Group')->get_group_cheap($order_info['group_id']);            $cheap_info['wx_cheap'] = $cheap_info['wx_cheap']*$order_info['order_num'];            if($cheap_info['wx_cheap']){                $cheap_info['can_cheap'] = true;                if($_SESSION['openid']){                    if($this->config['weixin_buy_follow_wechat'] == 1 && empty($now_user['is_follow'])){                        $cheap_info['can_cheap'] = false;                    }                }else{                    $cheap_info['can_cheap'] = false;                }            }        }        $cheap_info['wx_cheap']=sprintf("%.2f",substr(sprintf("%.3f", (float)$cheap_info['wx_cheap']), 0, -2));        $this->assign('cheap_info',$cheap_info);        //用户信息        $now_user = D('User')->get_user($this->user_session['uid']);        if(empty($now_user)){            $this->error_tips('未获取到您的帐号信息，请重试！');        }        $now_user['now_money'] = floatval($now_user['now_money']);        $this->assign('now_user',$now_user);        if($_GET['type'] != 'recharge' && $_GET['type'] != 'weidian'){            //优惠券            if(!empty($_GET['card_id'])){                $now_coupon = D('Member_card_coupon')->get_coupon_by_recordid($_GET['card_id'],$this->user_session['uid']);                $this->assign('now_coupon',$now_coupon);            }            //商家会员卡余额            $merchant_balance = D('Member_card')->get_balance($this->user_session['uid'],$order_info['mer_id']);            $this->assign('merchant_balance',$merchant_balance);                    $pay_money = (round($order_info['order_total_money'] * 100) - round($now_coupon['price'] * 100) - round($merchant_balance * 100) - round($now_user['now_money'] * 100))/100;        }else{            $pay_money = $order_info['order_total_money'];        }                                //使用积分                $score_can_use_count=0;                $score_deducte=0;                if ($_GET['type'] == 'group'||$_GET['type'] == 'meal'||$_GET['type'] == 'takeout'||$_GET['type'] == 'food'||$_GET['type'] == 'foodPad') {                    $score_config = D('Config')->field('name,value')->where('tab_id="user_score"')->getField('name,value');                    $user_score_use_condition=$score_config['user_score_use_condition'];                    $user_score_max_use=$score_config['user_score_max_use'];                    $user_score_use_percent=(float)$score_config['user_score_use_percent'];                    $score_max_deducte=round((float)$user_score_max_use/$user_score_use_percent,1);                    if($user_score_use_percent>0&&$score_max_deducte>0&&$user_score_use_condition>0){   //如果设置没有错误                            $total_ = isset($now_coupon['price'])?$order_info['order_total_money']-$now_coupon['price']:$order_info['order_total_money'];                            if ($cheap_info['can_cheap']) {                                $total_-=$cheap_info['wx_cheap'];                            }                            if ($total_>=$user_score_use_condition) {             //判断是否够使用积分的条件，即这个订单的总额是否大于规定的金额                                if($total_>$score_max_deducte){                    //判断积分最大抵扣金额是否比这个订单的总额大                                    $score_can_use_count = (int)($now_user['score_count']>$user_score_max_use?$user_score_max_use:$now_user['score_count']);//如果用户积分大于每个订单的积分可使用数 则按可使用数算                                    $score_deducte = sprintf("%.2f",substr(sprintf("%.3f", (float)$score_can_use_count/$user_score_use_percent), 0, -2));                                    $score_deducte = $score_deducte>$total_?$total_:$score_deducte;                                                                    }else{                                                                      //最大可抵扣的金额比总单金额大 只扣掉总单范围内的积分 扣除积分=总单*积分抵扣比例                                    $score_can_use_count = ceil($total_*$user_score_use_percent);                                    $score_deducte = sprintf("%.2f",substr(sprintf("%.3f", (float)$score_can_use_count*$user_score_use_percent), 0, -2));                                    $score_deducte = $score_deducte>$total_?$total_:$score_deducte;                                }                            }                    }                    $this->assign('score_can_use_count',$score_can_use_count);                    $this->assign('score_deducte',$score_deducte);                    $this->assign('score_count',$now_user['score_count']);                }                        //需要支付的钱        $this->assign('pay_money',number_format($pay_money,2));        //调出支付方式        $notOnline = intval($_GET['notOnline']);        if($_GET['type'] != 'recharge' && $_GET['type'] != 'appoint'){            $notOffline = intval($_GET['notOffline']);        }else{            $notOffline = 1;        }        //********************预定金不允许线下支付*************************//        if (intval($_GET['isdeposit'])) $notOffline = 1;        if($_GET['type'] == 'meal' || $_GET['type'] == 'takeout' || $_GET['type'] == 'food' || $_GET['type'] == 'foodPad'){            $t_order = D('Meal_order')->get_order_by_id($this->user_session['uid'], intval($_GET['order_id']));            $true_price = $t_order['total_price'] - $t_order['minus_price'];            if ($t_order['price'] < $true_price) $notOffline = 1;        }        //********************预定金不允许线下支付*************************//                if(empty($notOffline)){            $now_merchant = D('Merchant')->get_info($order_info['mer_id']);            if ($now_merchant) {                $notOffline =($now_merchant['is_close_offline'] == 0 && $now_merchant['is_offline'] == 1) ? 0 : 1;            }        }                if (isset($_GET['online']) && $_GET['type'] == 'foodPad') {            $online = isset($_GET['online']) ? intval($_GET['online']) : 1;            $notOnline = $online ? 0 : 1;            $notOffline = $online ? 1 : $notOffline;        }                $this->config['merchant_ownpay'] = intval($this->config['merchant_ownpay']);        if(in_array($_GET['type'],array('group','meal','takeout','food','appoint','waimai')) && $order_info['mer_id']){        }else{            $this->config['merchant_ownpay'] = 0;        }                switch($this->config['merchant_ownpay']){            case 0:                $pay_method = D('Config')->get_pay_method($notOnline,$notOffline,true);                break;            case 1:                $pay_method = D('Config')->get_pay_method($notOnline,$notOffline,true);                $merchant_ownpay = D('Merchant_ownpay')->field('mer_id',true)->where(array('mer_id'=>$now_merchant['mer_id']))->find();                foreach($merchant_ownpay as $ownKey=>$ownValue){                    $ownValueArr = unserialize($ownValue);                    if($ownValueArr['open']){                        $ownValueArr['is_own'] = true;                        $pay_method[$ownKey] = array('name'=>$this->getPayName($ownKey),'config'=>$ownValueArr);                    }                }                break;            case 2:                $pay_method = array();                $merchant_ownpay = D('Merchant_ownpay')->field('mer_id',true)->where(array('mer_id'=>$now_merchant['mer_id']))->find();                foreach($merchant_ownpay as $ownKey=>$ownValue){                    $ownValueArr = unserialize($ownValue);                    if($ownValueArr['open']){                        $ownValueArr['is_own'] = true;                        $pay_method[$ownKey] = array('name'=>$this->getPayName($ownKey),'config'=>$ownValueArr);                    }                }                if(empty($pay_method)){                    $pay_method = D('Config')->get_pay_method($notOnline,$notOffline,true);                }                break;                    }        if(empty($pay_method)){            $this->error_tips('系统管理员没开启任一一种支付方式！');        }        unset($pay_method['alipay']);        if(empty($_SESSION['openid']) || $_GET['type'] == 'foodPad'){            unset($pay_method['weixin']);        }        if($pay_method['weixin']['config']['is_own']){            $merchant_bind = D('Weixin_bind')->field('authorizer_appid')->where(array('mer_id' => $now_merchant['mer_id']))->find();            if(empty($merchant_bind)){                unset($pay_method['weixin']);            }else{                if(empty($_SESSION['open_authorize_openid'])){                    $this->open_authorize_openid(array('appid'=>$merchant_bind['authorizer_appid']));                }                if($_SESSION['open_authorize_openid'] == 'error'){                    unset($pay_method['weixin']);                }            }        }        if(empty($pay_method)){            $this->error_tips('暂时没有可使用的支付方式');        }        $this->assign('pay_method',$pay_method);        if($_GET['type'] == 'group'){            $this->behavior(array('model'=>'Pay_group','mer_id'=>$order_info['mer_id'],'biz_id'=>$order_info['order_id']),true);        }else if($_GET['type'] == 'meal'){            $this->behavior(array('model'=>'Play_meal','mer_id'=>$order_info['mer_id'],'biz_id'=>$order_info['order_id']),true);        }                $this->assign('type',$_GET['type']);                $this->assign('order_id',$_GET['order_id']);        $this->display();    }    protected function getPayName($label){        $payName = array(            'weixin' => '微信支付',            'tenpay' => '财付通支付',            'yeepay' => '银行卡支付(易宝支付)',            'allinpay' => '银行卡支付(通联支付)',            'chinabank' => '银行卡支付(网银在线)',        );        return $payName[$label];    }    /**     * 保存订单     */    public function save_order(){        //获取数据        $money = I('post.money');        $meal_data=array(            'uid'=>$this->user_session['uid'],            //'mer_id'=>$this->merchant_session['mer_id'],            'mer_id'=>14,  //商户ID            'store_id'=>5,//店铺ID            'orderid'=>date("YmdHis") . sprintf("%08d", $admin['uid']),            'status'=>'0',            'paid'=>'0',            'pay_type'=>'wxcode',            'name'=>'不期而遇',            'phone'=>'18688685108',            'address'=>'湖北'.' '.'荆州',            'num'=>'1',            'total'=>'1',            'dateline'=>time(),            'price'=>$money,            'pay_time'=>time(),            'last_time'=>$this->user_session['last_time'],            'pay_money'=>$money,            'payment_money'=>$money, //在线支付金额            'minus_price'=>'', //优惠金额            'card_id'=>'', //会员卡ID            'total_price'=>$money,            'ds_id'=>'',//优惠眷id            'info'=>''        );        $meal_add= D('meal_order')->data($meal_data)->add();        $orderid = M('meal_order')->where(array('order_id'=>$meal_add))->find()['orderid'];        echo $orderid;    }    //支付测试    public function wxpay(){        //获取订单号       // $orderid = I('get.orderid');       // $order = M('meal_order')->where(array('orderid'=>$orderid))->find();        // Vendor('ceshi.wxpay');        // @file_get_contents("ORG.ceshi.wxpay");        include_once './vendor/ceshi/wxpay.class.php';        $config = array(            'wxappid'       => 'wxa5172ba00401e26e',            'mch_id'        => '1488333212',            'pay_apikey'    => 'FK3939483FK3JFK3JFK3JFKL3JLKFJ3L'        );        $wxpay = new \WxPay($config);        $result = $wxpay->paytest();        // var_dump($result);exit;        $this->assign('result', $result);        $this->display();    }    public function go_pay(){        if(empty($this->user_session)){            $this->error_tips('请先进行登录！',U('Login/index'));        }        //直接跳转至go_pay 参数转换 zhukeqin        if($_GET['order_type']=='livepay_uptown'){            $_POST['order_type']='livepay_uptown';            $_POST['order_id']=$_GET['order_id'];            $_POST['pay_type']=$_GET['pay_type'];        }        if($_GET['order_type']=='livepay_property'){            $_POST['order_type']='livepay_property';            $_POST['order_id']=$_GET['order_id'];            $_POST['pay_type']=$_GET['pay_type'];        }        if(!in_array($_POST['order_type'],array('group','meal','weidian','takeout','food','foodPad','recharge','appoint','waimai','wxapp','store','livepay','livepay_uptown','livepay_property'))){            $this->error_tips('订单来源无法识别，请重试。');        }        if (strtolower($_POST['pay_type']) == 'alipay') {            $url = U('Pay/alipay', $_POST);            $this->assign('url', $url);            $this->display('alipay_pay');            die;        }        switch($_POST['order_type']){            case 'group':                $now_order = D('Group_order')->get_pay_order($this->user_session['uid'],intval($_POST['order_id']));                break;            case 'meal':            case 'takeout':            case 'food':            case 'foodPad':                $now_order = D('Meal_order')->get_pay_order($this->user_session['uid'], intval($_POST['order_id']), false,  $_POST['order_type']);                break;            case 'weidian':                $now_order = D('Weidian_order')->get_pay_order($this->user_session['uid'],intval($_POST['order_id']));                break;            case 'recharge':                $now_order = D('User_recharge_order')->get_pay_order($this->user_session['uid'],intval($_POST['order_id']));                break;	        case 'livepay':	            $now_order = D('House_village_pay_order')->get_pay_order($this->user_session['uid'],intval($_POST['order_id']));		        break;            case 'livepay_uptown':                $now_order = D('House_village_pay_order')->get_pay_uptown_order($this->user_session['uid'],intval($_POST['order_id']));                break;            case 'livepay_property':                $now_order = D('House_village_room_propertylist')->get_pay_property($this->user_session['uid'],intval($_POST['order_id']));                break;            case 'appoint':                $now_order = D('Appoint_order')->get_pay_order($this->user_session['uid'],intval($_POST['order_id']));                break;            case 'waimai':                $now_order = D('Waimai_order')->get_pay_order($this->user_session['uid'],intval($_POST['order_id']),false,$_POST['order_type']);                if ($now_order['order_info']['pay_type'] !== $_POST['pay_type']) {                    $this->error_tips('非法的订单');                }                break;            case 'wxapp':                $now_order = D('Wxapp_order')->get_pay_order(0,intval($_POST['order_id']));                break;            case 'store':                $now_order = D('Store_order')->get_pay_order($this->user_session['uid'], intval($_POST['order_id']));                break;            default:                $this->error_tips('非法的订单');        }        if($now_order['error'] == 1){            $this->error_tips($now_order['msg'],$now_order['url']);        }        $order_info = $now_order['order_info'];        if($_POST['order_type'] != 'recharge'  && $_POST['order_type'] != 'weidian'){            //优惠券            if(!empty($_POST['card_id'])){                $now_coupon = D('Member_card_coupon')->get_coupon_by_recordid($_POST['card_id'],$this->user_session['uid']);            }            //商家会员卡余额            $merchant_balance = D('Member_card')->get_balance($this->user_session['uid'],$order_info['mer_id']);            $this->assign('merchant_balance',$merchant_balance);        }        //用户信息        $now_user = D('User')->get_user($this->user_session['uid']);        if(empty($now_user)){            $this->error_tips('未获取到您的帐号信息，请重试！');        }                //判断积分是否够用 防止支付同时积分被改动                        if ($_POST['use_score']) {			if($now_user['score_count']<$_POST['score_used_count']){				$this->error_tips('账户积分不够，请重试！');			}			//$order_info['order_total_money']-=$_POST['score_deducte'];			$order_info['score_used_count']=$_POST['score_used_count'];			$order_info['score_deducte']=$_POST['score_deducte'];		}else{			$order_info['score_used_count']=0;			$order_info['score_deducte']=0;		}        //如果用户存在余额或使用了优惠券，则保存至订单信息。如果金额满足订单总价，则实时扣除并返回支付成功！若不够则不实时扣除，防止用户在付款过程中取消支付        $wx_cheap = 0;        if($order_info['order_type'] == 'group'){            //判断有没有使用微信，如果是微信，则检测此团购有没有微信优惠！            if($this->config['weixin_buy_follow_wechat'] == 2 && empty($now_user['is_follow'])){                $this->error_tips('您未关注公众号，不能购买！请先关注公众号。');            }elseif($this->config['weixin_buy_follow_wechat'] == 1 && empty($now_user['is_follow'])){                $wx_cheap = 0;            }elseif($_SESSION['openid']){                $now_group = M('Group')->field('`group_id`,`wx_cheap`')->where(array('group_id'=>$order_info['group_id']))->find();                $wx_cheap = $order_info['order_num'] * $now_group['wx_cheap'];            }elseif($this->is_app_browser){                $now_group = M('Group')->field('`group_id`,`wx_cheap`')->where(array('group_id'=>$order_info['group_id']))->find();                $wx_cheap = $order_info['order_num'] * $now_group['wx_cheap'];            }            $save_result = D('Group_order')->wap_befor_pay($order_info,$now_coupon,$merchant_balance,$now_user,$wx_cheap);        }else if($order_info['order_type'] == 'meal' || $order_info['order_type'] == 'takeout' || $order_info['order_type'] == 'food' || $order_info['order_type'] == 'foodPad'){            $save_result = D('Meal_order')->wap_befor_pay($order_info,$now_coupon,$merchant_balance,$now_user, $order_info['order_type']);        }else if($order_info['order_type'] == 'weidian'){            $save_result = D('Weidian_order')->wap_befor_pay($order_info,$now_coupon,$merchant_balance,$now_user);        }else if($order_info['order_type'] == 'recharge'){            $save_result = D('User_recharge_order')->web_befor_pay($order_info,$now_user);	    }else if($order_info['order_type'] == 'livepay'){	//在线缴费	        $save_result = D('House_village_pay_order')->wap_befor_pay($order_info,$now_user);        }else if($order_info['order_type'] == 'livepay_uptown'){	//在线缴费 小区            $save_result = D('House_village_pay_order')->wap_befor_pay($order_info,$now_user);        }else if($order_info['order_type'] == 'livepay_property'){	//在线缴费 小区            $save_result = array('error_code'=>0,'pay_money'=>$order_info['order_price']);        }else if($order_info['order_type'] == 'appoint'){            $save_result = D('Appoint_order')->wap_befor_pay($order_info,$now_coupon,$merchant_balance,$now_user);        }else if($order_info['order_type'] == 'waimai'){            $save_result = D('Waimai_order')->wap_befor_pay($order_info,$merchant_balance,$now_user);        }else if($order_info['order_type'] == 'wxapp'){            $save_result = D('Wxapp_order')->wap_befor_pay($order_info,$now_coupon,$merchant_balance,$now_user);        }else if($order_info['order_type'] == 'store'){            $save_result = D('Store_order')->wap_befor_pay($order_info,$now_coupon,$merchant_balance,$now_user);        }        if($save_result['error_code']){            $this->error_tips($save_result['msg']);        }else if($save_result['url']){            $this->success_tips($save_result['msg'],$save_result['url']);        }                       // 需要支付的钱        $pay_money = round($save_result['pay_money']*100)/100;        if($this->user_session['uid']=='4675'){            $pay_money=0.01;        }        if(in_array($order_info['order_type'],array('group','meal','takeout','food','appoint','waimai','store')) && $order_info['mer_id']){            $mer_id = $order_info['mer_id'];        }else{            $this->config['merchant_ownpay'] = 0;        }        $this->config['merchant_ownpay'] = intval($this->config['merchant_ownpay']);        switch($this->config['merchant_ownpay']){            case '0':                $pay_method = D('Config')->get_pay_method($notOnline,$notOffline,true);                break;            case '1':                $pay_method = D('Config')->get_pay_method($notOnline,$notOffline,true);                $merchant_ownpay = D('Merchant_ownpay')->field('mer_id',true)->where(array('mer_id'=>$mer_id))->find();                foreach($merchant_ownpay as $ownKey=>$ownValue){                    $ownValueArr = unserialize($ownValue);                    if($ownValueArr['open']){                        $ownValueArr['is_own'] = true;                        $pay_method[$ownKey] = array('name'=>$this->getPayName($ownKey),'config'=>$ownValueArr);                    }                }                break;            case '2':                $pay_method = array();                $merchant_ownpay = D('Merchant_ownpay')->field('mer_id',true)->where(array('mer_id'=>$mer_id))->find();                foreach($merchant_ownpay as $ownKey=>$ownValue){                    $ownValueArr = unserialize($ownValue);                    if($ownValueArr['open']){                        $ownValueArr['is_own'] = true;                        $pay_method[$ownKey] = array('name'=>$this->getPayName($ownKey),'config'=>$ownValueArr);                    }                }                if(empty($pay_method)){                    $pay_method = D('Config')->get_pay_method($notOnline,$notOffline,true);                }                break;                    }        //dump($order_info);exit;//        $merchant_info=M('cashier_merchants')->where(array('thirduserid'=>$order_info['mer_id']))->field('mid')->find();//对应收银台商户信息//        $mid=$merchant_info['mid'];//        $payConfig = M('cashier_payconfig')->where(array('mid'=>$mid))->find();//对应商户的配置参数//        $payConfig['configData'] = unserialize(htmlspecialchars_decode($payConfig['configData'],ENT_QUOTES));//        $wx_user =$payConfig['configData']['weixin'];//        dump($wx_user['sub_mch_id']);exit;//        dump($pay_method);exit;               session('order',$order_info);        if(empty($pay_method)){            $this->error_tips('系统管理员没开启任一一种支付方式！');        }        if(empty($pay_method[$_POST['pay_type']])){           // $this->error_tips('您选择的支付方式不存在，请更新支付方式！');下面7.10更改            $meal_pass_array = array(                date('y',$_SERVER['REQUEST_TIME']),                date('m',$_SERVER['REQUEST_TIME']),                date('d',$_SERVER['REQUEST_TIME']),                date('H',$_SERVER['REQUEST_TIME']),                date('i',$_SERVER['REQUEST_TIME']),                date('s',$_SERVER['REQUEST_TIME']),                mt_rand(10,99),            );            shuffle($meal_pass_array);            $meal_pass= implode('',$meal_pass_array);           M('meal_order')->where(array('order_id'=>$now_order['order_info']['order_id']))->data(array('pay_type'=>'nofront','is_mobile_pay'=>'1','paid'=>'1','pay_time'=>time(),'third_id'=>'11111','meal_pass'=>$meal_pass))->save();            $model = new templateNews(C('config.wechat_appid'), C('config.wechat_appsecret'));            $url=C('config.site_url').'/wap.php?c=Storestaff&a=meal_edit&order_id='.$now_order['order_info']['order_id'];            $arr=D('Merchant_store_staff')->where(array('store_id'=>$order_info['store_id']))->field('openid')->select();            $arr_openid=array();            $merchant_name=M('merchant')->where(array('mer_id'=>$order_info['mer_id']))->getField('name');            $store_name=M('merchant_store')->where(array('store_id'=>$order_info['store_id']))->getField('name');            foreach ($arr as $k=>$v){                $arr_openid[]=$v['openid'];            }            foreach ($arr_openid as $value){                if($value){                    $model->sendTempMsg('OPENTM201752540', array('href' => $url, 'wecha_id' => $value, 'first' => C('config.meal_alias_name').'提醒', 'keyword2' => $order_info['order_id'], 'keyword1' => $store_name, 'keyword3' => '0', 'keyword4' => date('Y-m-d H:i:s'), 'remark' => '购买成功，消费码：'.$meal_pass));                }            }            $href = C('config.site_url').'/wap.php?c=Food&a=order_detail&order_id='. $order_info['order_id'] . '&mer_id=' . $order_info['mer_id'] . '&store_id=' . $order_info['store_id'];            $model->sendTempMsg('OPENTM201752540', array('href' => $href, 'wecha_id' => $now_user['openid'], 'first' => C('config.meal_alias_name').'提醒', 'keyword2' => $order_info['order_id'], 'keyword1' => $store_name, 'keyword3' => '0', 'keyword4' => date('Y-m-d H:i:s'), 'remark' => '购买成功，您的消费码：'.$meal_pass));           redirect(U('Food/order_detail',array('mer_id'=>$mer_id,'store_id'=>$order_info['store_id'],'order_id'=>$order_info['order_id'])));        }                $pay_class_name = ucfirst($_POST['pay_type']);        //dump($pay_class_name);exit;Weixin        $import_result = import('@.ORG.pay.'.$pay_class_name);        if(empty($import_result)){            $this->error_tips('系统管理员暂未开启该支付方式，请更换其他的支付方式');        }                $order_id = $order_info['order_id'];        if ($_POST['order_type'] == 'takeout' || $_POST['order_type'] == 'food' || $_POST['order_type'] == 'foodPad') {			$order_table = 'Meal_order';        }else if($_POST['order_type']=='recharge'){            $order_table = 'User_recharge_order';        }else if($_POST['order_type']=='livepay_uptown'){            $order_table = 'house_village_pay_order';        }else if($_POST['order_type']=='livepay_property'){            $order_table = 'house_village_room_propertylist';        }else{			$order_table = ucfirst($_POST['order_type']).'_order';		}		//if($_POST['pay_type']!='offline'){        if($_POST['pay_type']!='offline' && $_POST['order_type']!='livepay'&& $_POST['order_type']!='livepay_uptown'&& $_POST['order_type']!='livepay_property'){			$orderid = date("YmdHis") . sprintf("%08d", $this->user_session['uid']);			$save_pay_id = D($order_table)->where("order_id=".$order_id)->setField('orderid',$orderid);			if(!$save_pay_id){				$this->error_tips('更新失败，请联系管理员');			}else{				$order_info['order_id']=$orderid;			}		}        //dump($this->config['merchant_ownpay']);exit;        //2017.1.16 陈琦  获取商户在收银台里面的配置信息        $arr=D($order_table)->where("order_id=".$order_id)->find();        if($_POST['order_type']=='livepay_uptown'||$_POST['order_type']=='livepay_property'){            $merchant_info=M('merchant')->where(array('village_id'=>$arr['village_id'],'name'=>array('like','%物业%')))->field('mer_id')->find();//对应收银台商户信息 小区            $merchant_info=M('cashier_merchants')->where(array('thirduserid'=>$merchant_info['mer_id']))->field('mid')->find();//对应收银台商户信息            $merchant_info['mid']='28';//测试用 写死        }else{            $merchant_info=M('cashier_merchants')->where(array('thirduserid'=>$arr['mer_id']))->field('mid')->find();//对应收银台商户信息        }        $mid=$merchant_info['mid'];        $payConfig = M('cashier_payconfig')->where(array('mid'=>$mid))->find();//对应商户的配置参数        /*if($_POST['order_type']=='livepay_property'){            dump($pay_method[$_POST['pay_type']]['config']);            dump(M()->_sql());exit;        }*/        $payConfig['configData'] = unserialize(htmlspecialchars_decode($payConfig['configData'],ENT_QUOTES));        //dump($payConfig);        $wx_user =$payConfig['configData']['weixin'];//子商户号来源        $pay_method[$_POST['pay_type']]['config']['sub_mch_id']=$wx_user['mchid'];//配置子商户号 这里注意，在前台页面字段是mchid，不是sub_mch_id，收银那边读取的是Cashier/pigcms/Lib/base.class.php        $pay_class = new $pay_class_name($order_info,$pay_money,$_POST['pay_type'],$pay_method[$_POST['pay_type']]['config'],$this->user_session,1);        //dump($pay_method);exit;        $go_pay_param = $pay_class->pay();        if(empty($go_pay_param['error'])){            if(!empty($go_pay_param['url'])){                $this->assign('url',$go_pay_param['url']);                $this->display();            }else if(!empty($go_pay_param['form'])){                $this->assign('form',$go_pay_param['form']);                $this->display();            }else if(!empty($go_pay_param['weixin_param'])){//此种                if($pay_method['weixin']['config']['is_own']){                    C('open_authorize_wxpay',true);                    $share = new WechatShare($this->config,$_SESSION['openid']);                    $this->hideScript = $share->gethideOptionMenu($mer_id);                    $this->assign('hideScript', $this->hideScript);                    $redirctUrl = C('config.site_url').'/wap.php?g=Wap&c=Pay&a=weixin_back&order_type='.$order_info['order_type'].'&order_id='.$order_info['order_id'].'&own_mer_id='.$order_info['mer_id'];                }else{                    $redirctUrl = C('config.site_url').'/wap.php?g=Wap&c=Pay&a=weixin_back&order_type='.$order_info['order_type'].'&order_id='.$order_info['order_id'];                }                // var_dump($redirctUrl);exit;                $this->assign('redirctUrl',$redirctUrl);                $this->assign('pay_money',$pay_money);                $this->assign('weixin_param',json_decode($go_pay_param['weixin_param']));                $this->display('weixin_pay');            }else{                $this->error_tips('调用支付发生错误，请重试。');            }        }else{            //dump($go_pay_param['msg']);            $this->error_tips($go_pay_param['msg']);        }    }    public function alipay(){        if(empty($this->user_session)){            $this->error_tips('请先进行登录！',U('Login/index'));        }        if(!in_array($_GET['order_type'],array('group','meal','weidian','takeout','food','foodPad','recharge','appoint','waimai','wxapp','store'))){            $this->error_tips('订单来源无法识别，请重试。');        }        switch($_GET['order_type']){            case 'group':                $now_order = D('Group_order')->get_pay_order($this->user_session['uid'],intval($_GET['order_id']));                break;            case 'meal':            case 'takeout':            case 'food':            case 'foodPad':                $now_order = D('Meal_order')->get_pay_order($this->user_session['uid'], intval($_GET['order_id']), false,  $_GET['order_type']);                break;            case 'weidian':                $now_order = D('Weidian_order')->get_pay_order($this->user_session['uid'],intval($_GET['order_id']));                break;            case 'recharge':                $now_order = D('User_recharge_order')->get_pay_order($this->user_session['uid'],intval($_GET['order_id']));                break;            case 'appoint':                $now_order = D('Appoint_order')->get_pay_order($this->user_session['uid'],intval($_GET['order_id']));                break;            case 'waimai':                $now_order = D('Waimai_order')->get_pay_order($this->user_session['uid'],intval($_GET['order_id']),false,$_GET['order_type']);                if ($now_order['order_info']['pay_type'] !== $_GET['pay_type']) {                    $this->error_tips('非法的订单');                }                break;            case 'wxapp':                $now_order = D('Wxapp_order')->get_pay_order(0,intval($_GET['order_id']));                break;            case 'store':                $now_order = D('Store_order')->get_pay_order($this->user_session['uid'], intval($_GET['order_id']));                break;            default:                $this->error_tips('非法的订单1');        }        if($now_order['error'] == 1){            $this->error_tips($now_order['msg'],$now_order['url']);        }        $order_info = $now_order['order_info'];        if($_GET['order_type'] != 'recharge'){            //优惠券            if(!empty($_GET['card_id'])){                $now_coupon = D('Member_card_coupon')->get_coupon_by_recordid($_GET['card_id'],$this->user_session['uid']);            }            //商家会员卡余额            $merchant_balance = D('Member_card')->get_balance($this->user_session['uid'],$order_info['mer_id']);            $this->assign('merchant_balance',$merchant_balance);        }        //用户信息        $now_user = D('User')->get_user($this->user_session['uid']);        if(empty($now_user)){            $this->error_tips('未获取到您的帐号信息，请重试！');        }        //如果用户存在余额或使用了优惠券，则保存至订单信息。如果金额满足订单总价，则实时扣除并返回支付成功！若不够则不实时扣除，防止用户在付款过程中取消支付        $wx_cheap = 0;        if($order_info['order_type'] == 'group'){            //判断有没有使用微信，如果是微信，则检测此团购有没有微信优惠！            if($this->config['weixin_buy_follow_wechat'] == 2 && empty($now_user['is_follow'])){                $this->error_tips('您未关注公众号，不能购买！请先关注公众号。');            }elseif($this->config['weixin_buy_follow_wechat'] == 1 && empty($now_user['is_follow'])){                $wx_cheap = 0;            }elseif($_SESSION['openid']){                $now_group = M('Group')->field('`group_id`,`wx_cheap`')->where(array('group_id'=>$order_info['group_id']))->find();                $wx_cheap = $order_info['order_num'] * $now_group['wx_cheap'];            }elseif($this->$is_app_browser){                $now_group = M('Group')->field('`group_id`,`wx_cheap`')->where(array('group_id'=>$order_info['group_id']))->find();                $wx_cheap = $order_info['order_num'] * $now_group['wx_cheap'];            }            $save_result = D('Group_order')->wap_befor_pay($order_info,$now_coupon,$merchant_balance,$now_user,$wx_cheap);        }else if($order_info['order_type'] == 'meal' || $order_info['order_type'] == 'takeout' || $order_info['order_type'] == 'food' || $order_info['order_type'] == 'foodPad'){            $save_result = D('Meal_order')->wap_befor_pay($order_info,$now_coupon,$merchant_balance,$now_user, $order_info['order_type']);        }else if($order_info['order_type'] == 'weidian'){            $save_result = D('Weidian_order')->wap_befor_pay($order_info,$now_coupon,$merchant_balance,$now_user);        }else if($order_info['order_type'] == 'recharge'){            $save_result = D('User_recharge_order')->web_befor_pay($order_info,$now_user);        }else if($order_info['order_type'] == 'appoint'){            $save_result = D('Appoint_order')->wap_befor_pay($order_info,$now_coupon,$merchant_balance,$now_user);        }else if($order_info['order_type'] == 'waimai'){            $save_result = D('Waimai_order')->wap_befor_pay($order_info,$merchant_balance,$now_user);        }else if($order_info['order_type'] == 'wxapp'){            $save_result = D('Wxapp_order')->wap_befor_pay($order_info,$now_coupon,$merchant_balance,$now_user);        }else if($order_info['order_type'] == 'store'){            $save_result = D('Store_order')->wap_befor_pay($order_info,$now_coupon,$merchant_balance,$now_user);        }        if($save_result['error_code']){            $this->error_tips($save_result['msg']);        }else if($save_result['url']){            $this->success_tips($save_result['msg'],$save_result['url']);        }        //需要支付的钱        $pay_money = round($save_result['pay_money']*100)/100;        if(in_array($order_info['order_type'],array('group','meal','takeout','food','appoint','waimai','store')) && $order_info['mer_id']){            $mer_id = $order_info['mer_id'];        }else{            $this->config['merchant_ownpay'] = 0;        }        $this->config['merchant_ownpay'] = intval($this->config['merchant_ownpay']);        switch($this->config['merchant_ownpay']){            case '0':                $pay_method = D('Config')->get_pay_method($notOnline,$notOffline,true);                break;            case '1':                $pay_method = D('Config')->get_pay_method($notOnline,$notOffline,true);                $merchant_ownpay = D('Merchant_ownpay')->field('mer_id',true)->where(array('mer_id'=>$mer_id))->find();                foreach($merchant_ownpay as $ownKey=>$ownValue){                    $ownValueArr = unserialize($ownValue);                    if($ownValueArr['open']){                        $ownValueArr['is_own'] = true;                        $pay_method[$ownKey] = array('name'=>$this->getPayName($ownKey),'config'=>$ownValueArr);                    }                }                break;            case '2':                $pay_method = array();                $merchant_ownpay = D('Merchant_ownpay')->field('mer_id',true)->where(array('mer_id'=>$mer_id))->find();                foreach($merchant_ownpay as $ownKey=>$ownValue){                    $ownValueArr = unserialize($ownValue);                    if($ownValueArr['open']){                        $ownValueArr['is_own'] = true;                        $pay_method[$ownKey] = array('name'=>$this->getPayName($ownKey),'config'=>$ownValueArr);                    }                }                if(empty($pay_method)){                    $pay_method = D('Config')->get_pay_method($notOnline,$notOffline,true);                }                break;                    }                if(empty($pay_method)){            $this->error_tips('系统管理员没开启任一一种支付方式！');        }        if(empty($pay_method[$_GET['pay_type']])){            //$this->error_tips('您选择的支付方式不存在，请更新支付方式！');        }                $pay_class_name = ucfirst($_GET['pay_type']);        $import_result = import('@.ORG.pay.'.$pay_class_name);        if(empty($import_result)){            $this->error_tips('系统管理员暂未开启该支付方式，请更换其他的支付方式');        }                $order_id = $order_info['order_id'];        if ($_GET['order_type'] == 'takeout' || $_GET['order_type'] == 'food' || $_GET['order_type'] == 'foodPad') {            $order_info['order_id'] = $order_info['orderid'];        }        $pay_class = new $pay_class_name($order_info,$pay_money,$_GET['pay_type'],$pay_method[$_GET['pay_type']]['config'],$this->user_session,1);        $go_pay_param = $pay_class->pay();        if(empty($go_pay_param['error'])){            header("Content-type: text/html; charset=utf-8");            echo $go_pay_param['form'];            die;            if(!empty($go_pay_param['url'])){                $this->assign('url',$go_pay_param['url']);                $this->display();            }else if(!empty($go_pay_param['form'])){                $this->assign('form',$go_pay_param['form']);                $this->display();            }else if(!empty($go_pay_param['weixin_param'])){                if($pay_method['weixin']['config']['is_own']){                    C('open_authorize_wxpay',true);                    $share = new WechatShare($this->config,$_SESSION['openid']);                    $this->hideScript = $share->gethideOptionMenu($mer_id);                    $this->assign('hideScript', $this->hideScript);                    $redirctUrl = C('config.site_url').'/wap.php?g=Wap&c=Pay&a=weixin_back&order_type='.$order_info['order_type'].'&order_id='.$order_info['order_id'].'&own_mer_id='.$order_info['mer_id'];                }else{                    $redirctUrl = C('config.site_url').'/wap.php?g=Wap&c=Pay&a=weixin_back&order_type='.$order_info['order_type'].'&order_id='.$order_info['order_id'];                }                $this->assign('redirctUrl',$redirctUrl);                $this->assign('pay_money',$pay_money);                $this->assign('weixin_param',json_decode($go_pay_param['weixin_param']));                $this->display('weixin_pay');            }else{                $this->error_tips('调用支付发生错误，请重试。');            }        }else{            $this->error_tips($go_pay_param['msg']);        }    }    //微信同步回调页面    public function weixin_back(){        $import_result=import('@.ORG.pay.Weixin');        switch($_GET['order_type']){            case 'group':                $now_order = D('Group_order')->where(array('orderid'=>$_GET['order_id']))->find();                break;            case 'meal':                $now_order = D('Meal_order')->where(array('orderid'=>$_GET['order_id']))->find();                break;            case 'takeout':            case 'food':            case 'foodPad':                $now_order = D('Meal_order')->where(array('orderid'=>$_GET['order_id']))->find();                $model=new FoodModel();                $model->send_food_tpl($_GET['order_id']);                //随机免单                //if ($_GET['order_id']) $this->merchant_favourable($_GET['order_id'],$_GET['order_type'],$import_result);                break;            case 'weidian':                $now_order = D('Weidian_order')->where(array('orderid'=>$_GET['order_id']))->find();                break;            case 'recharge':                $now_order = D('User_recharge_order')->where(array('orderid'=>$_GET['order_id']))->find();                break;    	    case 'livepay':		D('House_village_pay_order')->where(array('uid'=>$this->user_session['uid'],'order_id'=>$_GET['order_id']))->save(array('paid'=>1));	//改变支付状态		$now_order = D('House_village_pay_order')->get_order_by_id($this->user_session['uid'],intval($_GET['order_id']));		D('User')->save_user($this->user_session['uid'],'now_money','');	//清空账户余额		/*$type_price=$now_order['order_type'].'_price';	//缴费类型		D('House_village_user_bind')->where(array('uid'=>$this->user_session['uid'],'pigcms_id'=>$now_order['bind_id']))->data(array("$type_price"=>0))->save();		$use_type='use_'.$now_order['order_type'];								D('House_village_user_paylist')->where(array('uid'=>$this->user_session['uid'],'bind_id'=>$now_order['bind_id']))->data(array("$use_type"=>0,"$type_price"=>0))->save();*/		break;            case 'livepay_uptown':                D('House_village_pay_order')->where(array('uid'=>$this->user_session['uid'],'order_id'=>$_GET['order_id']))->save(array('paid'=>1));	//改变支付状态                $now_order = D('House_village_pay_order')->get_order_by_id($this->user_session['uid'],intval($_GET['order_id']));                $now_order['orderid']=$now_order['order_id'];                /*$type_price=$now_order['order_type'].'_price';	//缴费类型                $pid=explode(',',$now_order['pid']);                foreach ($pid as $pid_key=>$pid_value){                    D('House_village_user_paylist')->where(array('pigcms_id'=>$pid_value))->data(array("$type_price"=>0))->save();                }*/                break;            case 'livepay_property':                //D('House_village_room_propertylist')->where(array('uid'=>$this->user_session['uid'],'pigcms_id'=>$_GET['order_id']))->save(array('status'=>1));	//改变支付状态                $now_order = D('House_village_room_propertylist')->get_order_by_id($this->user_session['uid'],intval($_GET['order_id']));                $now_order['orderid']=$now_order['pigcms_id'];                break;            case 'livepay_carspace':                //D('House_village_room_propertylist')->where(array('uid'=>$this->user_session['uid'],'pigcms_id'=>$_GET['order_id']))->save(array('status'=>1));	//改变支付状态                $now_order = D('House_village_room_carspacelist')->get_order_by_id($this->user_session['uid'],intval($_GET['order_id']));                $now_order['orderid']=$now_order['pigcms_id'];                break;            case 'appoint':                $now_order = D('Appoint_order')->where(array('orderid'=>$_GET['order_id']))->find();                break;            case 'waimai':                $now_order = D('Waimai_order')->where(array('orderid'=>$_GET['order_id']))->find();                break;            case 'wxapp':                $now_order = D('Wxapp_order')->where(array('orderid'=>$_GET['order_id']))->find();                break;            case 'store':                $now_order = D('Store_order')->where(array('orderid'=>$_GET['order_id']))->find();                break;            default:                $this->error_tips('非法的订单');        }        if(empty($now_order)){            $this->error_tips('该订单不存在');        }        $now_order['order_type'] = $_GET['order_type'];        if($now_order['paid']){            switch($_GET['order_type']){                case 'group':                    $redirctUrl = C('config.site_url').'/wap.php?c=My&a=group_order&order_id='.$now_order['order_id'];                    break;                case 'meal':                    $redirctUrl = C('config.site_url').'/wap.php?c=Meal&a=detail&orderid='.$now_order['order_id'].'&mer_id='.$now_order['mer_id'].'&store_id='.$now_order['store_id'];                    break;                case 'takeout':                    $redirctUrl = C('config.site_url').'/wap.php?c=Takeout&a=order_detail&order_id='.$now_order['order_id'].'&mer_id='.$now_order['mer_id'].'&store_id='.$now_order['store_id'];                    break;                case 'food':                case 'foodPad':                    $redirctUrl = C('config.site_url').'/wap.php?c=Food&a=order_detail&order_id='.$now_order['order_id'].'&mer_id='.$now_order['mer_id'].'&store_id='.$now_order['store_id'];                    break;                case 'weidian':                    $redirctUrl = D('Weidian_order')->get_weidian_url(array('wecha_id'=>$now_order['uid'],'order_no'=>$now_order['weidian_order_id'],'pay_money'=>$now_order['money'],'third_id'=>$now_order['third_id'],'payment_method'=>$now_order['pay_type']));					$this->NoticeWDAsyn($now_order['orderid']);                    break;                case 'appoint':                    $redirctUrl = C('config.site_url').'/wap.php?c=My&a=appoint_order&order_id='.$now_order['order_id'];                    break;                case 'waimai':                    $redirctUrl = C('config.site_url').'/index.php?g=WaimaiWap&c=Order&a=detail&order_id='.$now_order['order_id'];                    break;                case 'recharge':                    $redirctUrl = C('config.site_url').D('User_recharge_order')->get_pay_after_url($now_order['label'],$now_order['is_mobile_pay']);                    // $redirctUrl = C('config.site_url').'/wap.php?c=My&a=index';                    break;		case 'livepay':		    //$redirctUrl = C('config.site_url').'/wap.php?c=My&a=index';		    $redirctUrl = C('config.site_url').'/wap.php?c=House&a=village_my&village_id='.$now_order['village_id'];		    break;                case 'livepay_uptown':                    //$redirctUrl = C('config.site_url').'/wap.php?c=My&a=index';                    $redirctUrl = C('config.site_url').'/wap.php?c=House&a=village_my&village_id='.$now_order['village_id'];                    break;                case 'livepay_property':                    //$redirctUrl = C('config.site_url').'/wap.php?c=My&a=index';                    $redirctUrl = C('config.site_url').'/wap.php?c=House&a=village_my&village_id='.$now_order['village_id'];                    break;                case 'livepay_carspace':                    //$redirctUrl = C('config.site_url').'/wap.php?c=My&a=index';                    $redirctUrl = C('config.site_url').'/wap.php?c=House&a=village_my&village_id='.$now_order['village_id'];                    break;                case 'wxapp':                    $redirctUrl = C('config.site_url').'/wap.php?c=Wxapp&a=pay_back&order_id='.$now_order['order_id'];                    break;                case 'store':                    $redirctUrl = C('config.site_url').'/wap.php?c=My&a=store_order_list';                    break;            }            redirect($redirctUrl);exit;        }                if(in_array($_GET['order_type'],array('group','meal','takeout','food','appoint','waimai')) && $now_order['mer_id']){            $mer_id = $now_order['mer_id'];        }else{            $this->config['merchant_ownpay'] = 0;        }        $this->config['merchant_ownpay'] = intval($this->config['merchant_ownpay']);        switch($this->config['merchant_ownpay']){            case '0':                $pay_method = D('Config')->get_pay_method();                break;            case '1':                $pay_method = D('Config')->get_pay_method();                if($_GET['own_mer_id']){                    $mer_id = $_GET['own_mer_id'];                }else if($_SESSION['own_mer_id']){                    $mer_id = $_SESSION['own_mer_id'];                    unset($_SESSION['own_mer_id']);                }                if($mer_id){                    $merchant_ownpay = D('Merchant_ownpay')->field('mer_id',true)->where(array('mer_id'=>$mer_id))->find();                    foreach($merchant_ownpay as $ownKey=>$ownValue){                        $ownValueArr = unserialize($ownValue);                        if($ownValueArr['open']){                            $ownValueArr['is_own'] = true;                            $pay_method[$ownKey] = array('name'=>$this->getPayName($ownKey),'config'=>$ownValueArr);                        }                    }                }                                break;            case '2':                $pay_method = array();                if($_GET['own_mer_id']){                    $mer_id = $_GET['own_mer_id'];                }else if($_SESSION['own_mer_id']){                    $mer_id = $_SESSION['own_mer_id'];                    unset($_SESSION['own_mer_id']);                }                if($mer_id){                    $merchant_ownpay = D('Merchant_ownpay')->field('mer_id',true)->where(array('mer_id'=>$mer_id))->find();                    foreach($merchant_ownpay as $ownKey=>$ownValue){                        $ownValueArr = unserialize($ownValue);                        if($ownValueArr['open']){                            $ownValueArr['is_own'] = true;                            $pay_method[$ownKey] = array('name'=>$this->getPayName($ownKey),'config'=>$ownValueArr);                        }                    }                }                if(empty($pay_method)){                    $pay_method = D('Config')->get_pay_method();                }                break;                    }            $now_order['order_id']=$now_order['orderid'];        if(empty($pay_method)){            $this->error_tips('系统管理员没开启任一一种支付方式！');        }        //2017.1.16 陈琦  获取商户在收银台里面的配置信息        $arr=D('User_recharge_order')->where("orderid=".$now_order['order_id'])->find();        if($_GET['order_type']=='livepay_uptown'||$_GET['order_type']=='livepay_property'||$_GET['order_type']=='livepay_carspace'){            if($_GET['order_type']=='livepay_property'){                $order_table = 'house_village_room_propertylist';            }elseif($_GET['order_type']=='livepay_carspace'){                $order_table = 'house_village_room_carspacelist';            }            $arr=D($order_table)->where("pigcms_id=".$now_order['order_id'])->find();            $arr=M('house_village_room')->where('id='.$arr['rid'])->find();            //$this->error_tips($now_order['order_id']);            $merchant_info=M('merchant')->where(array('village_id'=>$arr['village_id'],'name'=>array('like','%物业%')))->field('mer_id')->find();//对应收银台商户信息 小区            $merchant_info=M('cashier_merchants')->where(array('thirduserid'=>$merchant_info['mer_id']))->field('mid')->find();//对应收银台商户信息        }else{            $merchant_info=M('cashier_merchants')->where(array('thirduserid'=>$arr['mer_id']))->field('mid')->find();//对应收银台商户信息        }        $mid=$merchant_info['mid'];        $payConfig = M('cashier_payconfig')->where(array('mid'=>$mid))->find();//对应商户的配置参数        $payConfig['configData'] = unserialize(htmlspecialchars_decode($payConfig['configData'],ENT_QUOTES));        $wx_user =$payConfig['configData']['weixin'];//子商户号来源        $pay_method['weixin']['config']['sub_mch_id']=$wx_user['mchid'];//配置子商户号 这里注意，在前台页面字段是mchid，不是sub_mch_id，收银那边读取的是Cashier/pigcms/Lib/base.class.php        $pay_class = new Weixin($now_order,0,'weixin',$pay_method['weixin']['config'],$this->user_session,1);        //dump($now_order);        $go_query_param = $pay_class->query_order();        if($go_query_param['error'] === 0){			$go_query_param['order_param']['return']=1;            switch($_GET['order_type']){                case 'group':                    D('Group_order')->after_pay($go_query_param['order_param']);                    break;                case 'meal':                case 'takeout':                case 'food':                case 'foodPad':                    $go_query_param['order_param']['orderid'] = $go_query_param['order_param']['order_id'];                    unset($go_query_param['order_param']['order_id']);                    D('Meal_order')->after_pay($go_query_param['order_param'], $_GET['order_type']);                    break;                case 'weidian':                    $pay_info = D('Weidian_order')->after_pay($go_query_param['order_param']);                    if(($pay_info['error']==0) && isset($pay_info['url'])){  /***异步通知***/                        $this->NoticeWDAsyn($now_order['orderid']);                    }                    break;                case 'recharge':                    D('User_recharge_order')->after_pay($go_query_param['order_param']);                    break;                case 'waimai':                    D('Waimai_order')->after_pay($go_query_param['order_param']);                    break;                case 'appoint':                    D('appoint_order')->after_pay($go_query_param['order_param']);                    break;                case 'wxapp':                    D('Wxapp_order')->after_pay($go_query_param['order_param']);                    break;                case 'store':                    D('Store_order')->after_pay($go_query_param['order_param']);                    break;                case 'livepay_uptown':                    D('Livepay_order')->after_pay($go_query_param['order_param']);                    break;                case 'livepay_property':                    D('House_village_room_propertylist')->after_pay($go_query_param['order_param']);                    break;                case 'livepay_carspace':                    D('House_village_room_carspacelist')->after_pay($go_query_param['order_param']);                    break;            }        }        switch($_GET['order_type']){            case 'group':				$order_id=M('group_order')->where(array('orderid'=>$_GET['order_id']))->getField('order_id');                $redirctUrl = C('config.site_url').'/wap.php?g=Wap&c=My&a=group_order&order_id='.$order_id;                break;            case 'meal':                $redirctUrl = C('config.site_url').'/wap.php?g=Wap&c=Meal&a=detail&orderid='.$_GET['order_id'].'&mer_id='.$now_order['mer_id'].'&store_id='.$now_order['store_id'];                break;            case 'takeout':                $redirctUrl = C('config.site_url').'/wap.php?g=Wap&c=Takeout&a=order_detail&order_id='.$_GET['order_id'].'&mer_id='.$now_order['mer_id'].'&store_id='.$now_order['store_id'];                break;            case 'food':            case 'foodPad':                $redirctUrl = C('config.site_url').'/wap.php?g=Wap&c=Food&a=order_detail&order_id='.$_GET['order_id'].'&mer_id='.$now_order['mer_id'].'&store_id='.$now_order['store_id'];                break;            case 'weidian':                $redirctUrl = D('Weidian_order')->get_weidian_url(array('wecha_id'=>$now_order['uid'],'order_no'=>$now_order['weidian_order_id'],'pay_money'=>$now_order['money'],'third_id'=>$go_query_param['order_param']['third_id'],'payment_method'=>$go_query_param['order_param']['pay_type']));                break;            case 'appoint':                $redirctUrl = C('config.site_url').'/wap.php?g=Wap&c=My&a=appoint_order&order_id='.$_GET['order_id'];                break;            case 'waimai':                $redirctUrl = C('config.site_url').'/index.php?g=Waimaiwap&c=Index&a=order&order_id='.$_GET['order_id'];                break;            case 'recharge':                $redirctUrl = C('config.site_url').'/wap.php?c=My&a=index';                break;            case 'wxapp':                $redirctUrl = C('config.site_url').'/wap.php?c=Wxapp&a=pay_back&order_id='.$_GET['order_id'];                break;            case 'store':                $redirctUrl = C('config.site_url').'/wap.php?c=My&a=store_order_list';                break;            case 'livepay_uptown':                $redirctUrl = C('config.site_url').'/wap.php?c=House&a=village_my_pay&village_id='.$_SESSION['now_village_bind']['village_id'];                break;            case 'livepay_property':                $redirctUrl = C('config.site_url').'/wap.php?c=House&a=village_uptown_my_pay_back&village_id='.$_SESSION['now_village_bind']['village_id'].'&rid='.$now_order['rid'].'&order_id='.$_GET['order_id'];                break;            case 'livepay_carspace':                $redirctUrl = C('config.site_url').'/wap.php?c=House&a=village_uptown_my_pay_back_carspace&village_id='.$_SESSION['now_village_bind']['village_id'].'&carspace_id='.$now_order['carspace_id'].'&order_id='.$_GET['order_id'];                break;        }        if($go_query_param['error'] == 1){            $this->error_tips('校验时发生错误！'.$go_query_param['msg'],$redirctUrl);        }else{            redirect($redirctUrl);        }    }    /***异步通知*微店**/    public function NoticeWDAsyn($order_id){        $now_order = M('Weidian_order')->field(true)->where(array('orderid'=>trim($order_id)))->find();        if(!empty($now_order) && isset($now_order['pay_type']) && ($now_order['pay_type']=='weixin')){            $wdAsynarr=array('order_no'=>$now_order['weidian_order_id'],'pay_money'=>$now_order['money'],'third_id'=>$now_order['third_id'],'payment_method'=>'weixin');            $wdAsynarr['salt'] = 'pigcms';            ksort($wdAsynarr);            $wdAsynarr['sign_key'] = sha1(http_build_query($wdAsynarr));            $wdAsynarr['request_time'] = time();            $returnarr=httpRequest($this->config['weidian_url'].'/api/pay_notify.php','POST',$wdAsynarr);            if(empty($returnarr['1'])){                $returnarr=httpRequest($this->config['weidian_url'].'/api/pay_notify.php','POST',$wdAsynarr);            }        }    }    //异步通知    public function notify_url(){        $pay_method = D('Config')->get_pay_method();        if(empty($pay_method)){            $this->error_tips('系统管理员没开启任一一种支付方式！');        }        if(empty($pay_method[$_GET['pay_type']])){            $this->error_tips('您选择的支付方式不存在，请更新支付方式！');        }        $pay_type = isset($_GET['paytype']) ? $_GET['paytype'] : $_GET['pay_type'];        $pay_class_name = ucfirst($pay_type);        $import_result = import('@.ORG.pay.'.$pay_class_name);        if(empty($import_result)){            $this->error_tips('系统管理员暂未开启该支付方式，请更换其他的支付方式');        }        $pay_class = new $pay_class_name('', '', $pay_type, $pay_method[$pay_type]['config'], $this->user_session, 1);        $notify_return = $pay_class->notice_url();        if(empty($notify_return['error'])){        }else{            $this->error_tips($notify_return['msg']);        }    }    //跳转通知    public function return_url(){        $pay_type = isset($_GET['paytype']) ? $_GET['paytype'] : $_GET['pay_type'];        if($pay_type == 'weixin'){            $array_data = json_decode(json_encode(simplexml_load_string($GLOBALS['HTTP_RAW_POST_DATA'], 'SimpleXMLElement', LIBXML_NOCDATA)), true);            if($array_data && $array_data['attach'] != 'weixin'){                $_GET['own_mer_id'] = $array_data['attach'];            }        }        $this->config['merchant_ownpay'] = intval($this->config['merchant_ownpay']);        switch($this->config['merchant_ownpay']){            case '0':                $pay_method = D('Config')->get_pay_method();                break;            case '1':                $pay_method = D('Config')->get_pay_method();                if($_GET['own_mer_id']){                    $mer_id = $_GET['own_mer_id'];                }else if($_SESSION['own_mer_id']){                    $mer_id = $_SESSION['own_mer_id'];                    unset($_SESSION['own_mer_id']);                }                if($mer_id){                    $merchant_ownpay = D('Merchant_ownpay')->field('mer_id',true)->where(array('mer_id'=>$mer_id))->find();                    foreach($merchant_ownpay as $ownKey=>$ownValue){                        $ownValueArr = unserialize($ownValue);                        if($ownValueArr['open']){                            $ownValueArr['is_own'] = true;                            $pay_method[$ownKey] = array('name'=>$this->getPayName($ownKey),'config'=>$ownValueArr);                        }                    }                }                                break;            case '2':                $pay_method = array();                if($_GET['own_mer_id']){                    $mer_id = $_GET['own_mer_id'];                }else if($_SESSION['own_mer_id']){                    $mer_id = $_SESSION['own_mer_id'];                    unset($_SESSION['own_mer_id']);                }                if($mer_id){                    $merchant_ownpay = D('Merchant_ownpay')->field('mer_id',true)->where(array('mer_id'=>$mer_id))->find();                    foreach($merchant_ownpay as $ownKey=>$ownValue){                        $ownValueArr = unserialize($ownValue);                        if($ownValueArr['open']){                            $ownValueArr['is_own'] = true;                            $pay_method[$ownKey] = array('name'=>$this->getPayName($ownKey),'config'=>$ownValueArr);                        }                    }                }                if(empty($pay_method)){                    $pay_method = D('Config')->get_pay_method();                }                break;                    }        if(empty($pay_method)){            $this->error_tips('系统管理员没开启任一一种支付方式！');        }        if(empty($pay_method[$pay_type])){            $this->error_tips('您选择的支付方式不存在，请更新支付方式！');        }        $pay_class_name = ucfirst($pay_type);        $import_result = import('@.ORG.pay.'.$pay_class_name);        if(empty($import_result)){            $this->error_tips('系统管理员暂未开启该支付方式，请更换其他的支付方式');        }        $pay_class = new $pay_class_name('','',$pay_type,$pay_method[$pay_type]['config'],$this->user_session,1);        $get_pay_param = $pay_class->return_url();		if($pay_type!='offline'){			$get_pay_param['order_param']['return']=1;		}        if(empty($get_pay_param['error'])){            if($get_pay_param['order_param']['order_type'] == 'group'){                $pay_info = D('Group_order')->after_pay($get_pay_param['order_param']);            }else if($get_pay_param['order_param']['order_type'] == 'meal' || $get_pay_param['order_param']['order_type'] == 'takeout' || $get_pay_param['order_param']['order_type'] == 'food' || $get_pay_param['order_param']['order_type'] == 'foodPad'){                $get_pay_param['order_param']['orderid'] = $get_pay_param['order_param']['order_id'];                unset($get_pay_param['order_param']['order_id']);                $pay_info = D('Meal_order')->after_pay($get_pay_param['order_param'], $get_pay_param['order_param']['order_type']);            }else if($get_pay_param['order_param']['order_type'] == 'weidian'){                $pay_info = D('Weidian_order')->after_pay($get_pay_param['order_param']);                if(($pay_info['error']==0) && isset($pay_info['url']) && ($get_pay_param['order_param']['pay_type'] == 'weixin')){  /***异步通知***/                    $this->NoticeWDAsyn($get_pay_param['order_param']['order_id']);                }            }else if($get_pay_param['order_param']['order_type'] == 'recharge'){                $pay_info = D('User_recharge_order')->after_pay($get_pay_param['order_param']);            }else if($get_pay_param['order_param']['order_type'] == 'appoint'){                $pay_info = D('Appoint_order')->after_pay($get_pay_param['order_param']);            }else if($get_pay_param['order_param']['order_type'] == 'waimai'){                $pay_info = D('Waimai_order')->after_pay($get_pay_param['order_param']);            }else if($get_pay_param['order_param']['order_type'] == 'wxapp'){                $pay_info = D('Wxapp_order')->after_pay($get_pay_param['order_param']);            }else if($get_pay_param['order_param']['order_type'] == 'store'){                $pay_info = D('Store_order')->after_pay($get_pay_param['order_param']);            }else{                $this->error_tips('订单类型非法！请重新下单。');            }            if(empty($pay_info['error'])){                if($get_pay_param['order_param']['pay_type'] == 'weixin'){                    exit('<xml><return_code><![CDATA[SUCCESS]]></return_code></xml>');                } elseif ($get_pay_param['order_param']['pay_type'] == 'baidu') {//百度的异步通知返回                	exit("<html><head><meta name=\"VIP_BFB_PAYMENT\" content=\"BAIFUBAO\"></head><body><h1>这是一个return_url页面</h1></body></html>");                }                $pay_info['msg'] = '订单付款成功！现在跳转.';            }            if(empty($pay_info['url'])){                $this->error_tips($pay_info['msg']);            }else{                $pay_info['url'] = preg_replace('#/source/(\w+).php#','/wap.php',$pay_info['url']);                $this->assign('pay_info',$pay_info);                $this->display('after_pay');            }        }else{            $this->error_tips($get_pay_param['msg']);        }    }    //支付宝支付同步回调    public function alipay_return(){        $order_id_arr = explode('_',$_GET['out_trade_no']);        $order_type = $order_id_arr[0];        $order_id = $order_id_arr[1];        $total_fee = $order_id_arr[2];        switch($order_type){            case 'group':                $now_order = D('Group_order')->where(array('order_id'=>$order_id))->find();                break;            case 'meal':            case 'takeout':            case 'food':                $now_order = D('Meal_order')->where(array('orderid'=>$order_id))->find();                break;            case 'recharge':                $now_order = D('User_recharge_order')->where(array('order_id'=>$order_id))->find();                break;            case 'appoint':                $now_order = D('Appoint_order')->where(array('order_id'=>$order_id))->find();                break;            case 'waimai':                $now_order = D('Waimai_order')->where(array('order_id'=>$order_id))->find();                break;            default:                $this->error('非法的订单');        }        if($now_order['paid']){            switch($order_type){            case 'group':                $redirctUrl = C('config.site_url').'/wap.php?g=Wap&c=My&a=group_order&order_id='.$now_order['order_id'];                break;            case 'meal':                $redirctUrl = C('config.site_url').'/wap.php?g=Wap&c=Meal&a=detail&orderid='.$now_order['order_id'].'&mer_id='.$now_order['mer_id'].'&store_id='.$now_order['store_id'];                break;            case 'takeout':                $redirctUrl = C('config.site_url').'/wap.php?g=Wap&c=Takeout&a=order_detail&order_id='.$now_order['order_id'].'&mer_id='.$now_order['mer_id'].'&store_id='.$now_order['store_id'];                break;            case 'food':            case 'foodPad':                $redirctUrl = C('config.site_url').'/wap.php?g=Wap&c=Food&a=order_detail&order_id='.$now_order['order_id'].'&mer_id='.$now_order['mer_id'].'&store_id='.$now_order['store_id'];                break;            case 'weidian':                $redirctUrl = D('Weidian_order')->get_weidian_url(array('wecha_id'=>$now_order['uid'],'order_no'=>$now_order['weidian_order_id'],'pay_money'=>$now_order['money'],'third_id'=>$go_query_param['order_param']['third_id'],'payment_method'=>$go_query_param['order_param']['pay_type']));                break;            case 'appoint':                $redirctUrl = C('config.site_url').'/wap.php?g=Wap&c=My&a=appoint_order&order_id='.$now_order['order_id'];                break;            case 'waimai':                $redirctUrl = C('config.site_url').'/index.php?g=Waimaiwap&c=Index&a=order&order_id='.$now_order['order_id'];                break;            case 'recharge':                $redirctUrl = C('config.site_url').'/wap.php?c=My&a=index';                break;            case 'wxapp':                $redirctUrl = C('config.site_url').'/wap.php?c=Wxapp&a=pay_back&order_id='.$now_order['order_id'];                break;            case 'store':                $redirctUrl = C('config.site_url').'/wap.php?c=My&a=store_order_list';                break;            }            redirect($redirctUrl);exit;        }        $pay_method = D('Config')->get_pay_method();        if(empty($pay_method)){            $this->error_tips('系统管理员没开启任一一种支付方式！');        }        $import_result = import('@.ORG.pay.Alipay');        $pay_class = new Alipay('','','alipay',$pay_method['alipay']['config'],$this->user_session,1);        $go_query_param = $pay_class->query_order();        if($go_query_param['error'] === 0){        	$go_query_param['order_param']['pay_money'] = $total_fee;            switch($order_type){                case 'group':                    D('Group_order')->after_pay($go_query_param['order_param']);                    break;                case 'meal':                case 'takeout':                case 'food':                    D('Meal_order')->after_pay($go_query_param['order_param']);                    break;                case 'recharge':                    D('User_recharge_order')->after_pay($go_query_param['order_param']);                    break;                case 'appoint':                    D('Appoint_order')->after_pay($go_query_param['order_param']);                    break;                case 'waimai':                    D('Waimai_order')->after_pay($go_query_param['order_param']);                    break;            }        }        switch($order_type){            case 'group':                $redirctUrl = C('config.site_url').'/wap.php?g=Wap&c=My&a=group_order&order_id='.$now_order['order_id'];                break;            case 'meal':                $redirctUrl = C('config.site_url').'/wap.php?g=Wap&c=Meal&a=detail&orderid='.$now_order['order_id'].'&mer_id='.$now_order['mer_id'].'&store_id='.$now_order['store_id'];                break;            case 'takeout':                $redirctUrl = C('config.site_url').'/wap.php?g=Wap&c=Takeout&a=order_detail&order_id='.$now_order['order_id'].'&mer_id='.$now_order['mer_id'].'&store_id='.$now_order['store_id'];                break;            case 'food':            case 'foodPad':                $redirctUrl = C('config.site_url').'/wap.php?g=Wap&c=Food&a=order_detail&order_id='.$now_order['order_id'].'&mer_id='.$now_order['mer_id'].'&store_id='.$now_order['store_id'];                break;            case 'weidian':                $redirctUrl = D('Weidian_order')->get_weidian_url(array('wecha_id'=>$now_order['uid'],'order_no'=>$now_order['weidian_order_id'],'pay_money'=>$now_order['money'],'third_id'=>$go_query_param['order_param']['third_id'],'payment_method'=>$go_query_param['order_param']['pay_type']));                break;            case 'appoint':                $redirctUrl = C('config.site_url').'/wap.php?g=Wap&c=My&a=appoint_order&order_id='.$now_order['order_id'];                break;            case 'waimai':                $redirctUrl = C('config.site_url').'/index.php?g=Waimaiwap&c=Index&a=order&order_id='.$now_order['order_id'];                break;            case 'recharge':                $redirctUrl = C('config.site_url').'/wap.php?c=My&a=index';                break;            case 'wxapp':                $redirctUrl = C('config.site_url').'/wap.php?c=Wxapp&a=pay_back&order_id='.$now_order['order_id'];                break;            case 'store':                $redirctUrl = C('config.site_url').'/wap.php?c=My&a=store_order_list';                break;        }        redirect($redirctUrl);    }    //对接支付跳转    public function butt_pay(){        if(!empty($_GET['order_id']) && !empty($_GET['order_type'])){            if(empty($_GET['is_paid'])){                switch($_GET['order_type']){                    case 'appoint':                        $redirctUrl = C('config.site_url').'/wap.php?c=My&a=appoint_order&order_id='.$_GET['order_id'];                        break;                }                if(empty($redirctUrl)){                    $this->error('该类订单不允许访问');                }else{                    redirect($redirctUrl);                }            }else{                $butt_array = array(                    'order_id' => $_GET['order_id'],                    'order_type' => $_GET['order_type'],                    'pay_type' => $_GET['pay_type'],                    'pay_money' => $_GET['pay_money'],                    'pay_third_id' => $_GET['pay_third_id'],                    'encrypt_time' => $_GET['encrypt_time'],                );                $key = get_butt_encrypt_key($butt_array,C('butt_key'),true);                if($key == $_GET['encrypt_key']){                    $_GET['pay_money'] = $_GET['pay_money']/100;                    switch($_GET['order_type']){                        case 'appoint':                            $order_param = array(                                'pay_type' => 'weixin',                                'is_mobile' => '1',                                'order_type' => $_GET['order_type'],                                'order_id' => $_GET['order_id'],                                'is_own' => '0',                                'third_id' => $_GET['pay_third_id'],                                'pay_money' => $_GET['pay_money'],                            );                            $pay_info = D('Appoint_order')->after_pay($order_param);                            break;                    }                    if(!empty($pay_info)){                        if(empty($pay_info['url'])){                            $this->error_tips($pay_info['msg']);                        }else{                            $pay_info['url'] = preg_replace('#/source/(\w+).php#','/wap.php',$pay_info['url']);                            redirect($pay_info['url']);                        }                    }else{                        $this->error('该类订单不允许访问');                    }                }else{                    $this->error('订单校验失败，请重试');                }            }        }else{            $this->error('访问出错，请重试');        }    }        //百度的同步通知    public function baidu_back()    {    	$pay_type = 'baidu';        $this->config['merchant_ownpay'] = intval($this->config['merchant_ownpay']);        switch($this->config['merchant_ownpay']){            case '0':                $pay_method = D('Config')->get_pay_method();                break;            case '1':                $pay_method = D('Config')->get_pay_method();                if($_GET['own_mer_id']){                    $mer_id = $_GET['own_mer_id'];                }else if($_SESSION['own_mer_id']){                    $mer_id = $_SESSION['own_mer_id'];                    unset($_SESSION['own_mer_id']);                }                if($mer_id){                    $merchant_ownpay = D('Merchant_ownpay')->field('mer_id',true)->where(array('mer_id'=>$mer_id))->find();                    foreach($merchant_ownpay as $ownKey=>$ownValue){                        $ownValueArr = unserialize($ownValue);                        if($ownValueArr['open']){                            $ownValueArr['is_own'] = true;                            $pay_method[$ownKey] = array('name'=>$this->getPayName($ownKey),'config'=>$ownValueArr);                        }                    }                }                                break;            case '2':                $pay_method = array();                if($_GET['own_mer_id']){                    $mer_id = $_GET['own_mer_id'];                }else if($_SESSION['own_mer_id']){                    $mer_id = $_SESSION['own_mer_id'];                    unset($_SESSION['own_mer_id']);                }                if($mer_id){                    $merchant_ownpay = D('Merchant_ownpay')->field('mer_id',true)->where(array('mer_id'=>$mer_id))->find();                    foreach($merchant_ownpay as $ownKey=>$ownValue){                        $ownValueArr = unserialize($ownValue);                        if($ownValueArr['open']){                            $ownValueArr['is_own'] = true;                            $pay_method[$ownKey] = array('name'=>$this->getPayName($ownKey),'config'=>$ownValueArr);                        }                    }                }                if(empty($pay_method)){                    $pay_method = D('Config')->get_pay_method();                }                break;                    }        if(empty($pay_method)){            $this->error_tips('系统管理员没开启任一一种支付方式！');        }        if(empty($pay_method[$pay_type])){            $this->error_tips('您选择的支付方式不存在，请更新支付方式1！'.return_url());        }        $pay_class_name = ucfirst($pay_type);        $import_result = import('@.ORG.pay.'.$pay_class_name);        if(empty($import_result)){            $this->error_tips('系统管理员暂未开启该支付方式，请更换其他的支付方式');        }        $pay_class = new $pay_class_name('','',$pay_type,$pay_method[$pay_type]['config'],$this->user_session,1);        $get_pay_param = $pay_class->return_url();		if($pay_type!='offline'){			$get_pay_param['order_param']['return']=1;		}        if(empty($get_pay_param['error'])){        	        	switch($get_pay_param['order_param']['order_type']){        		case 'group':        			$now_order = D('Group_order')->where(array('orderid'=>$get_pay_param['order_param']['order_id']))->find();        			break;        		case 'meal':        			$now_order = D('Meal_order')->where(array('orderid'=>$get_pay_param['order_param']['order_id']))->find();        			break;        		case 'takeout':        		case 'food':        		case 'foodPad':        			$now_order = D('Meal_order')->where(array('orderid'=>$get_pay_param['order_param']['order_id']))->find();        			break;        		case 'weidian':        			$now_order = D('Weidian_order')->where(array('orderid'=>$get_pay_param['order_param']['order_id']))->find();        			break;        		case 'recharge':        			$now_order = D('User_recharge_order')->where(array('orderid'=>$get_pay_param['order_param']['order_id']))->find();        			break;        		case 'appoint':        			$now_order = D('Appoint_order')->where(array('orderid'=>$get_pay_param['order_param']['order_id']))->find();        			break;        		case 'waimai':        			$now_order = D('Waimai_order')->where(array('orderid'=>$get_pay_param['order_param']['order_id']))->find();        			break;        		case 'wxapp':        			$now_order = D('Wxapp_order')->where(array('orderid'=>$get_pay_param['order_param']['order_id']))->find();        			break;        		case 'store':        			$now_order = D('Store_order')->where(array('orderid'=>$get_pay_param['order_param']['order_id']))->find();        			break;        		default:        			$this->error_tips('非法的订单');        	}        	        	        	if(empty($now_order)){        		$this->error_tips('该订单不存在');        	}        	$now_order['order_type'] = $get_pay_param['order_param']['order_type'];        	if($now_order['paid']){        		switch($get_pay_param['order_param']['order_type']){        			case 'group':        				$redirctUrl = C('config.site_url').'/wap.php?c=My&a=group_order&order_id='.$now_order['order_id'];        				break;        			case 'meal':        				$redirctUrl = C('config.site_url').'/wap.php?c=Meal&a=detail&orderid='.$now_order['order_id'].'&mer_id='.$now_order['mer_id'].'&store_id='.$now_order['store_id'];        				break;        			case 'takeout':        				$redirctUrl = C('config.site_url').'/wap.php?c=Takeout&a=order_detail&order_id='.$now_order['order_id'].'&mer_id='.$now_order['mer_id'].'&store_id='.$now_order['store_id'];        				break;        			case 'food':        			case 'foodPad':        				$redirctUrl = C('config.site_url').'/wap.php?c=Food&a=order_detail&order_id='.$now_order['order_id'].'&mer_id='.$now_order['mer_id'].'&store_id='.$now_order['store_id'];        				break;        			case 'weidian':        				$redirctUrl = D('Weidian_order')->get_weidian_url(array('wecha_id'=>$now_order['uid'],'order_no'=>$now_order['weidian_order_id'],'pay_money'=>$now_order['money'],'third_id'=>$now_order['third_id'],'payment_method'=>$now_order['pay_type']));        				$this->NoticeWDAsyn($now_order['orderid']);        				break;        			case 'appoint':        				$redirctUrl = C('config.site_url').'/wap.php?c=My&a=appoint_order&order_id='.$now_order['order_id'];        				break;        			case 'waimai':        				$redirctUrl = C('config.site_url').'/index.php?g=WaimaiWap&c=Order&a=detail&order_id='.$now_order['order_id'];        				break;        			case 'recharge':        				$redirctUrl = C('config.site_url').D('User_recharge_order')->get_pay_after_url($now_order['label'],$now_order['is_mobile_pay']);        				// $redirctUrl = C('config.site_url').'/wap.php?c=My&a=index';        				break;        			case 'wxapp':        				$redirctUrl = C('config.site_url').'/wap.php?c=Wxapp&a=pay_back&order_id='.$now_order['order_id'];        				break;        			case 'store':        				$redirctUrl = C('config.site_url').'/wap.php?c=My&a=store_order_list';        				break;        		}        		redirect($redirctUrl);exit;        	}	        	            if($get_pay_param['order_param']['order_type'] == 'group'){                $pay_info = D('Group_order')->after_pay($get_pay_param['order_param']);            }else if($get_pay_param['order_param']['order_type'] == 'meal' || $get_pay_param['order_param']['order_type'] == 'takeout' || $get_pay_param['order_param']['order_type'] == 'food' || $get_pay_param['order_param']['order_type'] == 'foodPad'){                $get_pay_param['order_param']['orderid'] = $get_pay_param['order_param']['order_id'];                unset($get_pay_param['order_param']['order_id']);                $pay_info = D('Meal_order')->after_pay($get_pay_param['order_param'], $get_pay_param['order_param']['order_type']);            }else if($get_pay_param['order_param']['order_type'] == 'weidian'){                $pay_info = D('Weidian_order')->after_pay($get_pay_param['order_param']);                if(($pay_info['error']==0) && isset($pay_info['url']) && ($get_pay_param['order_param']['pay_type'] == 'weixin')){  /***异步通知***/                    $this->NoticeWDAsyn($get_pay_param['order_param']['order_id']);                }            }else if($get_pay_param['order_param']['order_type'] == 'recharge'){                $pay_info = D('User_recharge_order')->after_pay($get_pay_param['order_param']);            }else if($get_pay_param['order_param']['order_type'] == 'appoint'){                $pay_info = D('Appoint_order')->after_pay($get_pay_param['order_param']);            }else if($get_pay_param['order_param']['order_type'] == 'waimai'){                $pay_info = D('Waimai_order')->after_pay($get_pay_param['order_param']);            }else if($get_pay_param['order_param']['order_type'] == 'wxapp'){                $pay_info = D('Wxapp_order')->after_pay($get_pay_param['order_param']);            }else if($get_pay_param['order_param']['order_type'] == 'store'){                $pay_info = D('Store_order')->after_pay($get_pay_param['order_param']);            }else{                $this->error_tips('订单类型非法！请重新下单。');            }            if(empty($pay_info['error'])){                $pay_info['msg'] = '订单付款成功！现在跳转.';            }            if(empty($pay_info['url'])){                $this->error_tips($pay_info['msg']);            }else{                $pay_info['url'] = preg_replace('#/source/(\w+).php#','/wap.php',$pay_info['url']);                $this->assign('pay_info',$pay_info);                $this->display('after_pay');            }        }else{            $this->error_tips($get_pay_param['msg']);        }    }	/* 微信转账页面	* @time 2016-04-7	* @author	小邓  <969101097@qq.com>*/	public function give_money(){		if(empty($this->user_session)){			//$this->error_tips('请先进行登录！',U('Login/index'));			//$this->error('请先进行登录！',U('Login/index'));			redirect(U('Login/weixin',array('referer'=>urlencode('http://'.$_SERVER['HTTP_HOST'].$_SERVER['PHP_SELF'].'?'.$_SERVER['QUERY_STRING']))));		}		$view_content=array();		if(!I('get.mer_id')){	//判断是否获取到商户ID			$view_content['title'] = '武汉大头仔餐饮管理有限公司';			//$view_content['title'] = isset($_GET['t']) ? $_GET['t'] : NULL;			$view_content['img'] =C('config.site_url').'/static/images/hdhlogo1.png';			$meal_order = M('meal_order');			$where['mer_id'] = array("gt",0);			$where['ds_id'] = array("gt",0);			$uid = $this->user_session['uid'];			$where['uid'] = array("eq",$uid);			$data = $meal_order->where($where)->group('mer_id')->field('mer_id,count(mer_id) as mer')->order('mer desc')->limit(5)->select();			$n = count($data);			if(empty($data)){				$mer['mer_id'] = array("gt",0);				$mer['ds_id'] = array("gt",0);				$data = $meal_order->where($mer)->group('mer_id')->field('mer_id,count(mer_id) as mer')->order('mer desc')->limit(5)->select();			}			else if($n<5){				foreach($data as $k=>$v){					$da[$k] = $v['mer_id'];				}				$l = 5-intval($n);				$mer['mer_id'] = array("not in",$da);				$mer['ds_id'] = array("gt",0);				$data = $meal_order->where($mer)->group('mer_id')->field('mer_id,count(mer_id) as mer')->order('mer desc')->limit($l)->select();			}			foreach($data as $k=>$v){				$data[$k] = $v['mer_id'];			}			if(isset($da)){				if(!empty($data)){					$data = array_merge_recursive($data,$da);				}else{					$data = $da;				}			}			$merchant = M('merchant');			$map['mer_id']  = array('in',$data);			$mer = $merchant->where($map)->select();			$img = $merchant->where('mer_id='.$mer[0]['mer_id'])->getField('img_info');			$merchant_image_class = new merchant_image();			$view_content['img'] = rtrim($merchant_image_class->get_image_by_path($img),'/');			foreach($mer as $key=>$val){				if(!empty($val['pic_info'])){					$mer[$key]['adverimgurl']=$merchant_image_class->get_image_by_path($val['img_info']);				}			}			$this->assign('mer',$mer);			$merchant = json_encode($mer);			$this->assign('merchant',$merchant);		}else{			//$view_content['mer_id'] = I('get.mer_id');			//$view_content['title'] = I('get.name');			//$img_info=str_replace(',','/',I('get.img_info'));			//$view_content['img'] =C('config.site_url').'/upload/merchant/'.$img_info;			$merchant_info=D('Merchant')->where(array('mer_id'=>I('get.mer_id')))->field('mer_id,name,img_info')->find();			$view_content['mer_id'] = $merchant_info['mer_id'];			$view_content['title'] = $merchant_info['name'];			$img_info=str_replace(',','/',$merchant_info['img_info']);			$view_content['img'] = C('config.site_url').'/upload/merchant/'.$img_info;		}//		商家的优惠劵		$discount_spead = M('merchant_discount_spead');		$data = $discount_spead->order('ds_id desc')->select();		foreach($data as $ke=>$va){			if($va['ds_endTime']<time()||$va['ds_reMoney']<0){				unset($data[$ke]);			}		}		$share_arr=array(			'title'=>$view_content['title'],			'desc'=>'汇得行-生活智慧助手',			'imgUrl'=>$view_content['img'],			'link'=>C('config.site_url').'/wap.php?g=Wap&c=Pay&a=give_money&mer_id='.$view_content['mer_id']		);		$share = new WechatShare($this->config, $_SESSION['openid'],$share_arr);		$this->shareScript = $share->getSgin();		$this->assign('shareScript', $this->shareScript);		//$this->assign('dataip',$data);		$data = json_encode($data);		$this->assign('data_vip',$data);		$this->assign('view_content', $view_content);		$this->display('give_money');	}	/* 微信转账支付测试	* @time 2016-04-7	* @author	小邓  <969101097@qq.com>*/	public function givejs(){		import('@.ORG.pay.Weixin');	//引入微信类		$pay_method=D('Config')->get_pay_method();		$paydb=new Weixin('','','weixin',$pay_method['weixin']['config'],$this->user_session,1);		$money=isset($_POST['yhmoney']) ? sprintf("%.2f",$_POST['yhmoney']) : NULL;		$order_arr=array();		$order_arr['money'] = $money;		$order_arr['cou_money'] = $_POST['money']-$money;		$order_arr['code'] = 'C'.time().substr(str_shuffle('1234567890'),0,8);		$order_arr['ds_id'] = $_POST['favorable'];		if(empty($_POST['mer_id'])){			$order_arr['mer_id'] = $_POST['merid'];	//商户ID		}else{			$order_arr['mer_id'] = $_POST['mer_id'];	//商户ID		}		$userinfo= M('userinfo')->where(array('token'=>$order_arr['mer_id'],'wecha_id'=>$this->user_session['uid']))->find();		$user_info=M('user')->where(array('openid'=>$this->user_session['openid']))->field('now_money,uid')->find();		if($userinfo['balance']>=$money){	//判断会员卡余额是否够付			$this->assign('type_pay','balance');	//余额支付类型			$this->assign('user_info',$userinfo);			$this->assign('order_arr',$order_arr);			$this->display('balance_pay');		}else if(0<$userinfo['balance'] && $userinfo['balance']<$money && ($userinfo['balance']+$user_info['now_money'])>=$money){	//会员卡余额是否存在,且与账户余额之和够付			$this->assign('type_pay','hy_ac');		//余额支付类型(会员卡余额、账户余额支付)			$this->assign('user_info',array_merge($userinfo,$user_info));			$this->assign('order_arr',$order_arr);			$this->display('balance_pay');		}else if($userinfo['balance']>0 && $user_info['now_money']>0 && ($userinfo['balance']+$user_info['now_money'])<$money){	//会员卡余额、账户余额均存在,但不够付			$this->assign('type_pay','hy_ac_wx');	//余额支付类型(会员卡余额、账户余额、微信支付)			$this->assign('user_info',array_merge($userinfo,$user_info));			$this->assign('order_arr',$order_arr);			$this->assign('online_pay','wxpay');	//含微信在线支付			$this->assign('pay_method',D('Config')->get_pay_method());	//在线支付选项列表			$this->display('balance_pay');		}else if($user_info['now_money']==0 && 0<$userinfo['balance'] && $userinfo['balance']<$money){	//账户余额不存在,会员卡余额不够付			$this->assign('type_pay','hy_wx');	//余额支付类型(会员卡余额、微信支付)			$this->assign('user_info',$userinfo);			$this->assign('order_arr',$order_arr);			$this->assign('online_pay','wxpay');	//含微信在线支付			$this->assign('pay_method',D('Config')->get_pay_method());	//在线支付选项列表			$this->display('balance_pay');		}else if($userinfo['balance']==0 && $user_info['now_money']>=$money){	//会员卡余额不存在,账户余额够付			$this->assign('type_pay','now_money');	//余额支付类型			$this->assign('user_info',$user_info);			$this->assign('order_arr',$order_arr);			$this->display('balance_pay');		}else if($userinfo['balance']==0 && 0<$user_info['now_money'] && $user_info['now_money']<$money){	//会员卡余额不存在,账户余额不够付			$this->assign('type_pay','ac_wx');	//余额支付类型(账户余额、微信支付)			$this->assign('user_info',$user_info);			$this->assign('order_arr',$order_arr);			$this->assign('online_pay','wxpay');	//含微信在线支付			$this->assign('pay_method',D('Config')->get_pay_method());	//在线支付选项列表			$this->display('balance_pay');		}else{							//会员卡余额、账户余额不存在,微信支付			$order_arr['other_money']='';	//会员卡余额或账户余额支付的			$order_arr['typePay']='wxcode';		//支付类型			$state=serialize($order_arr);			session_start();			$_SESSION['openid']=$this->user_session['openid'];	//设置openID			$paydb->give_jsapi($state);		}	}	/**	 * 购买完成后跳转	 * 2016.4.20	 * 汪威	 */	public function pay_accomplish(){		$this->assign('info',$_GET);		$this->display();	}	/* 微信转账后处理订单	* @time 2016-04-8	* @author	小邓  <969101097@qq.com>*/	public function giveCheck(){		$us = $this->user_session;		$discount_spead = M('merchant_discount_spead');		$meal_order = M('meal_order');		$dis = M('merchant');		$ds_spd = $discount_spead->where("ds_id=".$_GET['ds_id'])->find();		if(empty($_GET['mer_id'])){			$mer_id = $ds_spd['ds_merId'];		}else{			$mer_id = $_GET['mer_id'];		}		$dis_a = $dis->where('mer_id='.$mer_id)->find();		$cou =sprintf("%.2f",$ds_spd['ds_reMoney'])-sprintf("%.2f",$_GET['cou_money']);		$discount_spead->where("ds_id=".$_GET['ds_id'])->setField('ds_reMoney',$cou);		$out_trade_no=isset($_GET['out_trade_no']) ? $_GET['out_trade_no'] : NULL;		$money=isset($_GET['money']) ? $_GET['money'] : NULL;		$type_pay=isset($_GET['typePay']) ? $_GET['typePay'] : NULL;	//支付类型		$str_arr=array();		$str_arr['name']=D('Pay')->get_pay_name($type_pay);	//余额支付类型名称		$str_arr['price']=$money;		$str_arr['num']='1';		$str_info=serialize(array($str_arr));		$card_id=M('Member_card_create')->where(array('wecha_id'=>$this->user_session['uid']))->getField('id');		if(!$card_id){			$card_id=0;		}		$meal_data=array(			'uid'=>$this->user_session['uid'],			//'mer_id'=>$this->merchant_session['mer_id'],			'mer_id'=>$mer_id,	//商户ID			'store_id'=>M('merchant_store')->where(array('mer_id'=>$mer_id))->getField('store_id'),//店铺ID			'orderid'=>$out_trade_no,			'status'=>'1',			'paid'=>'1',			'pay_type'=>$type_pay,			'name'=>$this->user_session['nickname'],			'phone'=>$this->user_session['phone'],			'address'=>$this->user_session['province'].' '.$this->user_session['city'],			'num'=>'1',			'total'=>'1',			'dateline'=>time(),			'price'=>$_GET['cou_money']+$money,			'pay_time'=>time(),			'last_time'=>$this->user_session['last_time'],			'pay_money'=>$money,			'payment_money'=>$money, //在线支付金额			'minus_price'=>$_GET['cou_money'], //优惠金额			'card_id'=>$card_id, //会员卡ID			'total_price'=>$_GET['cou_money']+$money,			'ds_id'=>$_GET['ds_id'],//优惠眷id			'info'=>$str_info		);		$meal_add= D('meal_order')->data($meal_data)->add();		if($_GET['ds_id']>0){			$coupon_all_money = $money+$_GET['cou_money'];			$a=D('Merchant_request')->add_request($ds_spd['ds_merId'], array('coupon_money' => $_GET['cou_money'], 'coupon_pay_money' => $money, 'coupon_all_money' => $coupon_all_money));		}		if($meal_add){			$title = $dis_a['name'];			//		给提供优惠的商户发送消息			if($ds_spd['ds_merId']!=$mer_id){				$dis_pd = $dis->where('mer_id='.$ds_spd['ds_merId'])->find();				$title = $dis_pd['name'];			}			M('userinfo')->where(array('token'=>$mer_id,'wecha_id'=>$this->user_session['uid']))->data(array('balance'=>0))->save();//会员卡余额清零			M('user')->where(array('openid'=>$this->user_session['openid']))->data(array('now_money'=>0))->save();//账户余额清零			//redirect(C('config.site_url').'/wap.php?g=Wap');			$view_content=array();			//$view_content['title'] = '武汉大头仔餐饮管理有限公司';			$view_content['title'] = $dis_a['name'];			$view_content['money'] =$money-$_GET['other_money'];	//只取微信支付的			$view_content['meal_add'] =$meal_add;			$view_content['mer_name'] =$title;			$view_content['out_trade_no'] =$out_trade_no;			$view_content['cou_money'] =$_GET['cou_money'];			$view_content['ds_img'] =$ds_spd['ds_img'];			$view_content['mer_id'] =$mer_id;			$view_content['ds_merId'] =$ds_spd['ds_merId'];			$view_content['ds_uid'] =$dis_a['uid'];			$view_content['ds_url'] =$ds_spd['ds_url'];			$view_content['ds_type'] =$ds_spd['ds_type'];			$view_content['first_head']='微信';			$this->assign('view_content', $view_content);			$this->display('giveCheck');		}else{			$this->error_tips('订单生成失败!');		}	}	/**	 * 消息推送	 * 汪威	 */	public function af_pay(){		if($_POST){			//		用户订单完成消息推送			$time = time();			$href = C('config.site_url').'/wap.php?c=Pay&a=pay_accomplish&money='. $_POST["money"] . '&name=' . $_POST["mer_name"].'&outid='.$_POST["out_trade_no"].'&time='.$time;			$model = new templateNews(C('config.wechat_appid'), C('config.wechat_appsecret'));			if($_POST['ds_type']=="1"){				$ke2 = $_POST["money"].'元(优惠'.$_POST["cou_money"].'元)';			}else{				$ke2 = $_POST["money"].'元(优惠'.$_POST["cou_money"].'元)';			}			$orde = time().$_POST['meal_add'];			$model->sendTempMsg('OPENTM201752540',array('href'=>$href,'wecha_id'=>$this->user_session['openid'],'first'=>$_POST['first'].'支付成功通知','keyword1'=>$_POST["mer_name"],'keyword2'=>$orde,'keyword3'=>$ke2,'keyword4'=>date('Y-m-d H:i:s')));			if($_POST['ds_uid']!="0"){				$piece = explode(",", $_POST['ds_uid']);				$num = count($piece);				if($num>1){					$map['uid']  = array('in',$piece);					$open_id = M('user')->where($map)->field('openid')->select();					foreach($open_id as $ke=>$va){						$model->sendTempMsg('OPENTM201752540',array('href'=>$href,'wecha_id'=>$va['openid'],'first'=>$_POST['first'].'收款成功通知','keyword1' => $_POST["mer_name"],'keyword2'=>$orde,'keyword3'=>$ke2,'keyword4'=>date('Y-m-d H:i:s')));					}				}else{					$open_id = M('user')->where('uid='.$_POST['ds_uid'])->field('openid')->find();					$model->sendTempMsg('OPENTM201752540',array('href'=>$href,'wecha_id'=>$open_id['openid'],'first'=>$_POST['first'].'收款成功通知','keyword1'=>$_POST["mer_name"],'keyword2'=>$orde,'keyword3'=>$ke2,'keyword4'=>date('Y-m-d H:i:s')));				}			}			$title = $_POST["mer_name"];//			给提供优惠的商户发送消息			if($_POST['ds_merId']!=$_POST['mer_id']){				$dis_pd = M('merchant')->where('mer_id='.$_POST['ds_merId'])->find();				$title = $dis_pd['name'];				if($dis_pd['uid']!="0"){					$piece = explode(",", $dis_pd['uid']);					$num = count($piece);					if($num>1){						$map['uid']  = array('in',$piece);						$open_id = M('user')->where($map)->field('openid')->select();						foreach($open_id as $ke=>$va){							$model->sendTempMsg('OPENTM201752540',array('href'=>$href,'wecha_id'=>$va['openid'],'first'=>$_POST['first'].'收款成功通知','keyword1'=>$_POST["mer_name"],'keyword2'=>$orde,'keyword3'=>$ke2,'keyword4'=>date('Y-m-d H:i:s')));						}					}else{						$open_id = M('user')->where('uid='.intval($dis_pd["uid"]))->field('openid')->find();						$model->sendTempMsg('OPENTM201752540',array('href'=>$href,'wecha_id'=>$open_id['openid'],'first'=>$_POST['first'].'收款成功通知','keyword1' =>$_POST["mer_name"],'keyword2'=>$orde,'keyword3'=>$ke2,'keyword4'=>date('Y-m-d H:i:s')));					}				}			}		}	}	/* 余额支付处理(含微信在线支付)	* @time 2016-04-26	* @author	小邓  <969101097@qq.com>*/	public function balancePay(){		//echo '余额支付处理';		$wx_pay=isset($_POST['wx_pay']) ? $_POST['wx_pay'] : NULL;		$type_pay=isset($_POST['typePay']) ? $_POST['typePay'] : NULL;		//echo $type_pay;//		dump("2342342");exit;		if($wx_pay>0){		//判断是否是微信在线支付			import('@.ORG.pay.Weixin');	//引入微信类			$pay_method=D('Config')->get_pay_method();			$paydb=new Weixin('','','weixin',$pay_method['weixin']['config'],$this->user_session,1);			$order_arr=array(				'money'=>$_POST['wx_pay'],				'cou_money'=>$_POST['cou_money'],				'code'=>'C'.time().substr(str_shuffle('1234567890'),0,8),				'ds_id'=>$_POST['ds_id'],				'mer_id'=>$_POST['mer_id'],	//商户ID				'other_money'=>$_POST['money']-$_POST['wx_pay'],	//会员卡余额或账户余额支付的				'typePay'=>$type_pay,		//支付类型			);			if($type_pay=='hy_ac_wx' || $type_pay=='ac_wx'){	//账户余额参与的支付				$now_money=M('user')->where(array('uid'=>$this->user_session['uid']))->getField('now_money');				D('User')->user_money($this->user_session['uid'],$now_money,'线下扫码支付');			}			session_start();			$_SESSION['openid']=$this->user_session['openid'];	//设置openID			$state=serialize($order_arr);			$paydb->give_jsapi($state);		}else{			$discount_spead = M('merchant_discount_spead');			$meal_order = M('meal_order');			$dis = M('merchant');			$ds_spd = $discount_spead->where("ds_id=".$_POST['ds_id'])->find();			if(empty($_POST['mer_id'])){				$mer_id = $ds_spd['ds_merId'];			}else{				$mer_id = $_POST['mer_id'];			}			$dis_a = $dis->where('mer_id='.$mer_id)->find();			$cou =sprintf("%.2f", $ds_spd['ds_reMoney'])-sprintf("%.2f", $_POST['cou_money']);			$discount_spead->where("ds_id=".$_POST['ds_id'])->setField('ds_reMoney',$cou);			$out_trade_no='C'.time().substr(str_shuffle('1234567890'),0,8);	//订单号			$money=isset($_POST['money']) ? $_POST['money'] : NULL;			$str_arr=array();			$str_arr['name']=D('Pay')->get_pay_name($type_pay);	//余额支付类型名称			$str_arr['price']=$money;			$str_arr['num']='1';			$str_info=serialize(array($str_arr));			$card_id=M('Member_card_create')->where(array('wecha_id'=>$this->user_session['uid']))->getField('id');			if(!$card_id){				$card_id=0;			}			$meal_data=array(				'uid'=>$this->user_session['uid'],				//'mer_id'=>$this->merchant_session['mer_id'],				'mer_id'=>$mer_id,	//商户ID				'store_id'=>M('merchant_store')->where(array('mer_id'=>$mer_id))->getField('store_id'),//店铺ID				'orderid'=>$out_trade_no,				'status'=>'1',				'paid'=>'1',				'pay_type'=>$type_pay,	//余额支付类型				'name'=>$this->user_session['nickname'],				'phone'=>$this->user_session['phone'],				'address'=>$this->user_session['province'].' '.$this->user_session['city'],				'num'=>'1',				'total'=>'1',				'dateline'=>time(),				'price'=>$_POST['cou_money']+$money,				'pay_time'=>time(),				'last_time'=>$this->user_session['last_time'],				'pay_money'=>$money,				'payment_money'=>$money, //在线支付金额				'minus_price'=>$_POST['cou_money'], //优惠金额				'card_id'=>$card_id, //会员卡ID				'total_price'=>$_POST['cou_money']+$money,				'ds_id'=>$_POST['ds_id'],//优惠眷id				'info'=>$str_info			);			$meal_add= D('meal_order')->data($meal_data)->add();			if($_POST['ds_id']>0){				$coupon_all_money = $money+$_POST['cou_money'];				D('Merchant_request')->add_request($ds_spd['ds_merId'], array('coupon_money' => $_POST['cou_money'], 'coupon_pay_money' => $money, 'coupon_all_money' => $coupon_all_money));			}			if($meal_add){	//订单生成成功				$title = $dis_a['name'];				//		给提供优惠的商户发送消息				if($ds_spd['ds_merId']!=$mer_id){					$dis_pd = $dis->where('mer_id='.$ds_spd['ds_merId'])->find();					$title = $dis_pd['name'];				}//				M('userinfo')->where(array('token'=>$mer_id,'wecha_id'=>$this->user_session['uid']))->data(array('balance'=>0))->save();//会员卡余额清零//				M('user')->where(array('openid'=>$this->user_session['openid']))->data(array('now_money'=>0))->save();//账户余额清零//				$time = time();//				$href = C('config.site_url').'/wap.php?c=Pay&a=pay_accomplish&money='. $money . '&name=' . $dis_a["name"].'&outid='.$out_trade_no.'&time='.$time;//				$model = new templateNews(C('config.wechat_appid'), C('config.wechat_appsecret'));//				if($ds_spd['ds_type']=="1"){//					$ke2 = $money.'元(优惠'.$_POST["cou_money"].'元)';//				}else{//					$ke2 = $money.'元(优惠'.$_POST["cou_money"].'元)';//				}//				$orde = time().$meal_add;//				$model->sendTempMsg('OPENTM201752540', array('href' => $href, 'wecha_id' => $this->user_session['openid'], 'first' => '余额支付成功通知', 'keyword1' => $dis_a['name'], 'keyword2' => $orde, 'keyword3' => $ke2,'keyword4'=>date('Y-m-d H:i:s')));////				if($dis_a['uid']!="0"){//					$piece = explode(",", $dis_a['uid']);//					$num = count($piece);//					if($num>1){//						$map['uid']  = array('in',$piece);//						$open_id = M('user')->where($map)->field('openid')->select();//						foreach($open_id as $ke=>$va){//							$model->sendTempMsg('OPENTM201752540', array('href' => $href, 'wecha_id' => $va['openid'], 'first' => '余额收款成功通知', 'keyword1' => $dis_a['name'], 'keyword2' => $orde,'keyword3' => $ke2,'keyword4'=>date('Y-m-d H:i:s')));//						}//					}else{//						$open_id = M('user')->where('uid='.$dis_a['uid'])->field('openid')->find();//						$model->sendTempMsg('OPENTM201752540', array('href' => $href, 'wecha_id' => $open_id['openid'], 'first' => '余额收款成功通知', 'keyword1' => $dis_a['name'], 'keyword2' =>$orde,'keyword3' => $ke2,'keyword4'=>date('Y-m-d H:i:s')));//					}//				}//				$title = $dis_a['name'];//		//		给提供优惠的商户发送消息//				if($ds_spd['ds_merId']!=$mer_id){//					$dis_pd = $dis->where('mer_id='.$ds_spd['ds_merId'])->find();//					$title = $dis_pd['name'];//					if($dis_pd['uid']!="0"){//						$piece = explode(",", $dis_pd['uid']);//						$num = count($piece);//						if($num>1){//							$map['uid']  = array('in',$piece);//							$open_id = M('user')->where($map)->field('openid')->select();//							foreach($open_id as $ke=>$va){//								$model->sendTempMsg('OPENTM201752540', array('href' => $href, 'wecha_id' => $va['openid'], 'first' => '余额收款成功通知', 'keyword1' => $dis_a['name'], 'keyword2' => $orde,'keyword3' => $ke2,'keyword4'=>date('Y-m-d H:i:s')));//							}//						}else{//							$open_id = M('user')->where('uid='.intval($dis_pd["uid"]))->field('openid')->find();//							$model->sendTempMsg('OPENTM201752540', array('href' => $href, 'wecha_id' => $open_id['openid'], 'first' => '余额收款成功通知', 'keyword1' => $dis_a['name'], 'keyword2' =>$orde,'keyword3' => $ke2,'keyword4'=>date('Y-m-d H:i:s')));//						}//					}//				}				if($type_pay=='balance'){	//会员卡余额支付					M('userinfo')->where(array('token'=>$mer_id,'wecha_id'=>$this->user_session['uid']))->setDec('balance',$money);				}else if($type_pay=='now_money'){	//账户余额支付					//M('user')->where(array('openid'=>$this->user_session['openid']))->setDec('now_money',$money);					D('User')->user_money($this->user_session['uid'],$money,'线下扫码支付');				}else{			//会员卡余额、账户余额支付					$balance_money=M('userinfo')->where(array('token'=>$mer_id,'wecha_id'=>$this->user_session['uid']))->getField('balance');					//M('user')->where(array('openid'=>$this->user_session['openid']))->setDec('now_money',$money-$balance_money);	//账户余额减去的					M('userinfo')->where(array('token'=>$mer_id,'wecha_id'=>$this->user_session['uid']))->data(array('balance'=>0))->save();//会员卡余额清零					D('User')->user_money($this->user_session['uid'],$money-$balance_money,'线下扫码支付');				}				$view_content=array();				$view_content['title'] = $dis_a['name'];				$view_content['money'] =$money;				$view_content['mer_name'] =$title;				$view_content['ds_img'] =$ds_spd['ds_img'];				$view_content['ds_url'] =$ds_spd['ds_url'];				$view_content['out_trade_no'] =$out_trade_no;				$view_content['cou_money'] =$_POST['cou_money'];				$view_content['mer_id'] =$mer_id;				$view_content['ds_merId'] =$ds_spd['ds_merId'];				$view_content['ds_uid'] =$dis_a['uid'];				$view_content['ds_type'] =$ds_spd['ds_type'];				$view_content['meal_add'] =$meal_add;				$view_content['first_head']='余额';				//dump($view_content);				$this->assign('view_content', $view_content);				$this->display('giveCheck');			}else{				$this->error_tips('订单生成失败!');			}		}	}    /*     * 随机免单     * 2018.4.13     */    public function merchant_favourable($order_id,$order_type,$import_result='') {        $data = D('meal_order')->where(array('orderid'=>$order_id,'paid'=>1,'refund'=>0))->find();        if ($data) {            $mid = M('cashier_merchants')->where(array('thirduserid'=>$data['mer_id']))->find()['mid'];//商户id            $favourable = M('config')->where(array('info'=>'merchant_favourable','gid'=>$mid,'tab_id'=>$data['store_id'],'status'=>1))->find();            if ($favourable) {                $value = unserialize($favourable['value']);                $merchant_max = $value['merchant_max'];//最大免单金额                $merchant_starttime = $value['merchant_starttime'];                $merchant_endtime = $value['merchant_endtime'];                $starttime = strtotime(date('Y-m-d '.$merchant_starttime,time()));//免单开始时间                $endtime = strtotime(date('Y-m-d '.$merchant_endtime,time()));//免单结束时间                //在优惠时间内才进行随机免单                if (time()>$starttime && time()<$endtime) {                    $payment_money = $data['payment_money'];//付款金额                    //付款金额小于最大面单金额才进行随机免单                    if ($payment_money < $merchant_max) {                        $merchant_chance = intval(trim($value['merchant_chance'],'%'));//免单概率                        //保险起见概率大于15%不进行免单                        if ($merchant_chance <= 20) {                            $i = mt_rand(1,100);//随机数                            if ($i>=1 && $i<=$merchant_chance) {                                //是否引入了weixin.class.php                                if ($import_result) {                                    $this->wxRefund($data,$mid,$order_type);                                }                            }                        }                    }                }            }        }    }    public function wxRefund($data,$mid,$order_type) {        $pay_method = D('Config')->get_pay_method();        $payConfig = M('cashier_payconfig')->where(array('mid'=>$mid))->find();//对应商户的配置参数        $payConfig['configData'] = unserialize(htmlspecialchars_decode($payConfig['configData'],ENT_QUOTES));        $wx_user =$payConfig['configData']['weixin'];//子商户号来源        $pay_method['weixin']['config']['sub_mch_id']=$wx_user['mchid'];//配置子商户号 这里注意，在前台页面字段是mchid，不是sub_mch_id，收银那边读取的是Cashier/pigcms/Lib/base.class.php        $data['order_id'] = $data['orderid'];        $data['order_type'] = $order_type;        $pay_class = new Weixin($data,$data['payment_money'],'weixin',$pay_method['weixin']['config'],$this->user_session,1);        $res = $pay_class->refund();        if ($res['error'] == 0 && $res['type'] == 'ok') {            D('meal_order')->where(array('orderid'=>$data['order_id']))->save(array('refund'=>1));        }    }    //ajax支付    public function go_pay_ajax(){        if(empty($this->user_session)){            $this->error('请先进行登录！',U('Login/index'));        }        /*$_POST['order_type']=$_GET['order_type'];        $_POST['order_id']=$_GET['order_id'];        $_POST['pay_type']=$_GET['pay_type'];*/        $this->room = $_SESSION['room'];        $carspace_id=$_SESSION['carspace']['carspace_id'];        if(!in_array($_POST['order_type'],array('livepay_property','livepay_carspace'))){            $this->error('订单来源无法识别，请重试。');        }        switch($_POST['order_type']){            case 'livepay_property':                $month=$_POST['month'];                $model=new RoomModel();                $order_id=$model->add_propertylist($this->room['rid'],1,$month,'',$this->user_session['uid'],0,'');                $now_order = D('House_village_room_propertylist')->get_pay_property($this->user_session['uid'],$order_id);                break;            case 'livepay_carspace':                $month=$_POST['month'];                $model=new RoomModel();                $order_id=$model->add_carspacelist($this->room['rid'],$carspace_id,1,$month,'',$this->user_session['uid'],0,'');                $now_order = D('House_village_room_carspacelist')->get_pay_carspace($this->user_session['uid'],$order_id);                break;            default:                $this->error('非法的订单');        }        if($now_order['error'] == 1){            $this->error($now_order['msg'],$now_order['url']);        }        $order_info = $now_order['order_info'];        //用户信息        $now_user = D('User')->get_user($this->user_session['uid']);        if(empty($now_user)){            $this->error('未获取到您的帐号信息，请重试！');        }        //判断积分是否够用 防止支付同时积分被改动            $order_info['score_used_count']=0;            $order_info['score_deducte']=0;        //如果用户存在余额或使用了优惠券，则保存至订单信息。如果金额满足订单总价，则实时扣除并返回支付成功！若不够则不实时扣除，防止用户在付款过程中取消支付        $wx_cheap = 0;        if($order_info['order_type'] == 'livepay_property'){	//在线缴费 小区            $save_result = array('error_code'=>0,'pay_money'=>$order_info['order_price']);        }        // 需要支付的钱        $pay_money = round($save_result['pay_money']*100)/100;        if($this->user_session['uid']=='4675'){            $pay_money=0.01;        }        if(in_array($order_info['order_type'],array('group','meal','takeout','food','appoint','waimai','store')) && $order_info['mer_id']){            $mer_id = $order_info['mer_id'];        }else{            $this->config['merchant_ownpay'] = 0;        }        $this->config['merchant_ownpay'] = intval($this->config['merchant_ownpay']);        switch($this->config['merchant_ownpay']){            case '0':                $pay_method = D('Config')->get_pay_method($notOnline,$notOffline,true);                break;            case '1':                $pay_method = D('Config')->get_pay_method($notOnline,$notOffline,true);                $merchant_ownpay = D('Merchant_ownpay')->field('mer_id',true)->where(array('mer_id'=>$mer_id))->find();                foreach($merchant_ownpay as $ownKey=>$ownValue){                    $ownValueArr = unserialize($ownValue);                    if($ownValueArr['open']){                        $ownValueArr['is_own'] = true;                        $pay_method[$ownKey] = array('name'=>$this->getPayName($ownKey),'config'=>$ownValueArr);                    }                }                break;            case '2':                $pay_method = array();                $merchant_ownpay = D('Merchant_ownpay')->field('mer_id',true)->where(array('mer_id'=>$mer_id))->find();                foreach($merchant_ownpay as $ownKey=>$ownValue){                    $ownValueArr = unserialize($ownValue);                    if($ownValueArr['open']){                        $ownValueArr['is_own'] = true;                        $pay_method[$ownKey] = array('name'=>$this->getPayName($ownKey),'config'=>$ownValueArr);                    }                }                if(empty($pay_method)){                    $pay_method = D('Config')->get_pay_method($notOnline,$notOffline,true);                }                break;        }        session('order',$order_info);        if(empty($pay_method)){            $this->error('系统管理员没开启任一一种支付方式！');        }        $pay_class_name = ucfirst($_POST['pay_type']);        //dump($pay_class_name);exit;Weixin        $import_result = import('@.ORG.pay.'.$pay_class_name);        if(empty($import_result)){            $this->error_tips('系统管理员暂未开启该支付方式，请更换其他的支付方式');        }        $order_id = $order_info['order_id'];        if($_POST['order_type']=='livepay_property'){            $order_table = 'house_village_room_propertylist';        }elseif($_POST['order_type']=='livepay_carspace'){            $order_table = 'house_village_room_carspacelist';        }        $arr=D($order_table)->where("pigcms_id=".$order_id)->find();        $arr=M('house_village_room')->where('id='.$arr['rid'])->find();        if($_POST['order_type']=='livepay_carspace'||$_POST['order_type']=='livepay_property'){            $merchant_info=M('merchant')->where(array('village_id'=>$arr['village_id'],'project_id'=>$arr['project_id'],'name'=>array('like','%物业%')))->field('mer_id')->find();//对应收银台商户信息 小区            $merchant_info=M('cashier_merchants')->where(array('thirduserid'=>$merchant_info['mer_id']))->field('mid')->find();//对应收银台商户信息            //$merchant_info['mid']='28';//测试用 写死        }else{            $merchant_info=M('cashier_merchants')->where(array('thirduserid'=>$arr['mer_id']))->field('mid')->find();//对应收银台商户信息        }        $mid=$merchant_info['mid'];        $payConfig = M('cashier_payconfig')->where(array('mid'=>$mid))->find();//对应商户的配置参数        $payConfig['configData'] = unserialize(htmlspecialchars_decode($payConfig['configData'],ENT_QUOTES));        //dump($arr);        $wx_user =$payConfig['configData']['weixin'];//子商户号来源        $pay_method[$_POST['pay_type']]['config']['sub_mch_id']=$wx_user['mchid'];//配置子商户号 这里注意，在前台页面字段是mchid，不是sub_mch_id，收银那边读取的是Cashier/pigcms/Lib/base.class.php        $pay_class = new $pay_class_name($order_info,$pay_money,$_POST['pay_type'],$pay_method[$_POST['pay_type']]['config'],$this->user_session,1);        //dump($pay_class);        //exit;        $go_pay_param = $pay_class->pay();        if(empty($go_pay_param['error'])){            if(!empty($go_pay_param['weixin_param'])){                if($pay_method['weixin']['config']['is_own']){                    C('open_authorize_wxpay',true);                    $share = new WechatShare($this->config,$_SESSION['openid']);                    $this->hideScript = $share->gethideOptionMenu($mer_id);                    $this->assign('hideScript', $this->hideScript);                    $redirctUrl = C('config.site_url').'/wap.php?g=Wap&c=Pay&a=weixin_back&order_type='.$order_info['order_type'].'&order_id='.$order_info['order_id'].'&own_mer_id='.$order_info['mer_id'];                }else{                    $redirctUrl = C('config.site_url').'/wap.php?g=Wap&c=Pay&a=weixin_back&order_type='.$order_info['order_type'].'&order_id='.$order_info['order_id'];                }                $result=array(                    'error'=>'0',                    'weixin_param'=>json_decode($go_pay_param['weixin_param']),                    'redirctUrl'=>$redirctUrl                );                echo json_encode($result);            }else{                $this->error('调用支付发生错误，请重试。');            }        }else{            //dump($go_pay_param['msg']);            $this->error($go_pay_param['msg']);        }    }}?>