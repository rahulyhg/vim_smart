<?php/* * 社区O2O功能 * */class HouseAction extends BaseAction{    protected $img_dir ="upload/house/";    protected function success($message='',$jumpUrl='',$data){        if(IS_AJAX){            $this->ajaxReturn(array('err'=>0,'msg'=>$message,'data'=>$data));        }else{            parent::success($message,$jumpUrl,false);        }    }    public function error($message='',$jumpUrl='',$data){        if(IS_AJAX){            $this->ajaxReturn(array('err'=>__LINE__,'msg'=>$message,'data'=>$data),"",JSON_UNESCAPED_UNICODE);        }else{            parent::error($message,$jumpUrl,false,"",JSON_UNESCAPED_UNICODE);        }    }    public function village(){        //搜索        if (!empty($_GET['keyword'])) {            if ($_GET['searchtype'] == 'uid') {                $condition_house_village['uid'] = $_GET['keyword'];            } else if ($_GET['searchtype'] == 'nickname') {                $condition_house_village['nickname'] = array('like', '%' . $_GET['keyword'] . '%');            } else if ($_GET['searchtype'] == 'phone') {                $condition_house_village['phone'] = array('like', '%' . $_GET['keyword'] . '%');            }        }        $database_house_village = D('House_village');        $count_village = $database_house_village->where($condition_house_village)->count();        import('@.ORG.system_page');        $p = new Page($count_village, 15);        $village_list = $database_house_village->field(true)->where($condition_house_village)->order('`village_id` DESC')->limit($p->firstRow . ',' . $p->listRows)->select();        $this->assign('village_list', $village_list);        $pagebar = $p->show();        $this->assign('pagebar', $pagebar);        $this->display();    }    public function village_news(){        //搜索        //dump($_SESSION);exit;        if (!empty($_GET['keyword'])) {            if ($_GET['searchtype'] == 'uid') {                $condition_house_village['uid'] = $_GET['keyword'];            } else if ($_GET['searchtype'] == 'nickname') {                $condition_house_village['nickname'] = array('like', '%' . $_GET['keyword'] . '%');            } else if ($_GET['searchtype'] == 'phone') {                $condition_house_village['phone'] = array('like', '%' . $_GET['keyword'] . '%');            }        }        if($_SESSION['system']['account'] != SUPER_ADMIN){            $village_id = M('admin')->where(array('id'=>$_SESSION['system']['id']))->getField('village_id');            $company_id = M('admin')->where(array('id'=>$_SESSION['system']['id']))->getField('company_id');            if($village_id != 0&&$company_id == 0){                $condition_house_village['village_id'] = array('eq',$village_id);                $database_house_village = D('House_village');                $count_village = $database_house_village->where($condition_house_village)->count();                import('@.ORG.system_page');                $p = new Page($count_village, 999);                $village_list = $database_house_village->field(true)->where($condition_house_village)->order('`village_id` DESC')->limit($p->firstRow . ',' . $p->listRows)->select();                $this->assign('village_list', $village_list);                $pagebar = $p->show();                $this->assign('pagebar', $pagebar);            }        }else{            $database_house_village = D('House_village');            $count_village = $database_house_village->where($condition_house_village)->count();            import('@.ORG.system_page');            $p = new Page($count_village, 999);            $village_list = $database_house_village->field(true)->where($condition_house_village)->order('`village_id` DESC')->limit($p->firstRow . ',' . $p->listRows)->select();            $this->assign('village_list', $village_list);            $pagebar = $p->show();            $this->assign('pagebar', $pagebar);        }        //dump($village_id);exit;        $this->display();    }		//小区添加	public function village_add(){		if(IS_POST){			$_POST['pwd'] = md5($_POST['pwd']);			$database_house_village = D('House_village');			$_POST['add_time'] = time();			if($database_house_village->data($_POST)->add()){				$this->success('添加成功！');			}else{				$this->error('添加失败！请重试~');			}		}else{			$this->display();		}	}    //小区添加    public function village_add_new(){        if(IS_POST){            $_POST['pwd'] = md5($_POST['pwd']);            $database_house_village = D('House_village');            $_POST['add_time'] = time();            if($_POST['village_type']==1){                $object_list=$_POST['object_name'];                $carspace_price=$_POST['carspace_price'];                unset($_POST['object_name']);                unset($_POST['carspace_price']);            }            $res=$database_house_village->data($_POST)->add();            if($res){                if($_POST['village_type']==1){                    foreach ($object_list as $value){                        $data=array(                          'village_id'=>$res,                            'desc'=>$value,                            'carspace_price'=>$carspace_price                        );                        M('house_village_project')->data($data)->add();                    }                }                $this->success('添加成功！');            }else{                $this->error('添加失败！请重试~');            }        }else{            //获取需要预算的部门列表            $department_list=M('department')->where(array('budget_type'=>1))->select();            $group_list=M('house_village_group_list')->select();            $this->assign('department_list',$department_list);            $this->assign('group_list',$group_list);            $this->display();        }    }	//小区添加	public function village_edit(){		$database_house_village = D('House_village');		if(IS_POST){			if($_POST['pwd']){				$_POST['pwd'] = md5($_POST['pwd']);			}else{				unset($_POST['pwd']);			}			if($database_house_village->data($_POST)->save()){				$this->success('编辑成功！');			}else{				$this->error('编辑失败！请重试~');			}		}else{			$now_village = $database_house_village->field(true)->where(array('village_id'=>$_GET['village_id']))->find();			if(empty($now_village)){				$this->frame_error_tips('当前小区不存在');			}			$this->assign('now_village',$now_village);						$this->display();		}	}    //小区添加    public function village_edit_new(){        $database_house_village = D('House_village');        if(IS_POST){            if($_POST['pwd']){                $_POST['pwd'] = md5($_POST['pwd']);            }else{                unset($_POST['pwd']);            }            if($_POST['village_type']==1){                $object_list=$_POST['object_name'];                $carspace_price=$_POST['carspace_price'];                unset($_POST['object_name']);                unset($_POST['carspace_price']);            }            $village_id=$_POST['village_id'];            $res=$database_house_village->data($_POST)->save();            if($res){                if($_POST['village_type']==1){                    foreach ($object_list as $value){                        $return=M('house_village_project')->where(array('village_id'=>$village_id,'desc'=>$value))->find();                        if(empty($return)){                            $data=array(                                'village_id'=>$village_id,                                'desc'=>$value,                                'carspace_price'=>$carspace_price                            );                            M('house_village_project')->data($data)->add();                        }else{                            $data=array(                                'carspace_price'=>$carspace_price                            );                            M('house_village_project')->where('pigcms_id='.$return['pigcms_id'])->data($data)->save();                        }                    }                }                $this->success('编辑成功！');            }else{                $this->error('编辑失败！请重试~');            }        }else{            $now_village = $database_house_village->where(array('village_id'=>$_GET['village_id']))->find();            //dump(M()->_sql());exit;            if(empty($now_village)){                $this->frame_error_tips('当前小区不存在');            }            if($now_village['village_type']==1){                $project_list=M('house_village_project')->where('village_id='.$_GET['village_id'])->select();            }            //获取需要预算的部门列表            $department_list=M('department')->where(array('budget_type'=>1))->select();            $group_list=M('house_village_group_list')->select();            $this->assign('department_list',$department_list);            $this->assign('project_list',$project_list);            $this->assign('now_village',$now_village);            $this->assign('group_list',$group_list);            $this->display();        }    }		//小区导入	public function village_import(){		if(IS_POST){			if ($_FILES['file']['error'] != 4) {				$upload_dir = './upload/excel/village/'.date('Ymd').'/';				if (!is_dir($upload_dir)) {					mkdir($upload_dir, 0777, true);				}				import('ORG.Net.UploadFile');				$upload = new UploadFile();				$upload->maxSize = 10 * 1024 * 1024;				$upload->allowExts = array('xls','xlsx');				$upload->allowTypes = array(); // 允许上传的文件类型 留空不做检查				$upload->savePath = $upload_dir;				$upload->thumb = false;				$upload->thumbType = 0;				$upload->imageClassPath = '';				$upload->thumbPrefix = '';				$upload->saveRule = 'uniqid';				if ($upload->upload()) {					$uploadList = $upload->getUploadFileInfo();					require_once APP_PATH . 'Lib/ORG/phpexcel/PHPExcel/IOFactory.php';					$path = $uploadList['0']['savepath'] . $uploadList['0']['savename'];					$fileType = PHPExcel_IOFactory::identify($path); //文件名自动判断文件类型					$objReader = PHPExcel_IOFactory::createReader($fileType);					$excelObj = $objReader->load($path);					$result = $excelObj->getActiveSheet()->toArray(null, true, true, true);					if (!empty($result) && is_array($result)) {						unset($result[1]);						$database_house_village = D('House_village');						$last_village_id = 0;						$err_msg = '';						foreach ($result as $kk => $vv) {							if($vv['A'] === null && $vv['B'] === null && $vv['C'] === null && $vv['D'] === null && $vv['E'] === null && $vv['F'] === null && $vv['G'] === null && $vv['H'] === null && $vv['I'] === null && $vv['J'] === null && $vv['K'] === null && $vv['L'] === null) continue;							if(empty($vv['A'])){								$err_msg = '请填写小区名称！';								continue;							}							if(empty($vv['B'])){								$err_msg = '请填写小区地址！';								continue;							}							if(empty($vv['C'])){								$err_msg = '请填写物业公司名称！';								continue;							}							if(empty($vv['D'])){								$err_msg = '请填写物业联系地址！';								continue;							}							if(empty($vv['E'])){								$err_msg = '请填写物业联系电话！';								continue;							}							if(empty($vv['F'])){								$err_msg = '请填写管理帐号！';								continue;							}							if(empty($vv['G'])){								$err_msg = '请填写管理密码！';								continue;							}																					$tmpdata = array();							$tmpdata['village_name'] = htmlspecialchars(trim($vv['A']), ENT_QUOTES);							//检测小区是否已存在							if($database_house_village->field('`village_id`')->where(array('village_name'=>$tmpdata['village_name']))->find()){								$err_msg = $vv['A'].' 已存在！';								continue;							}														$tmpdata['village_address'] = htmlspecialchars(trim($vv['B']), ENT_QUOTES);							$tmpdata['property_name'] = htmlspecialchars(trim($vv['C']), ENT_QUOTES);							$tmpdata['property_address'] = htmlspecialchars(trim($vv['D']), ENT_QUOTES);							$tmpdata['property_phone'] = htmlspecialchars(trim($vv['E']), ENT_QUOTES);							$tmpdata['account'] = htmlspecialchars(trim($vv['F']), ENT_QUOTES);							$tmpdata['pwd'] = md5(htmlspecialchars(trim($vv['G']), ENT_QUOTES));							!empty($vv['H']) && $tmpdata['property_price'] = htmlspecialchars(trim($vv['H']));							!empty($vv['I']) && $tmpdata['water_price'] = htmlspecialchars(trim($vv['I']), ENT_QUOTES);							!empty($vv['J']) && $tmpdata['electric_price'] = htmlspecialchars(trim($vv['J']));							!empty($vv['K']) && $tmpdata['gas_price'] = htmlspecialchars(trim($vv['K']), ENT_QUOTES);							!empty($vv['L']) && $tmpdata['park_price'] = htmlspecialchars(trim($vv['L']), ENT_QUOTES);							$tmpdata['status'] = 0;							$tmpdata['add_time'] = time();							$last_village_id = $database_house_village->data($tmpdata)->add();							if(!$last_village_id){								$err_msg = $vv['A'].' 导入失败！';							}						}						if(!empty($last_village_id)){							$this->frame_submit_tips(1,'导入成功');							// $this->success('导入成功');						}else{							// $this->error('导入失败');							$this->frame_submit_tips(0,'导入失败！原因：'.$err_msg);						}					}				} else {					// $this->error($upload->getErrorMsg());					$this->frame_submit_tips(0,$upload->getErrorMsg());				}			}			// $this->error('文件上传失败');			$this->frame_submit_tips(0,'文件上传失败');		}else{			$this->display();		}	}    /*公司管理列表     * 2016.8.9     * 陈琦     */    public function company(){        $village_id = I("get.village_id");        if(!empty($village_id)){            $condition_where = " c.village_id = v.village_id and c.village_id = $village_id";        }else{            $condition_where = " c.village_id = v.village_id";        }        $condition_table = array(C('DB_PREFIX') . 'company' => 'c',C('DB_PREFIX').'house_village'=>'v');        $condition_field = 'c.*,v.village_name';        import('@.ORG.system_page');        $count_group = D('')->table($condition_table)->where($condition_where)->count();        $p = new Page($count_group, 15, 'page');        $order='c.company_id desc ';        $company_list = D('')->table($condition_table)->where($condition_where)->field($condition_field)->order($order)->limit($p->firstRow.','.$p->listRows)->select();        $this->assign('company_list', $company_list);        $pagebar = $p->show();        $this->assign('pagebar', $pagebar);        $this->display();    }    public function _before_company_news(){        if(session('system.account')==SUPER_ADMIN){            $this->assign('admin',1);            $villageArray = M('house_village')->where(array('status'=>1))->select();            $this->assign('villageArray',$villageArray);            if(I('get.village_id')){                $presentVillage = M('house_village')->find(I('get.village_id'))['village_name'];            }else{                $presentVillage = '全部显示';            }        }else{            $this->assign('admin',0);            $presentVillage = M('house_village')->find(session('system.village_id'))['village_name'];        }        $this->assign('presentVillage',$presentVillage);    }    public function company_news(){        $village_id = I("get.village_id");        if($_SESSION['system']['account']!=SUPER_ADMIN){            $filter_string = filter_list_role($_SESSION['system']['id']);            $condition_where = " c.village_id = v.village_id and ".$filter_string;            $condition_table = array(C('DB_PREFIX') . 'company' => 'c',C('DB_PREFIX').'house_village'=>'v');            $condition_field = 'c.*,v.village_name';            $order='c.company_id desc ';            $company_list = D('')->table($condition_table)->where($condition_where)->field($condition_field)->order($order)->select();            //dump(M()->_sql());exit();            $this->assign('company_list', $company_list);        }else{            if(!empty($village_id)){                $condition_where = " c.village_id = v.village_id and c.village_id = $village_id";            }else{                $condition_where = " c.village_id = v.village_id";            }            $condition_table = array(C('DB_PREFIX') . 'company' => 'c',C('DB_PREFIX').'house_village'=>'v');            $condition_field = 'c.*,v.village_name';            $order='c.company_id desc ';            $company_list = D('')->table($condition_table)->where($condition_where)->field($condition_field)->order($order)->select();            $this->assign('company_list', $company_list);        }        $this->display();    }    /*2016.8.9     * 公司编辑与添加1     * 陈琦     */    public function company_edit(){        if($_POST){            $company_id=$_POST['company_id'];            $data['village_id']=trim(I('village_id'));            $data['company_name']=trim(I('company_name'));			$data['company_first']=trim(I('company_first'));            $data['company_phone']=trim(I('company_phone'));            $data['add_time']=$_SERVER['REQUEST_TIME'];			$data['is_admin']=trim(I('is_admin'));            if(empty($data['company_name'])){                $this->error('公司名称不能为空');            }			if(empty($data['company_first'])){                $this->error('公司首字母不能为空');            }            if(empty($data['village_id'])){                $this->error('请先选择社区！');            }            if($company_id){                $result=M('company')->where('company_id='.$company_id)->data($data)->save();                if($result >= 0){                    $this->success('修改成功！',U('House/company'));                }else{                    $this->error('修改失败！请重试。');                }            }else{                $result=M('company')->data($data)->add();                if($result){                    $this->success('添加成功！',U('House/company'));                }else{                    $this->error('添加失败！请重试。');                }            }        }else{            $company_id = $_GET['company_id'];            $condition_table = array(C('DB_PREFIX') . 'company' => 'c',C('DB_PREFIX').'house_village'=>'v');            $condition_where = "c.village_id = v.village_id and c.company_id='$company_id' ";            $condition_field = 'c.*,v.village_name';            $company_info = D('')->table($condition_table)->where( $condition_where)->field($condition_field)->find();            $village_categorys=D('house_village')->select();            $village=D('house_village')->where(array('village_id'=>$company_info['village_id']))->find();            $this->assign('company_info',$company_info);            $this->assign('village_categorys', $village_categorys);            $this->assign('village', $village);            $this->display();        }    }    public function company_edit_new(){        if($_POST){            $company_id=$_POST['company_id'];            $data['village_id']=trim(I('village_id'));            $data['company_name']=trim(I('company_name'));            $data['company_first']=trim(I('company_first'));            $data['company_phone']=trim(I('company_phone'));            $data['floor']=trim(I('floor'));            $data['add_time']=$_SERVER['REQUEST_TIME'];            $data['is_admin']=trim(I('is_admin'));            if(empty($data['company_name'])){                $this->error('公司名称不能为空');            }            if(empty($data['company_first'])){                $this->error('公司首字母不能为空');            }            if(empty($data['village_id'])){                $this->error('请先选择社区！');            }            if($company_id){                $result=M('company')->where('company_id='.$company_id)->data($data)->save();                if($result >= 0){                    $this->success('修改成功！',U('House/company_news'));                }else{                    $this->error('修改失败！请重试。');                }            }else{                $result=M('company')->data($data)->add();                if($result){                    $this->success('添加成功！',U('House/company_news'));                }else{                    $this->error('添加失败！请重试。');                }            }        }else{            $company_id = $_GET['company_id'];            $condition_table = array(C('DB_PREFIX') . 'company' => 'c',C('DB_PREFIX').'house_village'=>'v');            $condition_where = "c.village_id = v.village_id and c.company_id='$company_id' ";            $condition_field = 'c.*,v.village_name';            $company_info = D('')->table($condition_table)->where( $condition_where)->field($condition_field)->find();            $village_categorys=D('house_village')->select();            $village=D('house_village')->where(array('village_id'=>$company_info['village_id']))->find();            $this->assign('company_info',$company_info);            $this->assign('village_categorys', $village_categorys);            $this->assign('village', $village);            $this->display();        }    }    /*2016.8.10     * 公司删除     * 陈琦     */    public function company_del(){        if (IS_POST) {            $company_id = I('post.company_id');//前台获取的id            $del = M('company')->where('company_id='.$company_id)->delete();//将数据库中对应前台id的该条信息删除            if($del){                $this->success('删除成功！');            }else{                $this->error('删除失败！请重试。');            }        }    }        public function company_del_new(){        if(IS_POST){            $company_id=I('post.company_id');            $del=M('company')->where('company_id='.$company_id)->delete();            if($del){                echo 1;            }else{                echo 2;            }        }        }            public function edit() {        $this->assign('bg_color', '#F3F3F3');        $database_user = D('User');        $condition_user['uid'] = intval($_GET['uid']);        $now_user = $database_user->field(true)->where($condition_user)->find();        if (empty($now_user)) {            $this->frame_error_tips('没有找到该用户信息！');        }        $levelDb = M('User_level');        $tmparr = $levelDb->field(true)->order('id ASC')->select();        $levelarr = array();        if ($tmparr) {            foreach ($tmparr as $vv) {                $levelarr[$vv['level']] = $vv;            }        }		        $this->assign('levelarr', $levelarr);        $this->assign('now_user', $now_user);        $this->display();    }    public function amend() {        if (IS_POST) {            $database_user = D('User');            $condition_user['uid'] = intval($_POST['uid']);            $now_user = $database_user->field(true)->where($condition_user)->find();            if (empty($now_user)) {                $this->error('没有找到该用户信息！');            }            $condition_user['uid'] = $now_user['uid'];            $data_user['nickname'] = $_POST['nickname'];            $data_user['phone'] = $_POST['phone'];            if ($_POST['pwd']) {                $data_user['pwd'] = md5($_POST['pwd']);            }            $data_user['sex'] = $_POST['sex'];            $data_user['province'] = $_POST['province'];            $data_user['city'] = $_POST['city'];            $data_user['qq'] = $_POST['qq'];            $data_user['status'] = $_POST['status'];			$data_user['youaddress'] = trim($_POST['youaddress']);			$data_user['truename'] = trim($_POST['truename']);			            $_POST['set_money'] = floatval($_POST['set_money']);            if (!empty($_POST['set_money'])) {                if ($_POST['set_money_type'] == 1) {                    $data_user['now_money'] = $now_user['now_money'] + $_POST['set_money'];                } else {                    $data_user['now_money'] = $now_user['now_money'] - $_POST['set_money'];                }                if ($data_user['now_money'] < 0) {                    $this->error('修改后，余额不能小于0');                }            }            $_POST['set_score'] = intval($_POST['set_score']);            if (!empty($_POST['set_score'])) {                if ($_POST['set_score_type'] == 1) {                    $data_user['score_count'] = $now_user['score_count'] + $_POST['set_score'];                } else {                    $data_user['score_count'] = $now_user['score_count'] - $_POST['set_score'];                }                if ($data_user['score_count'] < 0) {                    $this->error('修改后，积分不能小于0');                }            }            $data_user['level'] = intval($_POST['level']);            if ($database_user->where($condition_user)->data($data_user)->save()) {                if (!empty($_POST['set_money'])) {                    D('User_money_list')->add_row($now_user['uid'], $_POST['set_money_type'], $_POST['set_money'], '管理员后台操作', false);                }                if (!empty($_POST['set_score'])) {                    D('User_score_list')->add_row($now_user['uid'], $_POST['set_score_type'], $_POST['set_score'], '管理员后台操作', false);                }                $this->success('修改成功！');            } else {                $this->error('修改失败！请重试。');            }        } else {            $this->error('非法访问！');        }    }		//平台提现	public function companypay(){		if(IS_POST){			if(!$village_info=D('House_village')->field('village_name,property_phone')->where('village_id='.(int)$_POST['village_id'])->select()){				$this->error('小区不存在！');			}			sort($_POST['orderid']);			$orderids = implode(',',$_POST['orderid']);			$data['pay_type'] = 'house';			$data['pay_id'] = $_POST['village_id'];			$data['phone'] = $village_info[0]['property_phone'];			$data['money'] = $_POST['money'];			$data['desc'] = '小区'.$village_info[0]['village_name'].'订单对账|订单号('.$orderids.')'.'|转账'.(float)($_POST['money']/100).' 元';			$data['status'] = 0;			$data['add_time'] = time();            $ch = curl_init();			$model=new Model();			$where['order_id']=array('in',$orderids);			if($model->table(C('DB_PREFIX').'companypay')->add($data)&&$model->table(C('DB_PREFIX').'house_village_pay_order')->where($where)->setField('is_pay_bill',1)){				$this->success("提现申请成功！");			}else{				$this->error("提现失败！请联系管理员！");			}		}else{			$this->error('您提交的数据不正确');		}	}	    public function money_list() {        $this->assign('bg_color', '#F3F3F3');        $database_user_money_list = D('User_money_list');        $condition_user_money_list['uid'] = intval($_GET['uid']);        $count = $database_user_money_list->where($condition_user_money_list)->count();        import('@.ORG.system_page');        $p = new Page($count, 15);        $money_list = $database_user_money_list->field(true)->where($condition_user_money_list)->order('`time` DESC')->select();        $this->assign('pagebar', $p->show());        $this->assign('money_list', $money_list);        $this->display();    }    public function score_list() {        $this->assign('bg_color', '#F3F3F3');        $database_user_score_list = D('User_score_list');        $condition_user_score_list['uid'] = intval($_GET['uid']);        $count = $database_user_score_list->where($condition_user_score_list)->count();        import('@.ORG.system_page');        $p = new Page($count, 15);        $score_list = $database_user_score_list->field(true)->where($condition_user_score_list)->order('`time` DESC')->select();        $this->assign('pagebar', $p->show());        $this->assign('score_list', $score_list);        $this->display();    }    /*     * *导入客户页**** */    public function import() {        $this->display();    }    /*     * *导入客户页**** */    public function execimport() {        if ($_FILES['file']['error'] != 4) {            $getupload_dir = "/upload/excel/user/" . date('Ymd') . '/';            $upload_dir = "." . $getupload_dir;            if (!is_dir($upload_dir)) {                mkdir($upload_dir, 0777, true);            }            import('ORG.Net.UploadFile');            $upload = new UploadFile();            $upload->maxSize = 10 * 1024 * 1024;            $upload->allowExts = array('xls', 'xlsx');            $upload->allowTypes = array(); // 允许上传的文件类型 留空不做检查            $upload->savePath = $upload_dir;            $upload->thumb = false;            $upload->thumbType = 0;            $upload->imageClassPath = '';            $upload->thumbPrefix = '';            $upload->saveRule = 'uniqid';            if ($upload->upload()) {                $uploadList = $upload->getUploadFileInfo();                require_once APP_PATH . 'Lib/ORG/phpexcel/PHPExcel/IOFactory.php';                $path = $uploadList['0']['savepath'] . $uploadList['0']['savename'];                //$reader = PHPExcel_IOFactory::createReader('Excel5');                $fileType = PHPExcel_IOFactory::identify($path); //文件名自动判断文件类型                $objReader = PHPExcel_IOFactory::createReader($fileType);                $excelObj = $objReader->load($path);                $result = $excelObj->getActiveSheet()->toArray(null, true, true, true);                if (!empty($result) && is_array($result)) {                    unset($result[1]);                    $user_importDb = D('User_import');                    foreach ($result as $kk => $vv) {                        if (empty($vv['A']) || empty($vv['B']) || empty($vv['C']))                            continue;                        $tmpdata = array();                        $tmpdata['ppname'] = htmlspecialchars(trim($vv['A']), ENT_QUOTES);                        $tmpdata['telphone'] = htmlspecialchars(trim($vv['B']), ENT_QUOTES);                        $tmpdata['address'] = htmlspecialchars(trim($vv['C']), ENT_QUOTES);                        !empty($vv['D']) && $tmpdata['mer_id'] = intval(trim($vv['D']));                        !empty($vv['E']) && $tmpdata['memberid'] = htmlspecialchars(trim($vv['E']), ENT_QUOTES);                        !empty($vv['F']) && $tmpdata['level'] = intval(trim($vv['F']));                        !empty($vv['G']) && $tmpdata['qq'] = htmlspecialchars(trim($vv['G']), ENT_QUOTES);                        !empty($vv['H']) && $tmpdata['email'] = htmlspecialchars(trim($vv['H']), ENT_QUOTES);                        !empty($vv['I']) && $tmpdata['money'] = intval(trim($vv['I']));                        !empty($vv['J']) && $tmpdata['integral'] = htmlspecialchars(trim($vv['J']), ENT_QUOTES);                        !empty($vv['K']) && $tmpdata['useraccount'] = htmlspecialchars(trim($vv['K']), ENT_QUOTES);                        if (!empty($vv['L'])) {                            $tmpdata['pwdmw'] = trim($vv['L']);                            $tmpdata['pwd'] = md5($tmpdata['pwdmw']);                        }                        $tmpdata['isuse'] = 0;                        $tmpdata['addtime'] = time();                        $user_importDb->add($tmpdata);                    }                    if (!empty($tmpdata)) {                        $this->dexit(array('error' => 0));                    } else {                        $this->dexit(array('error' => 1, 'msg' => '导入失败！'));                    }                }            } else {                $this->dexit(array('error' => 1, 'msg' => $upload->getErrorMsg()));            }        }        $this->dexit(array('error' => 1, 'msg' => '文件上传失败！'));    }    /*     * *导入客户的列表页**** */    public function importlist() {        $user_importDb = D('User_import');        $count_userimportDb = $user_importDb->where('22=22')->count();        import('@.ORG.system_page');        $p = new Page($count_userimportDb, 20);        $pagebar = $p->show();        $this->assign('pagebar', $pagebar);        $tmpdatas = $user_importDb->where('22=22')->order('id ASC')->limit($p->firstRow . ',' . $p->listRows)->select();        $this->assign('userimport', $tmpdatas);        $this->display();    }    /*     * *导入客户的列表页**** */    public function levellist() {        $user_levelDb = D('User_level');        $count_userlevelDb = $user_levelDb->count();        import('@.ORG.system_page');        $p = new Page($count_userlevelDb, 20);        $pagebar = $p->show();        $this->assign('pagebar', $pagebar);        $tmpdatas = $user_levelDb->where('22=22')->order('id ASC')->limit($p->firstRow . ',' . $p->listRows)->select();        $this->assign('userlevel', $tmpdatas);        $this->display();    }    /*     * *添加等级**** */    public function addlevel() {        $levelDb = M('User_level');        $tmparr = $levelDb->where('22=22')->order('level DESC')->find();        $level = 0;        if (!empty($tmparr)) {            $level = $tmparr['level'];        }        $level = $level + 1;        if (IS_POST) {            $lid = intval($_POST['lid']);            if (!($lid > 0)) {                $newdata = array('level' => $level);            }            $lname = trim($_POST['lname']);            if (empty($lname))                $this->error('等级名称没有填写！');            $newdata['lname'] = $lname;            $integral = intval($_POST['integral']);            if (!($integral > 0))                $this->error('等级积分没有填写！');            $newdata['integral'] = $integral;            $newdata['icon'] = trim($_POST['icon']);            $newdata['type'] = trim($_POST['fltype']);            $newdata['boon'] = trim($_POST['boon']);            $newdata['description'] = trim($_POST['description']);            if ($lid > 0) {                $inser_id = $levelDb->where(array('id' => $lid))->save($newdata);            } else {                $inser_id = $levelDb->add($newdata);            }            if ($inser_id) {                $this->success('保存成功！');            } else {                $this->error('保存失败！');            }        } else {            $lid = intval($_GET['lid']);            $tmpdata = $levelDb->where(array('id' => $lid))->find();            if (empty($tmpdata)) {                $tmpdata = array('id' => 0, 'level' => $level, 'lname' => '', 'integral' => '', 'icon' => '', 'boon' => '', 'type' => 0, 'description' => '');            }            $this->assign('leveldata', $tmpdata);            $this->display();        }    }    public function pay_order(){				if (!empty($_GET['keyword'])) {			if ($_GET['searchtype'] == 'order_name') {				$condition['order_name'] = $_GET['keyword'];			} else if ($_GET['searchtype'] == 'phone') {				$condition['phone'] = $_GET['keyword'] ;			}			if($_GET['searchstatus']){				$condition['is_pay_bill']=1;			}else{				$condition['is_pay_bill']=0;			}		}		    	$village_id = $_GET['village_id'];    	if($village_id){    		$condition['village_id'] = $village_id;    		$condition['paid'] = 1;    		$result = D('House_village_pay_order')->get_limit_list_page($condition,20,true);    		    		$finshtotal = $total = 0;    		if($result){    			foreach ($result['order_list'] as $v){    				$total += $v['money'];								//本页的总额    				$v['is_pay_bill'] && $finshtotal += $v['money'];	//本页已对账的总额    			}    		}    		$this->assign('finshtotal',$finshtotal);    		$this->assign('total',$total);    		$this->assign('order_list',$result);    	}    	$this->assign('village_id',$village_id);    	$this->display();    }			 public function pay_order_new(){				if (!empty($_GET['keyword'])) {			if ($_GET['searchtype'] == 'order_name') {				$condition['order_name'] = $_GET['keyword'];			} else if ($_GET['searchtype'] == 'phone') {				$condition['phone'] = $_GET['keyword'] ;			}			if($_GET['searchstatus']){				$condition['is_pay_bill']=1;			}else{				$condition['is_pay_bill']=0;			}		}		    	$village_id = $_GET['village_id'];    	if($village_id){    		$condition['village_id'] = $village_id;    		$condition['paid'] = 1;    		$result = D('House_village_pay_order')->get_limit_list_page($condition,20,true);    		    		$finshtotal = $total = 0;    		if($result){    			foreach ($result['order_list'] as $v){    				$total += $v['money'];								//本页的总额    				$v['is_pay_bill'] && $finshtotal += $v['money'];	//本页已对账的总额    			}    		}    		$this->assign('finshtotal',$finshtotal);    		$this->assign('total',$total);    		$this->assign('order_list',$result);    	}    	$this->assign('village_id',$village_id);    	$this->display();    }        public function change(){    	$village_id = $_POST['village_id'];    	$strids = isset($_POST['strids']) ? htmlspecialchars($_POST['strids']) : '';    	if ($strids && $village_id) {    		$array = explode(',', $strids);    		$usernums = $orderids = array();    		foreach ($array as $val) {    			$t = explode('_', $val);    			if ($t[1]) {    				$orderids[] = $t[1];    			}    		}       		$orderids && D('House_village_pay_order')->where(array('village_id' => $village_id, 'order_id' => array('in', $orderids)))->save(array('is_pay_bill' => 1));    	}    	exit(json_encode(array('error_code' => 0)));    }        /*     * **删除一条导入的记录**** */    function delimportuser() {        $idx = (int) trim($_POST['id']);        $user_importDb = D('User_import');        if ($user_importDb->where(array('id' => $idx))->delete()) {            $this->dexit(array('error' => 0));        } else {            $this->dexit(array('error' => 1));        }    }    /*     * json 格式封装函数* */    private function dexit($data = '') {        if (is_array($data)) {            echo json_encode($data);        } else {            echo $data;        }        exit();    }	public function village_login(){		$database_village = D('House_village');		$condition_village['village_id'] = $_GET['village_id'];		$now_village = $database_village->field(true)->where($condition_village)->find();		if(empty($now_village) || $now_village['status'] == 2){			exit('<html><head><script>window.top.toggleMenu(0);window.top.msg(0,"该小区的状态不存在！请查阅。",true,5);window.history.back();</script></head></html>');		}		session('house',$now_village);		$script_name = trim($_SERVER['SCRIPT_NAME'],'/');		if($_GET['group_id']){			redirect($this->config['site_url'].'/shequ.php?c=Group&a=frame_edit&group_id='.$_GET['group_id'].'&system_file='.$script_name);		}else if($_GET['activity_id']){			redirect($this->config['site_url'].'/shequ.php?c=Activity&a=frame_edit&id='.$_GET['activity_id'].'&system_file='.$script_name);		}else if($_GET['appoint_id']){			redirect($this->config['site_url'].'/shequ.php?c=Appoint&a=frame_edit&appoint_id='.$_GET['appoint_id'].'&system_file='.$script_name);		}else{			redirect($this->config['site_url'].'/shequ.php');		}	}		/* 添加或更新部门	* @time 2016-07-20	* @author	小邓  <969101097@qq.com>*/	public function department_edit(){		if(IS_POST){			if(empty($_POST['deptname'])){				$this->error('部门名称不能为空');			}			$pid=isset($_POST['pid']) ? $_POST['pid'] : NULL;			$idVal=isset($_POST['idVal']) ? $_POST['idVal'] : NULL;			if(!empty($pid)){					$pid=intVal($pid);				//$path=M('department')->where(array('id'=>$pid))->getField('path');//父级path				$path=D('Department')->get_department_path($pid);//父级path				$_POST['path']=implode(',',$path);			}else{				$_POST['path']='0';			}			if(!empty($idVal)){	//判断是修改还是添加				$idVal=intVal($idVal);				$deptname=M('department')->where(array('id'=>array('neq',$idVal),'deptname'=>$_POST['deptname']))->getField('deptname');				/*if($deptname==$_POST['deptname']){					$this->error('部门名称不能重复');				}*/				$_POST['last_time']=time();				$alter=M('department')->where(array('id'=>$idVal))->data($_POST)->save();				if($alter){					$this->success('编辑成功！');				}else{					$this->success('编辑失败！');				}			}else{				$deptname=M('department')->where(array('deptname'=>$_POST['deptname']))->getField('deptname');				/*if($deptname){					$this->error('部门名称不能重复');				}*/				$_POST['add_time']=time();				$add=M('department')->data($_POST)->add();				if($add){					$this->success('添加成功！');				}else{					$this->success('添加失败！');				}			}		}else{			if(I('get.id')){	//修改时				$idVal=intVal(I('get.id'));				$department_info=M('department')->where(array('id'=>$idVal))->find();				$this->assign('department_info',$department_info);			}            $department_list=M('department')->order('add_time asc')->select();	//部门列表            foreach($department_list as $k=>&$v){                $v['text']=$v['deptname'];                //$v['url']='<a href="'.U('House/employee',array('department_id'=>$v['id'])).'"></a>';            }            $list_tree=$this->list_to_tree($department_list,$pk='id',$pid='pid',$child='children',$root=0,$key='');            $departmentLogic = D('Department','Logic');            $optionArray = $departmentLogic->tree_array_to_option($list_tree);			//dump($department_categorys);exit;			$this->assign('department_categorys',$optionArray);			$this->display();		}			}    public function department_edit1(){        if(IS_POST){            if(empty($_POST['deptname'])){                $this->error('部门名称不能为空');            }            $pid=isset($_POST['pid']) ? $_POST['pid'] : NULL;            $idVal=isset($_POST['idVal']) ? $_POST['idVal'] : NULL;            if(!empty($pid)){                $pid=intVal($pid);                //$path=M('department')->where(array('id'=>$pid))->getField('path');//父级path                $path=D('Department')->get_department_path($pid);//父级path                $_POST['path']=implode(',',$path);            }else{                $_POST['path']='0';            }            if(!empty($idVal)){	//判断是修改还是添加                $idVal=intVal($idVal);                $deptname=M('department')->where(array('id'=>array('neq',$idVal),'deptname'=>$_POST['deptname']))->getField('deptname');                if($deptname==$_POST['deptname']){                    $this->error('部门名称不能重复');                }                $_POST['last_time']=time();                $alter=M('department')->where(array('id'=>$idVal))->data($_POST)->save();                if($alter){                    $this->success('编辑成功！');                }else{                    $this->success('编辑失败！');                }            }else{                $deptname=M('department')->where(array('deptname'=>$_POST['deptname']))->getField('deptname');                if($deptname){                    $this->error('部门名称不能重复');                }                $_POST['add_time']=time();                $add=M('department')->data($_POST)->add();                if($add){                    $this->success('添加成功！');                }else{                    $this->success('添加失败！');                }            }        }else{            if(I('get.id')){	//修改时                $idVal=intVal(I('get.id'));                $department_info=M('department')->where(array('id'=>$idVal))->find();                $this->assign('department_info',$department_info);            }            $department_categorys=M('department')->field("id,deptname,pid,path,concat(path,'-',id) as bpath")->order('bpath')->select();            foreach($department_categorys as $key=>$value){                $count=count(explode(',',$value['bpath']))-2;                if($count>=1){                    $department_categorys[$key]['count']='|'.str_repeat('__',$count);                }            }            $village_list=M('house_village')->select();            //dump($department_categorys);exit;            $this->assign('department_categorys',$department_categorys);            $this->assign('village_list',$village_list);            $this->display();        }    }		/* 搜索部门	* @time 2016-07-28	* @author	小邓  <969101097@qq.com>*/	public function dept_select(){        if(IS_AJAX){			if(!empty($_GET['keyword'])){				//$this->ajaxReturn(array('err_code'=>0,'code_data'=>$_GET['keyword']));				$keyword=trim($_GET['keyword']);				$where_data['deptname']=array('like','%'.$keyword.'%');				$dept_list=M('department')->where($where_data)->select();				$this->ajaxReturn(array('err_code'=>0,'code_data'=>$dept_list));			}else{				$this->ajaxReturn(array('err_code'=>2,'code_data'=>'请输入关键词'));			}        }    }		/* 删除部门	* @time 2016-08-02	* @author	小邓  <969101097@qq.com>*/    public function dept_del(){		if(IS_AJAX){			$idVal=intVal($_POST['id']);			$child_arr=M('department')->where(array('_string'=>'find_in_set("'.$idVal.'",path)'))->field('id,deptname')->select();			$user_arr=M('admin')->where(array('department_id'=>$idVal))->field('id,account')->select();			if(is_array($child_arr) || is_array($user_arr)){		//判断是否存在子类或员工				$this->ajaxReturn(array('err_code'=>1,'code_data'=>'无法删除，该部门存在子部门或员工'));			}else{				$where_data=array(                    '_string'=>'find_in_set("'.$idVal.'",path)',					'id'=>$idVal,					'_logic'=>'or'				);				$del=M('department')->where($where_data)->delete();				if($del){					$this->ajaxReturn(array('err_code'=>0,'code_data'=>'删除成功'));				}else{					$this->ajaxReturn(array('err_code'=>2,'code_data'=>'删除失败'));				}			}		}    }		function list_to_tree($list,$pk='id',$pid='pid',$child='_child',$root=0,$key=''){		// 创建Tree		$tree=array();		if(is_array($list)){			// 创建基于主键的数组引用			$refer=array();			foreach($list as $k=>$data){				$refer[$data[$pk]]=&$list[$k];//即$refer[id的值]			}			foreach($list as $k=>$data){				// 判断是否存在parent							$parentId=$data[$pid];//pid的值				if($root==$parentId){					if($key!=''){						$tree[$data[$key]]=&$list[$k];					}else{						$tree[]=&$list[$k];					}				}else{					if(isset($refer[$parentId])){						$parent=&$refer[$parentId];						if($key!=''){							$parent[$child][$data[$key]]=&$list[$k];						}else{							$parent[$child][]=&$list[$k];						}					}				}			}		}		return $tree;	}		/* 部门树形结构方法	* @time 2016-07-25	* @author	小邓  <969101097@qq.com>*/    public function departmentTree($list_tree=''){				if(empty($list_tree)){	//初始化			$department_list=M('department')->order('add_time asc')->select();	//部门列表			$list_tree=$this->list_to_tree($department_list,$pk='id',$pid='pid',$child='_child',$root=0,$key='');		}				$ul_html='<ul>';		foreach($list_tree as $key=>$val){			$ul_html.='<li><a href="'.U('House/employee',array('department_id'=>$val['id'])).'" ref="'.$val['id'].'" class="dept_li">'.$val['deptname'].'</a></li>';			if($val['_child'] && is_array($val['_child'])){	//判断是否存在子类列表				//dump($val['_child']);				$ul_html.=$this->departmentTree($val['_child']);			}		}		$ul_html.='</ul>';			return $ul_html;    }		/* 员工列表	* @time 2016-07-22	* @author	小邓  <969101097@qq.com>*/    public function employee(){		if(IS_AJAX){			if(!empty($_GET['keyword'])){				//$this->ajaxReturn(array('err_code'=>0,'code_data'=>$_GET['keyword']));				$keyword=trim($_GET['keyword']);				$where_data['account|truename']=array('like','%'.$keyword.'%');			}			if(!empty($_GET['department_id'])){								$child_arr=M('department')->where(array('path'=>array('like','%'.$_GET['department_id'].'%')))->field('id')->select();				$ids_str='';				if($child_arr && is_array($child_arr)){		//判断是否存在子类					foreach($child_arr as $val){						$ids_str.=$val['id'].',';					}					$where_data['department_id']=array('in',trim($_GET['department_id'].','.$ids_str));				}else{					$where_data['department_id']=intVal($_GET['department_id']);				}			}			$where_data['status']=array('in','0,1');			import('@.ORG.system_page');			$count_user=M('login_user')->where($where_data)->count();			$p=new Page($count_user,15,'page');			$user_list=M('login_user')->where($where_data)->order('add_time desc')->limit($p->firstRow.','.$p->listRows)->select();			foreach($user_list as $key=>$val){				$user_list[$key]=$val;					$user_list[$key]['add_time']=date('Y-m-d H:i:s',$val['add_time']);//将时间戳转化成标准时间										}			$user_arr['user_list']=$user_list;			$user_arr['pagebar']=$p->show();            //dump($user_arr);exit;			//$this->assign('user_arr',$user_arr);	//员工列表			$this->ajaxReturn(array('err_code'=>0,'code_data'=>$user_arr));						}else{			$where_data['status']=array('in','0,1');			import('@.ORG.system_page');			$count_user=M('login_user')->where($where_data)->count();			$p=new Page($count_user,15,'page');			$user_arr['user_list']=M('login_user')->where($where_data)->order('add_time desc')->limit($p->firstRow.','.$p->listRows)->select();			$user_arr['pagebar']=$p->show();			$this->assign('user_arr',$user_arr);	//员工列表			//print_r($this->departmentTree($list_tree=''));exit;//部门树形分类列表			$this->assign('department_tree',$this->departmentTree($list_tree=''));			$this->assign('department_info',M('department')->where('pid=0')->field('id,deptname')->find());			$this->display();		}		    }    /**     * 员工管理2.0，整合admin权限版     * @author 祝君伟     * @time 2017年8月21日15:52:09     */    public function employee_news(){        if(IS_AJAX){            if(!empty($_GET['search_content'])){                //$this->ajaxReturn(array('err_code'=>0,'code_data'=>$_GET['keyword']));                $search_content=trim($_GET['search_content']);                $where_data['account|truename']=array('like','%'.$search_content.'%');            }            if(!empty($_GET['department_id'])&&$_GET['department_id']!=1){                //$child_arr=M('department')->where(array('path'=>array('like','%'.$_GET['department_id'].'%')))->field('id')->select();                $child_arr=M('department')->where(array('_string'=>'find_in_set('.$_GET['department_id'].',path)'))->field('id')->select();                $ids_str=array();                if($child_arr && is_array($child_arr)){		//判断是否存在子类                    foreach($child_arr as $val){                        $ids_str[]=$val['id'];                    }                    $ids_str[]=trim($_GET['department_id']);                    $where_data['department_id']=array('in',$ids_str);                }else{                    $where_data['department_id']=intVal($_GET['department_id']);                }            }            $where_data['status']=array('in','0,1');            if($_SESSION['system']['account'] !=SUPER_ADMIN){                $admin_array = M('admin')->where(array('id'=>$_SESSION['system']['id']))->find();                if($admin_array['company_id']==0&&$admin_array['village_id']!=0){                    $where_data['village_id'] = array('eq',$admin_array['village_id']);                }elseif ($admin_array['company_id']!=0&&$admin_array['village_id']!=0){                    $where_data['village_id'] = array('eq',$admin_array['village_id']);                    $where_data['company_id'] = array('eq',$admin_array['company_id']);                }            }            import('@.ORG.system_page');            //多角色修改 start            $count_user=M('admin')                ->alias('a')                ->field('a.*')                ->where($where_data)                ->count();            $p=new Page($count_user,15,'page');            $user_list=M('admin')                ->alias('a')                ->field('a.*')                ->where($where_data)                ->order('id desc')                ->limit($p->firstRow.','.$p->listRows)                ->select();            foreach ($user_list as &$v) {                $role_idArr = explode(',',$v['role_id']);                foreach ($role_idArr as $vv) {                    $role_name = D('role')->where(array('role_id'=>$vv))->getField('role_name');                    $v['role_name'] .= $role_name.',';                }                $v['role_name'] = trim($v['role_name'],',');            }            unset($v);            //uodate end//            dump($user_list);exit;            foreach($user_list as $key=>$val){                $user_list[$key]=$val;                $user_list[$key]['add_time']=date('Y-m-d H:i:s',$val['add_time']);//将时间戳转化成标准时间                /*if($val['department_id']==0){                    unset($user_list[$key]);                }*/            }            $user_arr['user_list']=$user_list;            $user_arr['pagebar']=$p->show();            //dump($user_arr);exit;            //$this->assign('user_arr',$user_arr);	//员工列表            $this->ajaxReturn(array('err_code'=>0,'code_data'=>$user_arr));        }else{            if($_SESSION['system']['account'] !=SUPER_ADMIN){                $admin_array = M('admin')->where(array('id'=>$_SESSION['system']['id']))->find();                if($admin_array['company_id']==0&&$admin_array['village_id']!=0){                    $where_data['village_id'] = array('eq',$admin_array['village_id']);                }elseif ($admin_array['company_id']!=0&&$admin_array['village_id']!=0){                    $where_data['village_id'] = array('eq',$admin_array['village_id']);                    $where_data['company_id'] = array('eq',$admin_array['company_id']);                }            }            $where_data['status']=array('eq',1);			import('@.ORG.system_page');            //多角色修改  start            $count_user=M('admin')                ->alias('a')                ->where($where_data)                ->count();            $p=new Page($count_user,15,'page');            $user_arr['user_list']=M('admin')                ->alias('a')                ->field('a.*')                ->where($where_data)                ->order('id desc')                ->limit($p->firstRow.','.$p->listRows)                ->select();            foreach ($user_arr['user_list'] as &$v) {                $role_idArr = explode(',',$v['role_id']);                foreach ($role_idArr as $vv) {                    $role_name = D('role')->where(array('role_id'=>$vv))->getField('role_name');                    $v['role_name'] .= $role_name.',';                }                $v['role_name'] = trim($v['role_name'],',');            }            unset($v);            //update end			$user_arr['pagebar']=$p->show();            $this->assign('user_arr',$user_arr);	//员工列表            //print_r($this->departmentTree($list_tree=''));	//部门树形分类列表            //$this->assign('department_tree',$this->departmentTree($list_tree=''));			$department_info=M('department')->where('pid=0')->field('id,deptname')->find();            $this->assign('department_info',$department_info);            $this->display();        }    }    /**     * @author zhukeqin     * ajax获取员工列表     */    public function ajax_employee_list(){        //时间戳相关        $now=time();        $thismonth_start=strtotime(date('Y-m'));//本月开始时间        $thismonth_end=strtotime(date('Y-m-t'))+24*3600-1;//本月结束时间        $departmentModel=new DepartmentModel();        $personnel_contractModel=new Personnel_contractModel();        $personnel_annualModel=new Personnel_annualModel();        $personnel_positionModel=new Personnel_positionModel();        $start=I('post.start');        $length=I('post.length');        //datatable适配  -1则代表显示全部信息        if($length==-1){            unset($length);        }        // $where_data=array('status'=>1);        //搜索类型        if(!empty($_GET['search_type'])){            $search_type=$_GET['search_type'];            switch ($search_type){                case 1:$where_data['social_addtime']=array('BETWEEN',array($thismonth_start,$thismonth_end)) ;break;                case 2:$where_data['accumulation_addtime']=array('BETWEEN',array($thismonth_start,$thismonth_end)) ; break;            }        }        if(!empty($_POST['search']['value'])){            $search_value='%'.$_POST['search']['value'].'%';            $where_data['account|realname']=array('LIKE',$search_value);        }        if(!empty($_GET['department_id'])&&$_GET['department_id']!=1){            //$child_arr=M('department')->where(array('path'=>array('like','%'.$_GET['department_id'].'%')))->field('id')->select();            $child_arr=M('department')->where(array('_string'=>'find_in_set('.$_GET['department_id'].',path)'))->field('id')->select();            $ids_str=array();            if($child_arr && is_array($child_arr)){     //判断是否存在子类                foreach($child_arr as $val){                    $ids_str[]=$val['id'];                }                $ids_str[]=trim($_GET['department_id']);                $where_data['department_id']=array('in',$ids_str);            }else{                $where_data['department_id']=intVal($_GET['department_id']);            }        }        $where_data['status']=array('in','0,1');        if($_SESSION['system']['account'] !=SUPER_ADMIN){            $admin_array = M('admin')->where(array('id'=>$_SESSION['system']['id']))->find();            if($admin_array['company_id']==0&&$admin_array['village_id']!=0){                $where_data['village_id'] = array('eq',$admin_array['village_id']);            }elseif ($admin_array['company_id']!=0&&$admin_array['village_id']!=0){                $where_data['village_id'] = array('eq',$admin_array['village_id']);                $where_data['company_id'] = array('eq',$admin_array['company_id']);            }        }        // import('@.ORG.system_page');        $dimcount_user=M('admin')            ->alias('a')            ->field('a.*')            ->where($where_data)            ->count();        unset($where_data['account|realname']);        //多角色修改 start        $count_user=M('admin')            ->alias('a')            ->field('a.*')            ->where($where_data)            ->count();                // $p=new Page($count_user,15,'page');        $user_list=M('admin')            ->alias('a')            ->field('a.*')            ->where($where_data)            ->order('id desc')            // ->limit($p->firstRow.','.$p->listRows)            ->limit($start,$length)            ->select();        foreach ($user_list as &$v) {            $role_idArr = explode(',',$v['role_id']);            foreach ($role_idArr as $vv) {                $role_name = D('role')->where(array('role_id'=>$vv))->getField('role_name');                $v['role_name'] .= $role_name.',';            }            $v['role_name'] = trim($v['role_name'],',');        }        unset($v);        //uodate end//            dump($user_list);exit;        foreach($user_list as $key=>$val){            $user_list[$key]=$val;            $user_list[$key]['add_time']=date('Y-m-d H:i:s',$val['add_time']);//将时间戳转化成标准时间            /*if($val['department_id']==0){                unset($user_list[$key]);            }*/        }        // $user_arr['user_list']=$user_list;        // $user_arr['pagebar']=$p->show();        //dump($user_arr);exit;        //$this->assign('user_arr',$user_arr);  //员工列表        // $this->ajaxReturn(array('err_code'=>0,'code_data'=>$user_arr));                // $result_array = $user_arr;        foreach ($user_list as $k => $v) {             if ($v['status'] == 1) {                 $user_list[$k]['status'] = '已启用';             } else {                 $user_list[$k]['status'] = '已禁用';             }         }         foreach ($user_list as $k => $v) {            $url=U('Admin/admin_add_news',array('id'=>$v['id']));            $personnel_cache=<<<EOT                                                            <div style="margin:0px auto; width:116px;">                        <div style="float:left;padding-left:5px; padding-right:5px; cursor:pointer" >                            <a  class="btn green btn-xs" href="{$url}" style="text-align: center"> 编辑 </a>                        </div>                        <div style="padding-left:5px; padding-right:5px; float:right; cursor:pointer">                            <a class="btn red btn-xs" onclick="delete_pr_info(this)" id="{$v['id']}"> 删除 </a>                        </div>                        <div style="clear:both"></div>                    </div>EOT;                $user_list[$k]['action']=$personnel_cache;        }                $result_array=array(            'draw'=>intval(I('post.draw')),            'recordsTotal'=>$count_user,            'recordsFiltered'=>$dimcount_user,            'data'=>$user_list        );        echo json_encode($result_array);    }    //搜索框    public function search_content(){        $content = I('post.content');        if ($content) {            $where['account|realname'] = array('like','%'.$content.'%');        }        $text = I('post.text');        if ($text) {            $where['account|realname'] = array('like','%'.$text.'%');        }                       //条件        $where['status']=array('eq',1);        $user_arr = M('admin')->where($where)->select();        // dump(M()->_sql());        foreach ($user_arr as $k => $v) {            $role_idArr = explode(',',$v['role_id']);            foreach ($role_idArr as $vv) {                $role_name = D('role')->where(array('role_id'=>$vv))->getField('role_name');                $v['role_name'] .= $role_name.',';            }            $user_arr[$k]['role_name'] = trim($v['role_name'],',');        }        unset($v);                $list_content = '';        // $list_content.='<if condition="'.$user_arr.'">';        foreach($user_arr as $k => $v){            $list_content.='<tr><td class="td_checkbox2"><input type="checkbox" name="checkbox2" value="'.$v['id'].'"/></td>';            $list_content.='<td>'.$v['account'].'</td>';            $list_content.='<td>'.$v['realname'].'</td>';            $list_content.='<td>'.$v['role_name'].'</td>';            if ($v['status'] == 1) {                $list_content.='<td ><span data_id="'.$v['id'].'" data_status="'.$v['status'].'" class="clickChange">已启用</span></td>';            } else {                $list_content.='<td ><span data_id="'.$v['id'].'" data_status="'.$v['status'].'" class="clickChange">已禁用</span></td>';            }            // $list_content.='<td ><span data_id="'.$v['id'].'" data_status="'.$v['status'].'" class="clickChange"><if condition="'.$v['status'].' eq 1 ">已启用<else/>已禁用</if></span></td>';                      $list_content.='<td>                                <div style="margin:0px auto; width:116px;">                                    <div style="float:left;padding-left:5px; padding-right:5px; cursor:pointer">                                        <a class="btn green btn-xs" href="Admin/admin_add_news&id='.$v['id'].'" style="text-align: center">                                            编辑                                        </a>                                    </div>                                    <div style="padding-left:5px; padding-right:5px; float:left;cursor:pointer">                                        <a class="btn red btn-xs" onclick="delete_pr_info(this)" id="'.$v['id'].'"> 删除 </a>                                    </div>                                    <div style="clear:both"></div>                                </div>                            </td>                        </tr>';            // $list_content.='<div class="modal fade" id="modal_edit_'.$v['id'].'" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">            //                     <div class="modal-dialog modal-lg" style="width:1200px" role="document">            //                         <div class="modal-content">            //                         </div>            //                     </div>            //                 </div>';        }        // $list_content.='</div><tr style="height:40px;"><td class="textcenter pagebar" colspan="7">'.$user_arr['pagebar'].'</td></tr>        //             <else/><tr><td class="textcenter black" colspan="8">列表为空！</td></tr></if>';         // var_dump($list_content);        $list_content = json_encode($list_content);        echo $list_content;    }    public function employee_news_bck(){        if(IS_AJAX){            if(!empty($_GET['keyword'])){                //$this->ajaxReturn(array('err_code'=>0,'code_data'=>$_GET['keyword']));                $keyword=trim($_GET['keyword']);                $where_data['account|truename']=array('like','%'.$keyword.'%');            }            if(!empty($_GET['department_id'])){                $child_arr=M('department')->where(array('path'=>array('like','%'.$_GET['department_id'].'%')))->field('id')->select();                $ids_str='';                if($child_arr && is_array($child_arr)){		//判断是否存在子类                    foreach($child_arr as $val){                        $ids_str.=$val['id'].',';                    }                    $where_data['department_id']=array('in',trim($_GET['department_id'].','.$ids_str));                }else{                    $where_data['department_id']=intVal($_GET['department_id']);                }            }            $where_data['status']=array('in','0,1');            if($_SESSION['system']['account'] !=SUPER_ADMIN){                $admin_array = M('admin')->where(array('id'=>$_SESSION['system']['id']))->find();                if($admin_array['company_id']==0&&$admin_array['village_id']!=0){                    $where_data['village_id'] = array('eq',$admin_array['village_id']);                }elseif ($admin_array['company_id']!=0&&$admin_array['village_id']!=0){                    $where_data['village_id'] = array('eq',$admin_array['village_id']);                    $where_data['company_id'] = array('eq',$admin_array['company_id']);                }            }            import('@.ORG.system_page');            $count_user=M('login_user')->where($where_data)->count();            $p=new Page($count_user,15,'page');            $user_list=M('login_user')->where($where_data)->order('add_time desc')->limit($p->firstRow.','.$p->listRows)->select();            foreach($user_list as $key=>$val){                $user_list[$key]=$val;                $user_list[$key]['add_time']=date('Y-m-d H:i:s',$val['add_time']);//将时间戳转化成标准时间            }            $user_arr['user_list']=$user_list;            $user_arr['pagebar']=$p->show();            //dump($user_arr);exit;            //$this->assign('user_arr',$user_arr);	//员工列表            $this->ajaxReturn(array('err_code'=>0,'code_data'=>$user_arr));        }else{            if($_SESSION['system']['account'] !=SUPER_ADMIN){                $admin_array = M('admin')->where(array('id'=>$_SESSION['system']['id']))->find();                if($admin_array['company_id']==0&&$admin_array['village_id']!=0){                    $where_data['village_id'] = array('eq',$admin_array['village_id']);                }elseif ($admin_array['company_id']!=0&&$admin_array['village_id']!=0){                    $where_data['village_id'] = array('eq',$admin_array['village_id']);                    $where_data['company_id'] = array('eq',$admin_array['company_id']);                }            }            $where_data['status']=array('in','0,1');            import('@.ORG.system_page');            $count_user=M('login_user')->where($where_data)->count();            $p=new Page($count_user,15,'page');            $user_arr['user_list']=M('login_user')->where($where_data)->order('add_time desc')->limit($p->firstRow.','.$p->listRows)->select();            $user_arr['pagebar']=$p->show();            $this->assign('user_arr',$user_arr);	//员工列表            //print_r($this->departmentTree($list_tree=''));	//部门树形分类列表            //$this->assign('department_tree',$this->departmentTree($list_tree=''));            $department_info=M('department')->where('pid=0')->field('id,deptname')->find();            $this->assign('department_info',$department_info);            $this->display();        }    }		// public function ajax_page1(){		// import('@.ORG.system_page');		// $page=$_POST['page'];		// $department_id=$_POST['department_id'];		// $where_data['status']=array('in','0,1');		// $count_user=M('login_user')->where($where_data)->count();								// echo json_encode('1');	// }	public function tree(){		$department_list=M('department')->where(array('status'=>1))->order('add_time asc')->select();	//部门列表		foreach($department_list as $k=>&$v){			$v['text']=$v['deptname'];			//$v['url']='<a href="'.U('House/employee',array('department_id'=>$v['id'])).'"></a>';		}		$list_tree=$this->list_to_tree($department_list,$pk='id',$pid='pid',$child='children',$root=0,$key='');		echo json_encode ($list_tree);	}    /* 多角色添加或更新员工	* @time 2018-03-29	* @author    */    public function employee_edit(){        if(IS_POST){            if($_GET['isajax']){                $company_list = M('company')->where(array('village_id'=>$_POST['village_id']))->select();                echo json_encode(array('err_code'=>0,'code_data'=>$company_list));                exit;            }            //验证传递到后台数据            if(empty($_POST['account'])){                $this->error('用户名不能为空');            }            if(!$_POST['idVal'] && empty($_POST['pwd'])){//只添加时判断                $this->error('密码不能为空');            }else if(!empty($_POST['pwd'])){                $_POST['pwd']=md5($_POST['pwd']);            }            if(empty($_POST['realname'])){                $this->error('真实姓名不能为空');            }            if(empty($_POST['village_id'])){                $this->error('请选择所属社区');            }            if(empty($_POST['role_id'])){                $this->error('请选择所属角色');            }            /*if(empty($_POST['phone'])){                $this->error('手机号码不能为空');            }else if(!preg_match('/^1[3|4|5|7|8]\d{9}$/',$_POST['phone'])){                $this->error('手机号码格式不对');            }*/            //修改为多角色            $_POST['role_id'] = implode(',',$_POST['role_id']);            //判断用户id            $data = $_POST;            $idVal=isset($data['idVal']) ? $data['idVal'] : NULL;            //查询opeind入表            if(!empty($data['nickname'])){                $openid = M('user')->getFieldByNickname($data['nickname'],'openid');                if($openid){                    $data['openid'] = $openid;                }else{                    $data['openid'] = '';                }            }else{                $data['openid'] = '';            }            unset($data['nickname']);            //判断是修改还是添加            // vd($data);exit;            //更新操作            $data['last_time']=time();            if(empty($data['pwd']))unset($data['pwd']);            $alter=M('admin')->where(array('id'=>$idVal))->data($data)->save();            if($alter){                $this->success('编辑成功！',U('House/employee_news'));            }else{                $this->error('编辑失败！',U('House/employee_news'));            }        }else{            //修改时            $idVal=intVal(I('get.id'));            $user_info=M('admin')->where(array('id'=>$idVal))->find();//            $is_xz_or_cw = in_array($user_info['role_id'],[19,66]) ? 1:0 ; //是否是行政财务人员            //修改多角色            $user_info['role_id'] = explode(',',$user_info['role_id']);            $intnum = 0;            if (in_array(19,$user_info['role_id'])) $intnum++;            if (in_array(66,$user_info['role_id'])) $intnum++;            $is_xz_or_cw = $intnum? 1:0 ;//是否是行政财务人员//            dump($user_info['role_id']);exit;            //end            $this->assign('is_xz_or_cw',$is_xz_or_cw);            //查询其昵称名            $nickname = M('user')->getFieldByOpenid($user_info['openid'],'nickname');            $user_info['nickname']=$nickname;            $this->assign('user_info',$user_info);            $company_list=M('company')->where(array('village_id'=>$user_info['village_id']))->select();//2016.8.10            $department_list=M('department')->order('add_time asc')->select();	//部门列表            foreach($department_list as $k=>&$v){                $v['text']=$v['deptname'];                //$v['url']='<a href="'.U('House/employee',array('department_id'=>$v['id'])).'"></a>';            }            $list_tree=$this->list_to_tree($department_list,$pk='id',$pid='pid',$child='children',$root=0,$key='');            $departmentLogic = D('Department','Logic');            $optionArray = $departmentLogic->tree_array_to_option($list_tree);            $role_list=M('role')->field('role_id,role_name')->select();            $village_list=M('house_village')->field('village_id,village_name')->order('village_id DESC')->select();            $merchantArray = M('merchant')->where(array('status'=>1))->select();            $user_list = M('user')->where(array('status'=>1))->select();            $this->assign('department_categorys',$optionArray);	//部门分类列表            $this->assign('role_list',$role_list);	//角色列表            $this->assign('village_list',$village_list);	//社区列表            $this->assign('user_list',$user_list);	//微信用户列表            $this->assign('merchant_list',$merchantArray);	//商户列表            $this->assign('company_list',$company_list);            //入住单位列表            $tenant_array = M('house_village_user_bind')                ->where('type=1 and tenantname!="" and village_id=%d',$user_info['village_id'])                ->select();            $this->assign('tenant_array',$tenant_array);            $this->display();        }    }    public function employee_add(){        if(IS_POST){            if($_GET['isajax']){                $company_list = M('company')->where(array('village_id'=>$_POST['village_id']))->select();                echo json_encode(array('err_code'=>0,'code_data'=>$company_list));                exit;            }            //验证传递到后台数据            if(empty($_POST['account'])){                $this->error('用户名不能为空');            }            if(!$_POST['idVal'] && empty($_POST['pwd'])){//只添加时判断                $this->error('密码不能为空');            }else if(!empty($_POST['pwd'])){                $_POST['pwd']=md5($_POST['pwd']);            }            if(empty($_POST['realname'])){                $this->error('真实姓名不能为空');            }            if(empty($_POST['village_id'])){                $this->error('请选择所属社区');            }            if(empty($_POST['role_id'])){                $this->error('请选择所属角色');            }            if(empty($_POST['phone'])){                $this->error('手机号码不能为空');            }else if(!preg_match('/^1[3|4|5|7|8]\d{9}$/',$_POST['phone'])){                $this->error('手机号码格式不对');            }            //多角色处理            $_POST['role_id'] = implode(',',$_POST['role_id']);            //判断用户id            $data = $_POST;            $idVal=isset($data['idVal']) ? $data['idVal'] : NULL;            //查询opeind入表            if(!empty($data['nickname'])){                $openid = M('user')->getFieldByNickname($data['nickname'],'openid');                if($openid){                    $data['openid'] = $openid;                }else{                    $data['openid'] = '';                }            }else{                $data['openid'] = '';            }            unset($data['nickname']);            //判断是修改还是添加            $data['last_time']=time();            //vd($data);exit;            $add=M('admin')->data($data)->add();            if($add){                    $this->success('添加成功！',U('House/employee_news'));            }else{                $this->error('添加失败！',U('House/employee_news'));            }        }else{            $department_list=M('department')->order('add_time asc')->select();	//部门列表            foreach($department_list as $k=>&$v){                $v['text']=$v['deptname'];                //$v['url']='<a href="'.U('House/employee',array('department_id'=>$v['id'])).'"></a>';            }            $list_tree=$this->list_to_tree($department_list,$pk='id',$pid='pid',$child='children',$root=0,$key='');            $departmentLogic = D('Department','Logic');            $optionArray = $departmentLogic->tree_array_to_option($list_tree);            //vd($optionArray);exit;            /*$department_categorys=M('department')->field("id,deptname,pid,path,concat(path,'-',id) as bpath")->order('bpath')->select();//concat(path,'-',id) as bpath，将两个字符串拼接起来形成单一的字符串，order排序时会根据bpath（层级关系）来排序            //dump($department_categorys);exit;            foreach($department_categorys as $key=>$value){                $count=count(explode('-',$value['bpath']))-2;                if($count>=1){                    $department_categorys[$key]['count']='|'.str_repeat('__',$count);	//str_repeat()重复|__的次数                }            }*/            $role_list=M('role')->field('role_id,role_name')->select();            $village_list=M('house_village')->field('village_id,village_name')->where(array('status'=>1))->order('village_id DESC')->select();            $merchantArray = M('merchant')->where(array('status'=>1))->select();            $company_list=M('company')->select();            $user_list = M('user')->where(array('status'=>1))->select();            $this->assign('department_categorys',$optionArray);	//部门分类列表            $this->assign('role_list',$role_list);	//角色列表            $this->assign('village_list',$village_list);	//社区列表            $this->assign('user_list',$user_list);	//微信用户列表            $this->assign('merchant_list',$merchantArray);	//商户列表            $this->assign('company_list',$company_list);            //入住单位列表            $tenant_array = M('house_village_user_bind')                ->where('type=1 and tenantname!=""')                ->select();            $this->assign('tenant_array',$tenant_array);            $this->display();        }    }    public function employee_edit_new(){        $personnel=new PersonnelModel();        if(IS_POST){        }else{            $idVal=intVal(I('get.id'));            if(!empty($idVal)){                $personnel_info=$personnel->get_personnel_one(array('personnel_id'=>$idVal));                if(empty($personnel_info)) $this->error('没有该人员');                if(!empty($personnel_info['admin_id'])) $personnel_info['admin_info']=M('admin')->where(array('id'=>$personnel_info['admin_id']))->find();                $personnel_info['admin_info']['role_id']=explode(',',$personnel_info['admin_info']['role_id']);                //查询其昵称名                $nickname = M('user')->getFieldByOpenid($personnel_info['admin_info']['openid'],'nickname');                $personnel_info['admin_info']['nickname']=$nickname;                $this->assign('personnel_info',$personnel_info);            }            $department_list=M('department')->order('add_time asc')->select();	//部门列表            foreach($department_list as $k=>&$v){                $v['text']=$v['deptname'];                //$v['url']='<a href="'.U('House/employee',array('department_id'=>$v['id'])).'"></a>';            }            $list_tree=$this->list_to_tree($department_list,$pk='id',$pid='pid',$child='children',$root=0,$key='');            $departmentLogic = D('Department','Logic');            $optionArray = $departmentLogic->tree_array_to_option($list_tree);            $role_list=M('role')->field('role_id,role_name')->select();            $village_list=M('house_village')->field('village_id,village_name')->order('village_id DESC')->select();            $this->assign('department_categorys',$optionArray);	//部门分类列表            $this->assign('role_list',$role_list);	//角色列表            $this->assign('village_list',$village_list);	//社区列表            $this->display();        }    }    /**     * 查询微信昵称匹配项     */    public function ajax_to_autocomplete(){        $keyword = I('get.query');        //制作查询语句        $map['nickname']=array('like','%'.$keyword.'%');        $keyword_array = M('user')->where($map)->limit(5)->order('uid desc')->select();        foreach ($keyword_array as $value){            $result_array[] =array(                'label'=>$value['nickname'],            );        }        echo json_encode($result_array);    }    /**     * 查询微信昵称匹配项     */    public function ajax_to_autocomplete_phone(){        $keyword = I('get.query');        //制作查询语句        $map['phone']=array('like','%'.$keyword.'%');        $keyword_array = M('house_village_user_bind')->where($map)->limit(5)->order('pigcms_id desc')->select();        foreach ($keyword_array as $value){            $result_array[] =array(                'label'=>$value['phone'],            );        }        echo json_encode($result_array);    }    /**     * 查询微信昵称匹配项     */    public function ajax_to_autocomplete_name(){        $keyword = I('get.query');        //制作查询语句        $map['name']=array('like','%'.$keyword.'%');        $keyword_array = M('house_village_user_bind')->where($map)->limit(5)->order('pigcms_id desc')->select();        foreach ($keyword_array as $value){            $result_array[] =array(                'label'=>$value['name'],            );        }        echo json_encode($result_array);    }    /*    *ajax 获取对应人的手机号码    * */    public function user_bind_phone(){        $name = I('post.realname');        $user_info = M('house_village_user_bind')->getByName($name);        $weixin_nick = M('user')->getFieldByUid($user_info['uid'],'nickname');        $show_array = array(            'phone'=>empty($user_info['phone'])?'':$user_info['phone'],            'weixin_nick'=>empty($weixin_nick)?'':$weixin_nick,        );        echo json_encode($show_array);    }    /*    *ajax 获取对应人的手机号码    * */    public function phone_bind_user(){        $phone = I('post.phone');        $user_info = M('house_village_user_bind')->getByPhone($phone);        $weixin_nick = M('user')->getFieldByUid($user_info['uid'],'nickname');        $show_array = array(            'name'=>empty($user_info['name'])?'':$user_info['name'],            'weixin_nick'=>empty($weixin_nick)?'':$weixin_nick,        );        echo json_encode($show_array);    }    /*    *ajax 获取对应微信昵称的人信息    * */    public function weixin_bind_user(){        $nickname = I('post.nickname');        $uid = M('user')->getFieldByNickname($nickname,'uid');        //vd(M()->_sql());exit;        if($uid!=null){            $user_info = M('house_village_user_bind')->getByUid($uid);            $show_array = array(                'phone'=>empty($user_info['phone'])?'':$user_info['phone'],                'name'=>empty($user_info['name'])?'':$user_info['name'],            );        }else{            $user_info = M()->table('smart_user')->getByUser_wxnik($nickname);            $show_array = array(                'phone'=>empty($user_info['user_phone'])?'':$user_info['user_phone'],                'name'=>empty($user_info['user_t_name'])?'':$user_info['user_t_name'],            );        }        echo json_encode($show_array);    }    /*    *    * ajax 选择相应的社区下的公司    * */    public function make_company_list(){        $village_id = I('post.village_id');        //接受前台传来的数据并且调用封装方法进行处理        $company_array = M('company')->where(array('village_id'=>$village_id))->select();        $option_list = '';        //拼接OPTION字符串        foreach ($company_array as $value){            $option_list .= '<option value="'.$value['company_id'].'">'.$value['company_name'].'</option>';        }        echo '<select style="width:95%; border:1px #e3e7ea solid; border-radius:6px; height:32px; line-height:32px; outline:none; color:#919191; font-size:14px; padding-left:10px; font-family:\'微软雅黑\';" name="company_id" id="company_id"><option value="0">请选择</option>'.$option_list.'</select>';    }    /*     * ajax 获取对应项目下的商户列表     * */    public function make_merchant_list(){        $village_id = I('post.village_id');        //接受前台传来的数据并且调用封装方法进行处理        $merchant_array = M('merchant')->where(array('village_id'=>$village_id))->select();        $option_list = '';        //拼接OPTION字符串        foreach ($merchant_array as $value){            $option_list .= '<option value="'.$value['mer_id'].'">'.$value['name'].'</option>';        }        echo '<select style="width:95%; border:1px #e3e7ea solid; border-radius:6px; height:32px; line-height:32px; outline:none; color:#919191; font-size:14px; padding-left:10px; font-family:\'微软雅黑\';" name="mer_id" id="mer_id"><option value="0">请选择</option>'.$option_list.'</select>';    }		/* 改变用户状态	* @time 2016-07-28	* @author	小邓  <969101097@qq.com>*/	public function employee_status(){        if(IS_POST){			if($_POST['ids'] && is_array($_POST['ids'])){		//判断是否批量操作				$alter_user=M('login_user')->where(array('id'=>array('in',$_POST['ids'])))->data(array('status'=>intVal($_POST['status'])))->save();				if($alter_user){					$user_list=M('login_user')->where(array('id'=>array('in',$_POST['ids'])))->select();					$list_content='<tr><td class="td_checkbox"><input class="td_checkbox" type="checkbox" name="checkbox" value="checkbox"/></td>';					$list_content.='<td width="10%" class="td_left">用户名</td>';					$list_content.='<td width="30%" class="td_left">真实姓名</td>';										//$list_content.='<td width="15%" class="td_left">手机号</td>';					$list_content.='<td width="20%" class="td_left">时间</td>';					$list_content.='<td width="10%" class="td_center">状态</td>';					$list_content.='<td width="15%" class="td_center">操作</td></tr>';					foreach($user_list as $val){						$del_url="{pigcms{:U('House/employee_del')}";						if($val['status']==1){							$status_name='已启用';						}else{							$status_name='已禁用';						}						$list_content.='<tr><td class="td_checkbox2"><input type="checkbox" name="checkbox2" value="'.$val['id'].'"/></td>';						$list_content.='<td class="td_left2">'.$val['account'].'</td>';						$list_content.='<td class="td_left2">'.$val['truename'].'</td>';						//$list_content.='<td class="td_left2">'.$val['phone'].'</td>';						$list_content.='<td class="td_left2">'.$val['add_time'].'</td>';						$list_content.='<td class="td_center2"><span data_id="'.$val['id'].'" data_status="'.$val['status'].'" class="clickChange">'.$status_name.'</span></td>';												$list_content.='<td class="td_center2"><a href="javascript:void(0);" data_idVal="'.$val['id'].'" class="bj select_bj">编辑</a> | <a href="javascript:void(0);" class="delete_row bj" parameter="id='.$val['id'].'" url="'.$del_url.'">删除</a></td></tr>';					}					$this->ajaxReturn(array('msg_code'=>0,'msg_data'=>$list_content));				}else{					$this->ajaxReturn(array('msg_code'=>1,'msg_data'=>'改变失败！'));				}			}else{				if(intVal($_POST['status'])==1){					$status=0;	//禁用				}else{					$status=1;	//启用				}				$alter_user=M('login_user')->where(array('id'=>intval($_POST['ids'])))->data(array('status'=>$status))->save();				if($alter_user){					$this->ajaxReturn(array('msg_code'=>0,'msg_data'=>$status));				}else{					$this->ajaxReturn(array('msg_code'=>1,'msg_data'=>'改变失败！'));				}			}                  }    }	public function employee_status_new(){        if(IS_POST){			if($_POST['ids'] && is_array($_POST['ids'])){		//判断是否批量操作				$alter_user=M('login_user')->where(array('id'=>array('in',$_POST['ids'])))->data(array('status'=>intVal($_POST['status'])))->save();				if($alter_user){					$user_list=M('login_user')->where(array('id'=>array('in',$_POST['ids'])))->select();					$list_content='<tr><th class="td_checkbox"><input class="td_checkbox" type="checkbox" name="checkbox" value="checkbox" onClick="checkAll(this)"/></td>';					$list_content.='<th>用户名</th>';					$list_content.='<th>真实姓名</th>';										$list_content.='<th>时间</th>';					$list_content.='<th style="text-align:center;">状态</th>';					$list_content.='<th style="text-align:center;">操作</th></tr>';					foreach($user_list as $val){						$del_url="{pigcms{:U('House/employee_del')}";						if($val['status']==1){							$status_name='已启用';						}else{							$status_name='已禁用';						}						$list_content.='<tr><td class="td_checkbox2"><input type="checkbox" name="checkbox2" value="'.$val['id'].'"/></td>';						$list_content.='<td>'.$val['account'].'</td>';						$list_content.='<td>'.$val['truename'].'</td>';						$list_content.='<td>'.$val['add_time'].'</td>';						$list_content.='<td><span data_id="'.$val['id'].'" data_status="'.$val['status'].'" class="clickChange">'.$status_name.'</span></td>';												$list_content.='<td><div style="margin:0px auto; width:116px;"><div style="float:left;padding-left:5px; padding-right:5px; cursor:pointer"><span class="label label-sm label-success bj select_bj" data_idVal="'.$val['id'].'"> 编辑 </span></div><div style="padding-left:5px; padding-right:5px; float:left;cursor:pointer"><span class="label label-sm label-default" onclick="delete_pr_info(this)" id="'.$val['id'].'">删除</span></div><div style="clear:both"></div></div></tr>';					}					$this->ajaxReturn(array('msg_code'=>0,'msg_data'=>$list_content));				}else{					$this->ajaxReturn(array('msg_code'=>1,'msg_data'=>'改变失败！'));				}			}else{				if(intVal($_POST['status'])==1){					$status=0;	//禁用				}else{					$status=1;	//启用				}				$alter_user=M('admin')->where(array('id'=>intval($_POST['ids'])))->data(array('status'=>$status))->save();				if($alter_user){					$this->ajaxReturn(array('msg_code'=>0,'msg_data'=>$status));				}else{					$this->ajaxReturn(array('msg_code'=>1,'msg_data'=>'改变失败！'));				}			}                  }    }	    /*删除员工     * 2016.8.12     * 陈琦     */    public function employee_del(){        if (IS_POST) {            $id = I('post.id');//前台获取的id            $del = M('admin')->where('id='.$id)->delete();//将数据库中对应前台id的该条信息删除            if($del){                echo json_encode('1');            }        }    }	        /* 角色列表    * @time 2016-07-21    * @author	陈琦  <849176855@qq.com>*/    public function role(){        $role_list=D('Role')->getList();       // dump($role_list);exit;        $this->assign('role_list',$role_list);        $this->display();    }    public function role_news(){        $role_list=D('Role')->getList();//        dump($role_list);exit;        $this->assign('role_list',$role_list);        $this->display();    }        /* 角色添加或编辑    * @time 2016-07-21    * @author	陈琦  <849176855@qq.com>*/    public function role_edit(){        if($_POST){//post表单提交数据            $role_id=$_POST['role_id'];            $data['role_name']=trim(I('role_name'));            $data['role_desc']=trim(I('role_desc'));            $data['add_time'] = $_SERVER['REQUEST_TIME'];            if(empty($data['role_name'])){                $this->error('角色名称不能为空！');            }            if($role_id){//存在该条id记录，则编辑                $role_nameArr=M('role')->where(array('role_id'=>array('neq',$role_id),'role_name'=>$data['role_name']))->getField('role_name');                if($role_nameArr){                    $this->error('此角色名称已存在，请修改！');                }                $result=M('role')->where('role_id='.$role_id)->data($data)->save();                if($result>0){                    $this->success('修改成功',U('House/role'));                }else{                    $this->error('修改失败,请重试');                }            }else{//不存在该条id记录，则为添加                $role_nameArr=M('role')->where(array('role_name'=>$data['role_name']))->getField('role_name');                if($role_nameArr){                    $this->error('此角色名称已存在，请重试！');                }                $result=M('role')->data($data)->add();                if($result){                    $this->success('添加成功',U('House/role'));                }else{                    $this->error('添加失败，请重试');                }            }        }else{            $role_id=$_GET['role_id'];            if($role_id){                $role_info=M('role')->where('role_id='.$role_id)->find();                $this->assign('role_info',$role_info);            }            $this->display();        }    }    public function role_edit_new(){        if(IS_POST){            //dump($_POST);exit;            $role_id=$_POST['role_id'];            $data['role_name']=trim(I('role_name'));            $data['role_desc']=trim(I('role_desc'));            $data['add_time'] = $_SERVER['REQUEST_TIME'];            $menus = isset($_POST['menus']) ? $_POST['menus'] : '';            $menus = implode(',', $menus);            $data['menus']=$menus;            $data['car_role_id']=$_POST['car_role_id'];            //vd($data);exit;            if(empty($data['role_name'])){                $this->error('角色名称不能为空！');            }            if($role_id){//存在该条id记录，则编辑                $result=M('role')->where('role_id='.$role_id)->data($data)->save();                if($result){                    $this->success('修改成功',U('House/role_news'));                }else{                    $this->error('修改失败,请重试');                }            }else{//不存在该条id记录，则为添加                //dump($data);exit;                $result=M('role')->data($data)->add();                if($result){                    $this->success('添加成功',U('House/role_news'));                }else{                    $this->error('添加失败，请重试');                }            }        }else{            $role_id=$_GET['role_id'];            $role=M('role')->where('role_id='.$role_id)->find();            $role['menus'] = explode(',', $role['menus']);            $this->assign('role',$role);            $menus_O2O = D('permission_menu')->where(array('is_show'=>1,'auth_area'=>0))->order('`sort` DESC,`id` ASC')->select();            $menus_phone = D('permission_menu')->where(array('is_show'=>1,'auth_type'=>0,'auth_area'=>1))->order('`sort` DESC,`id` ASC')->select();            $menus_model = D('permission_menu')->where(array('is_show'=>1,'auth_type'=>4,'auth_area'=>0))->order('`sort` DESC,`id` ASC')->select();            //$menus_shequ = D('permission_menu')->where(array('is_show'=>1,'auth_area'=>2))->order('`sort` DESC,`id` ASC')->select();            $menus_yulan = D('permission_menu')->where(array('is_show'=>1,'auth_type'=>4,'auth_area'=>1,'fid'=>0))->order('`sort` DESC,`id` ASC')->select();//            $menus_yulan = D('permission_menu')->where(array('is_show'=>1,'auth_type'=>4,'auth_area'=>1))->order('`sort` DESC,`id` ASC')->select();//            $menus_guanli = D('permission_menu')->where(array('is_show'=>1,'auth_type'=>5,'auth_area'=>1,'fid'=>0))->order('`sort` DESC,`id` ASC')->select();            $menus_guanli = D('permission_menu')->where(array('is_show'=>1,'auth_type'=>5,'auth_area'=>1))->order('`sort` DESC,`id` ASC')->select();            $menus_O2O = $this->deal_son_list($menus_O2O);            $menus_phone = $this->deal_son_list($menus_phone);            $menus_model = $this->deal_son_list($menus_model);            $menus_yulan = $this->deal_son_list($menus_yulan);            $menus_guanli = $this->deal_son_list($menus_guanli);            foreach ($menus_O2O as $item=>$value){                if($value['fid']==0&&$value['group_id']==0){                    unset($menus_O2O[$item]);                }            }//            foreach ($menus_guanli as $item=>$value){//                if($value['fid']==0&&$value['group_id']==0){//                    unset($menus_guanli[$item]);//                }//            }            foreach ($menus_yulan as $k=>&$v){                $id = $v['id'];                $v['son'] = D('permission_menu')->where(array('is_show'=>1,'auth_type'=>4,'auth_area'=>1,'fid'=>$id))->order('`sort` DESC,`id` ASC')->select();            }            unset($v);//            dump($menus_guanli);exit;//            foreach ($menus_guanli as $k=>&$v){//                $id = $v['id'];//                $v['son'] = D('permission_menu')->where(array('is_show'=>1,'auth_type'=>5,'auth_area'=>1,'fid'=>$id))->order('`sort` DESC,`id` ASC')->select();//            }////            unset($v);            //$menus_shequ = $this->deal_son_list($menus_shequ);            //去除老旧显示            foreach ($menus_model as $item=>$value){                if($value['fid']==0&&$value['group_id']==0&&$value['module']!='请选择'){                    unset($menus_model[$item]);                }            }            $this->assign('menus_O2O', $menus_O2O);            $this->assign('menus_phone', $menus_phone);            $this->assign('menus_model', $menus_model);            $this->assign('menus_yulan', $menus_yulan);            $this->assign('menus_guanli', $menus_guanli);            //$this->assign('menus_shequ', $menus_shequ);            //加入car后台角色管理修改于2017.3.16            $car_role_array = D('')->table('smart_role')->select();            $this->assign('car_role_array', $car_role_array);            $this->display();        }    }    /*     * 处理后的左边栏目数组     * */    public function deal_son_list($menus){        $list = array();        foreach ($menus as $menu) {            if (empty($menu['fid'])) {                if (isset($list[$menu['id']])) {                    $list[$menu['id']] = array_merge($list[$menu['id']], $menu);                } else {                    $list[$menu['id']] = $menu;                }            } else {                if (isset($list[$menu['fid']])) {                    $list[$menu['fid']]['lists'][] = $menu;                } else {                    $list[$menu['fid']]['lists'] = array($menu);                }            }        }        return $list;    }	    /* 删除当前角色    * @time 2016-07-21    * @author	陈琦  <849176855@qq.com>*/    public function role_del(){        if (IS_POST) {            $role_id = I('post.role_id');//前台获取的id            if(!$role_id)echo 3;            $del = M('role')->where(array('role_id'=>$role_id))->delete();//将数据库中对应前台id的该条信息删除            if($del){                echo 1;            }else{                echo 2;            }        }    }	    /* 角色权限列表    * @time 2016-07-21    * @author	陈琦  <849176855@qq.com>*/    public function menu(){        $this->assign('bg_color','#F3F3F3');        $database_village = D('role');        $condition_village['role_id'] = intval($_GET['role_id']);        $role = $database_village->field(true)->where($condition_village)->find();        if(empty($role)){            $this->frame_error_tips('数据库中没有查询到该社区的信息！');        }        $role['menus'] = explode(',', $role['menus']);        $this->assign('role',$role);        $menus = D('village_menu')->field(true)->where(array('status' => 1, 'show' => 1))->order('`sort` DESC,`id` ASC')->select();        $list = array();        foreach ($menus as $menu) {            if (empty($menu['fid'])) {                if (isset($list[$menu['id']])) {                    $list[$menu['id']] = array_merge($list[$menu['id']], $menu);                } else {                    $list[$menu['id']] = $menu;                }            } else {                if (isset($list[$menu['fid']])) {                    $list[$menu['fid']]['lists'][] = $menu;                } else {                    $list[$menu['fid']]['lists'] = array($menu);                }            }        }        $this->assign('menus', $list);        $this->display();    }    /* 编辑角色权限    * @time 2016-07-21    * @author	陈琦  <849176855@qq.com>*/    public function savemenu(){        if(IS_POST){           // $this->error('a');            $role_id = isset($_POST['role_id']) ? intval($_POST['role_id']) : 0;            //$this->error( $role_id.'---');            $menus = isset($_POST['menus']) ? $_POST['menus'] : '';            $menus = implode(',', $menus);            $database_village = M('role');            $database_village->where(array('role_id' => $role_id))->save(array('menus' => $menus));            //$this->error($database_village);            $this->success('权限设置成功！');        }else{            $this->error('非法提交,请重新提交~');        }    }		/* 导入员工	* @time 2016-08-04	* @author	小邓  <969101097@qq.com>*/	public function employExecl(){		if(IS_POST){			if($_FILES['file']['error']!=4){				$getupload_dir="/upload/excel/user/".date('Ymd').'/';				$upload_dir=".".$getupload_dir;				if(!is_dir($upload_dir)){					mkdir($upload_dir,0777,true);				}				import('ORG.Net.UploadFile');				$upload=new UploadFile();				$upload->maxSize=10 * 1024 * 1024;				$upload->allowExts=array('xls', 'xlsx');				$upload->allowTypes=array(); // 允许上传的文件类型 留空不做检查				$upload->savePath=$upload_dir;				$upload->thumb=false;				$upload->thumbType=0;				$upload->imageClassPath='';				$upload->thumbPrefix='';				$upload->saveRule='uniqid';				if($upload->upload()){					$uploadList=$upload->getUploadFileInfo();					require_once APP_PATH.'Lib/ORG/phpexcel/PHPExcel/IOFactory.php';					$path=$uploadList['0']['savepath'].$uploadList['0']['savename'];					$fileType=PHPExcel_IOFactory::identify($path); //文件名自动判断文件类型					$objReader=PHPExcel_IOFactory::createReader($fileType);					$excelObj=$objReader->load($path);					$result=$excelObj->getActiveSheet()->toArray(null, true, true, true);					if(!empty($result) && is_array($result)){						unset($result[1]);						foreach($result as $key=>$val){							if(empty($val['A']) || empty($val['B']) || empty($val['C']))								continue;							$tmpdata=array();							$tmpdata['uid']=htmlspecialchars(trim($val['A']), ENT_QUOTES);							$tmpdata['account']=htmlspecialchars(trim($val['B']), ENT_QUOTES);							$tmpdata['truename']=htmlspecialchars(trim($val['C']), ENT_QUOTES);							!empty($val['D']) && $tmpdata['pwd']=md5(trim($val['D']));							!empty($val['E']) && $tmpdata['phone']=htmlspecialchars(trim($val['E']), ENT_QUOTES);							!empty($val['F']) && $tmpdata['department_id']=intval(trim($val['F']));							!empty($val['G']) && $tmpdata['role_id']=intval(trim($val['G']));							!empty($val['H']) && $tmpdata['village_id']=intval(trim($val['H']));                        							$tmpdata['add_time']=time();							M('login_user')->add($tmpdata);						}						if(!empty($tmpdata)){							$this->dexit(array('error'=>0));						}else{							$this->dexit(array('error'=>1,'msg'=>'导入失败！'));						}					}				}else{					$this->dexit(array('error'=>1,'msg'=>$upload->getErrorMsg()));				}			}			$this->dexit(array('error' => 1,'msg'=>'文件上传失败！'));		}else{			$this->display();		}    }    /*     * 通知公告.     */    public function news_news(){        $admin=$_SESSION;//        dump($admin);exit;        if($admin['system']['account']=='admin'){//超级管理员            $news_list = D('House_village_news')->alias('n')                ->join('left join pigcms_house_village m on n.village_id=m.village_id')                ->join('left join pigcms_house_village_news_category c on n.cat_id=c.cat_id and n.village_id=c.village_id')                ->field('n.*,m.village_name,c.*')                ->where('mer_id=%d',0)                ->select();        }else{            $news_list=D('House_village_news')->alias('n')                ->join('left join pigcms_house_village m on n.village_id=m.village_id')                ->join('left join pigcms_house_village_news_category c on n.cat_id=c.cat_id and n.village_id=c.village_id')                ->field('n.*,m.village_name,c.*')                ->where('n.village_id='.$admin['system']['village_id'] . 'and mer_id=%d',0)                ->select();        }       // dump($news_list);exit;        $this->assign('news_list',$news_list);        $this->display();    }    /*     * 新增新闻     */    public function news_add(){        if(IS_POST){            //dump($_POST); exit();            /*if(empty($_POST['cat_id'])){                $this->error('当前社区暂无分类，请先添加分类！');            }else*/if (empty($_POST['title'])){                $this->error('请填写标题！');            }elseif (empty($_POST['content'])){                $this->error('请填写内容！');            }elseif (empty($_POST['village_id'])){                $this->error('请选择社区！');            }/*elseif (empty($_POST['is_hot'])){                $this->error('请选择是否选为热门！');            }*/elseif (empty($_POST['status'])){                $this->error('请选择状态！');            }            $data=array(                'title'=>$_POST['title'],                'content'=>$_POST['content'],                'village_id'=>$_POST['village_id'],                'is_hot'=>$_POST['is_hot']?:0,                'status'=>$_POST['status'],                'cat_id'=>$_POST['cat_id']?:0,                'add_time'=>time()            );            $add=M('house_village_news')->data($data)->add();            if($add){                redirect(U('news_news'));            }        }else{            //dump($_SESSION);exit;            $admin=$_SESSION;            if($_SESSION['system']['account']=='admin'){                $village=M('house_village')->field('village_id,village_name')->where(array('status'=>1))->select();                $cate=M('house_village_news_category')->select();            }else{                $village=M('house_village')->where(array('village_id'=>$_SESSION['system']['village_id']))->field('village_id,village_name')->find();                $cate=M('house_village_news_category')->where(array('village_id'=>$_SESSION['system']['village_id']))->select();            }            $this->assign('cate',$cate);            $this->assign('village',$village);            $this->assign('admin',$admin);            $this->display();        }    }    /*     * 当选择特定社区时，寻找当下的分类     */    public function get_cate(){        $village_id=$_POST['village_id'];        $res=M('house_village_news_category')->where(array('village_id'=>$village_id))->select();        if($res){            echo json_encode(array('error'=>0,'msg'=>$res));        }else{            echo json_encode(array('error'=>1,'msg'=>''));        }    }    /*     * 信息分类     */    public function cate_news(){        if($_SESSION['system']['account']=='admin'){            $cate=M('house_village_news_category')->alias('c')                ->join('left join pigcms_house_village v on c.village_id=v.village_id')                ->field('c.*,v.village_name')                ->select();        }else{            $cate=M('house_village_news_category')->alias('c')                ->join('left join pigcms_house_village v on c.village_id=v.village_id')                ->field('c.*,v.village_name')                ->where('c.village_id='.$_SESSION['system']['village_id'])                ->select();        }        $this->assign('cate',$cate);        $this->display();    }    /*     * 增加新闻分类     */    public function cate_add(){        if(IS_POST){            //dump($_POST);exit;            if(empty($_POST['village_id'])){                $this->error('请选择社区');            }elseif (empty($_POST['cat_name'])){                $this->error('请填写分类名称');            }elseif (empty($_POST['cat_sort'])){                $this->error('请填写分类排序');            }elseif ($_POST['cat_status']===null){                $this->error('请填写分类状态');            }            $data=array(                'village_id'=>$_POST['village_id'],                'cat_name'=>$_POST['cat_name'],                'cat_sort'=>$_POST['cat_sort'],                'cat_status'=>$_POST['cat_status']            );            $add=M('house_village_news_category')->data($data)->add();            if($add){                redirect(U('cate_news'));            }else{                $this->error('添加失败！');            }        }else{            $admin=$_SESSION['system'];            if($admin['account']=='admin'){                $village=M('house_village')->select();                $cate=M('house_village_news_category')->select();            }else{                $village=M('house_village')->where(array('village_id'=>$admin['village_id']))->find();                $cate=M('house_village_news_category')->where(array('village_id'=>$admin['village_id']))->find();            }            $this->assign('village',$village);            $this->assign('cate',$cate);            $this->assign('admin',$admin);            $this->display();        }    }    /*     * 分类编辑     */    public function cat_edit(){        if(IS_POST){            if (empty($_POST['cat_name'])){                $this->error('请填写分类名称');            }elseif (empty($_POST['cat_sort'])){                $this->error('请填写分类排序');            }elseif ($_POST['cat_status']===null){                $this->error('请填写分类状态');            }            $data=array(                'cat_name'=>$_POST['cat_name'],                'cat_sort'=>$_POST['cat_sort'],                'cat_status'=>$_POST['cat_status']            );            $update=M('house_village_news_category')->where(array('cat_id'=>$_POST['cat_id']))->data($data)->save();            if($update!==false){                redirect(U('cate_news'));            }else{                $this->error('编辑失败！');            }        }else{            $cat_id=$_GET['cat_id'];            $info=M('house_village_news_category')->where(array('cat_id'=>$cat_id))->find();            $this->assign('info',$info);            $this->display();        }    }    /*     * 新闻编辑     */    public function news_edit(){        if(IS_POST){            if (empty($_POST['title'])){                $this->error('请填写标题！');            }elseif (empty($_POST['content'])){                $this->error('请填写内容！');            }            $data=array(                'title'=>$_POST['title'],                'content'=>$_POST['content'],                'village_id'=>$_POST['village_id'],                'is_hot'=>$_POST['is_hot'],                'status'=>$_POST['status'],                'cat_id'=>$_POST['cat_id'],                'add_time'=>time()            );            $update=M('house_village_news')->where(array('news_id'=>$_POST['news_id']))->data($data)->save();            if($update!==false){                redirect(U('news_news'));            }else{                echo mysql_error();            }        }else{            $news_id=$_GET['news_id'];            $village_id=M('house_village_news')->where(array('news_id'=>$news_id))->getField('village_id');            $info=M('house_village_news')->alias('n')                ->join('left join pigcms_house_village v on n.village_id=v.village_id')                ->join('left join pigcms_house_village_news_category c on n.cat_id=c.cat_id')                ->where('n.news_id='.$news_id)                ->field('n.*,v.village_name,c.cat_name')                ->find();            $village = M('house_village')->where(array('status'=>1))->select();            //dump($info);exit;            $cate=M('house_village_news_category')->where(array('village_id'=>$village_id))->select();            $this->assign('info',$info);            $this->assign('cate',$cate);            $this->assign('village',$village);            $this->display();        }    }    // 微信群发    public function send(){        $news_id = $_GET['news_id'];        if($news_id){            $a=M('house_village_news')->where(array('news_id'=>$news_id))->getField('content');            $b=htmlspecialchars_decode($a);            preg_match_all('/<img.*?src="(.*?)".*?>/is',$b,$array);//剔除实体字符，获取图片url           // dump($array[1][0]);exit;            $village_id=M('house_village_news')->where(array('news_id'=>$news_id))->getField('village_id');            $condition_village['village_id'] =$village_id;            $condition_village['news_id'] = $news_id;            $condition_village['status'] = 1;            $news_info = M('house_village_news')->where($condition_village)->find();            if(empty($news_info)){                $this->error('暂无此新闻');                $this->display();            }            // 小区下所有的业主            $users = D('House_village_user_bind')->get_limit_list_open($village_id);            if(!$users){                $this->error('暂无业主',U('news_news'));            }            $access_token_array = D('Access_token_expires')->get_access_token();            if ($access_token_array['errcode']) {                exit('获取access_token发生错误：错误代码' . $access_token_array['errcode'] .',微信返回错误信息：' . $access_token_array['errmsg']);            }            $access_token = $access_token_array['access_token'];            // 准备发送请求的数据https://api.weixin.qq.com/cgi-bin/message/custom/send?access_token=ACCESS_TOKEN  ,"oRn56wDf7npfxHTthFXUoohc8u_A"            //https://api.weixin.qq.com/cgi-bin/media/uploadimg?access_token='.$access_token.'&type=image            $requestUrl = 'https://api.weixin.qq.com/cgi-bin/message/custom/send?access_token='.$access_token;            //$filepath=dirname(__FILE__).$array[1][0];//绝对路径            //$filedata=array('media'=>'@'.$filepath);            if(!$array[1][0]){                $filepath=C('config.site_url').'/upload/merchant/hdhlogo.png';            }else{                $filepath=C('config.site_url').$array[1][0];            }           // dump($filepath);exit;            $url=C('config.site_url').'/wap.php?g=Wap&c=House&a=village_news&village_id='.$village_id.'&news_id='.$news_id;            $sendData = '{"touser":"oRn56wDSr7lDE63hX8VuBzLR4mYc","msgtype": "news","news":{"articles":[{"title":"'.$news_info['title'].'","url":"'.$url.'","picurl":"'.$filepath.'"}]} }';           $res= $this->postCurl($requestUrl,$sendData);            //dump($res);exit;            if($res['rt']===true){                $this->success('发送完毕！');            }else{                $this->error('发送失败！');            }        }    }    public function http_post($url,$param,$post_file=false){        $oCurl = curl_init();        if(stripos($url,"https://")!==FALSE){            curl_setopt($oCurl, CURLOPT_SSL_VERIFYPEER, FALSE);            curl_setopt($oCurl, CURLOPT_SSL_VERIFYHOST, false);            curl_setopt($oCurl, CURLOPT_SSLVERSION, 1); //CURL_SSLVERSION_TLSv1        }        if (PHP_VERSION_ID >= 50500 && class_exists('\CURLFile')) {            $is_curlFile = true;        } else {            $is_curlFile = false;            if (defined('CURLOPT_SAFE_UPLOAD')) {                curl_setopt($oCurl, CURLOPT_SAFE_UPLOAD, false);            }        }        if (is_string($param)) {            $strPOST = $param;        }elseif($post_file) {            if($is_curlFile) {                foreach ($param as $key => $val) {                    if (substr($val, 0, 1) == '@') {                        $param[$key] = new \CURLFile(realpath(substr($val,1)));                    }                }            }            $strPOST = $param;        } else {            $aPOST = array();            foreach($param as $key=>$val){                $aPOST[] = $key."=".urlencode($val);            }            $strPOST =  join("&", $aPOST);        }        curl_setopt($oCurl, CURLOPT_URL, $url);        curl_setopt($oCurl, CURLOPT_RETURNTRANSFER, 1 );        curl_setopt($oCurl, CURLOPT_POST,true);        curl_setopt($oCurl, CURLOPT_POSTFIELDS,$strPOST);        $sContent = curl_exec($oCurl);        $aStatus = curl_getinfo($oCurl);        curl_close($oCurl);        if(intval($aStatus["http_code"])==200){            return $sContent;        }else{            return false;        }    }    function postCurl($url, $data){        $ch = curl_init();        $header = "Accept-Charset: utf-8";        curl_setopt($ch, CURLOPT_URL, $url);        curl_setopt($ch, CURLOPT_CUSTOMREQUEST, "POST");        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE);        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, FALSE);        curl_setopt($ch, CURLOPT_SSLVERSION, CURL_SSLVERSION_TLSv1);        curl_setopt($ch, CURLOPT_HTTPHEADER, $header);        curl_setopt($ch, CURLOPT_USERAGENT, 'Mozilla/5.0 (compatible; MSIE 5.01; Windows NT 5.0)');        curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);        curl_setopt($ch, CURLOPT_AUTOREFERER, 1);        curl_setopt($ch, CURLOPT_POSTFIELDS, $data);        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);        $tmpInfo = curl_exec($ch);        $errorno=curl_errno($ch);        if ($errorno) {            return array('rt'=>false,'errorno'=>$errorno);        }else{            $js=json_decode($tmpInfo,1);            if ($js['errcode']=='0'){                return array('rt'=>true,'errorno'=>0);            }else {                //exit('模板消息发送失败。错误代码'.$js['errcode'].',错误信息：'.$js['errmsg']);                return array('rt'=>false,'errorno'=>$js['errcode'],'errmsg'=>$js['errmsg']);            }        }    }    /**     * 微信群发消息     */    public $wxmsg_audit_role = 45;    //添加消息    public function add_group_msg(){        $this->display('add_group_msg');    }    public function get_msg_info($msg_id){        $msg_info = M('wxmsg','pigcms_')->where('id=%d',$msg_id)->find();        $msg_info['content'] = htmlspecialchars_decode($msg_info['content']);        if($msg_info){            $this->ajaxReturn(array('err'=>0,'data'=>$msg_info));        }else{            $this->ajaxReturn(array('err'=>1,'data'=>null,'msg'=>mysql_error()));        }    }    //添加消息执行    public function add_group_msg_act(){        $village_ids = I('post.village_id','');        $company_ids = I('post.company_id','');        $send_type = I('post.send_type','');        $send_time = strtotime(I('post.send_time',""));        $msg_type = I('post.msg_type','');        $title = I('post.title','');        $digest = I('post.digest','');        $content = $this->htmlspecialchars_decode_times($_POST['content'],7);        //图文消息上传图片//        if($msg_type=="image_text"||$msg_type=="image"){//            $upload = $this->upload_img();//            if(!$upload['error_info']){//                $cover = $upload[0]['savepath'] . $upload[0]['savename'];//            }else{//                $this->error($upload['error_info']);//            }//        }        //定时发送时间必填        if($send_type=="fixed"){            if(!$send_time){                $this->error("定时发送请选择定时发送的时间");            }            if($send_time<time()){                $this->error("定时发送时间已过期");            }        }        if(!$village_ids&&$company_ids){            $village_ids = M('company')->where('company_id=%d',$company_ids)->getField('village_id');        }        $publish_admin_id = session('admin_id');        //$status = $publish_admin_id === "1" ? 1 : 0;//如果是超级管理员则不用审核        $status = 0;//现在改为所有管理员都需要审核        $data = array(            'village_ids'=>$village_ids,//社区id            'company_ids'=>$company_ids,//公司id            'uids'=>'',            'title'=>$title,//标题            'cover'=>"",//封面            'digest'=>$digest,//摘要            'publish_admin_id'=>$publish_admin_id,//添加消息的管理员            'audit_admin_id'=>'',//审核管理员ID            'status'=>$status,//审核状态            'content'=>$content,//内容            'url'=>'',            'send_type'=>$send_type,//发送方式            'send_time'=>$send_time,            'msg_type'=>$msg_type,//消息类型 图文 or 纯文本            'update_time'=>0, //审核时间            'create_time'=>time(), //添加时间            'is_del'=>0,//是否逻辑删除        );        $model = M('wxmsg','pigcms_');        if($msg_id = I('get.msg_id')){//编辑操作            $db_status = M('wxmsg')->where('id=%d',$msg_id)->getField('status');            if($db_status == 1){//已发送不在允许发送                $data['status'] = 1;            }            $re = $model->where('id=%d',$msg_id)->save($data);            if($re!==false){                if($status==1){                    $this->send_group_msg($msg_id,$data['send_type']=="fixed",$data['send_time']);                }else{//其他人需要走流程审核                    $url = C('WEB_DOMAIN') . '/wap.php?g=Wap&c=House&a=audit_group_msg' . '&msg_id=' . $msg_id;                    $this->send_to_audit($title?:$this->get_send_type_name($send_type),$url);                }                $this->success("编辑成功",U('group_msg_list_news'));            }        }else{            $num = $model->add($data);            if($num){                //若是超级管理员直接推送消息                if($status==1){                    $this->send_group_msg($num,$data['send_type']=="fixed",$data['send_time']);                }else{//其他人需要走流程审核                    $url = C('WEB_DOMAIN') . '/wap.php?g=Wap&c=House&a=audit_group_msg' . '&msg_id=' . $num;                    $this->send_to_audit($title?:$this->get_send_type_name($send_type),$url);                }                $this->success("添加成功",U('group_msg_list_news'));            }else{                $this->error(mysql_error());            }        }    }    //列表    public function group_msg_list_news(){        $model = M('wxmsg','pigcms_');        $field = array(            'msg.id',            'msg.title',            'msg.status',            'msg.msg_type',            'msg.send_type',            'msg.send_time',            'c.company_id',            'msg.village_ids',            'c.village_id',            'c.company_name',            'hv.village_name',        );        $list = $model->alias('msg')            ->field($field)            ->join('left join __COMPANY__ c on msg.company_ids=c.company_id')            ->join('left join __HOUSE_VILLAGE__ hv on hv.village_id = msg.village_ids')            ->select();        if($list){            foreach($list as &$row){                $row['msg_type_name'] = $this->get_msg_type_name($row['msg_type']);                $row['send_type_name'] = $this->get_send_type_name($row['send_type']);                $row['status_name'] = $this->get_status_name($row['status']);            }        }//        echo mysql_error();//        dump($list);        $this->assign('list',$list);        $this->display('group_msg_list');    }    public function del_group_msg($msg_id){        $model = M('wxmsg','pigcms_');        $re = $model->where('id=%d',$msg_id)->delete();        if($re!==false){            $this->success("删除成功");        }else{            $this->error("发送错误，删除失败");        }    }    public function ajax_del_tpl($tpl_id){        $model = M('wxmsg_tpl','pigcms_');        $re = $model->where('id=%d',$tpl_id)->delete();        if($re!==false){            $this->success("删除成功",'',1);        }else{            $this->error("发送错误，删除失败");        }    }    //管理员审核详情页    public function audit_group_msg($msg_id){        $model = M('wxmsg','pigcms_');        $field = array(            'msg.id',            'msg.title',            'msg.status',            'msg.msg_type',            'msg.send_type',            'msg.send_time',            'msg.content',            'msg.digest',            'msg.cover',            'msg.publish_admin_id',            'msg.audit_admin_id',            'msg.status',            'msg.remark',            'msg.update_time',            'c.company_id',            'msg.village_ids',            'c.village_id',            'c.company_name',            'hv.village_name',        );        $info = $model->alias('msg')            ->field($field)            ->join('left join __COMPANY__ c on msg.company_ids=c.company_id')            ->join('left join __HOUSE_VILLAGE__ hv on hv.village_id = msg.village_ids')            ->where('id=%d',$msg_id)            ->find();        if($info){                $info['msg_type_name'] = $this->get_msg_type_name($info['msg_type']);                $info['send_type_name'] = $this->get_send_type_name($info['send_type']);                $info['status_name'] = $this->get_status_name($info['status']);                $info['content'] = $this->htmlspecialchars_decode_times($info['content'],1);                $info['publish_admin'] = M('admin')->where('id=%d',$info['publish_admin_id'])->getField('realname');                $info['audit_admin'] = M('admin')->where('id=%d',$info['audit_admin_id'])->getField('realname');                $info['count_users'] = $this->count_users($info['village_ids'],$info['company_ids']);        }        $can_audit = true;//是否能进行审核        $admin_id = session('admin_id');        if($admin_id  !=1){            $role_id = M('admin')->where('id=%d',$admin_id)->getField('role_id');            if($role_id!=$this->wxmsg_audit_role) {                $can_audit = false;            }        }        //显示状态        switch ($info['status']){            case 0 :                break;            case 1 :                $can_audit = false;                $status_class = 'btn-success';                $status_name = "审核已通过";                break;            case 2 :                $can_audit = false;                $status_name = "未通过审核";                $status_class = 'btn-warning';                $status_remark = $info['remark'];        }        $this->assign('status_class',$status_class);        $this->assign('status_name',$status_name);        $this->assign('status_remark',$status_remark);        $this->assign('can_audit',$can_audit);        $this->assign('info',$info);        //日志信息        $visitor_model = new Visitor_logModel();        $visitor_data = $visitor_model->get_vistor_users('/wap.php/Wap/House/view_msg',array('msg_id'=>$msg_id));        $this->assign('visitor_data',$visitor_data);        $this->display();    }    /**     * 审核执行操作     * @update-time: 2017-07-24 10:58:45     * @author: 王亚雄     */    public function audit_group_msg_act($msg_id,$status,$remark=""){        $model = M('wxmsg','pigcms_');        //验证        //修改前状态        $info = $model->where('id=%d',$msg_id)->find();        $cur_status = $info['status'];        if($cur_status!=0){            $this->ajaxReturn(array('err'=>1,'msg'=>'请不要重复操作'));        }        //只要超级管理员 与 审核角色的管理员能审核        if((session('admin_id')!=1)&&(session('system.role_id')!=$this->wxmsg_audit_role)){            $this->ajaxReturn(array('err'=>2,'msg'=>'你无权审核'));        }        //进行审核        $data = array('status'=>$status);        $data['audit_admin_id'] = session('admin_id');        $data['update_time'] = time();        //退回的时候需要记录退回意见        if($status==2) $data['remark'] = $remark;        $re = $model->where('id=%d',$msg_id)->save($data);        if($re){            if($status==2){//退回修改意见                $this->send_to_publish(                    $info['publish_admin_id'],                    $info['title'],                    C('WEB_DOMAIN') . '/wap.php?g=Wap&c=House&a=group_msg_detail&msg_id='.$info['id']                );            }else{//执行发送                $this->send_group_msg($msg_id,$info['send_type']=="fixed",$info['send_time']);            }            $this->ajaxReturn(array('err'=>0,'msg'=>"操作完成"));        }else{            $this->ajaxReturn(array('err'=>3,'msg'=>mysql_error()));        }    }    /**     * 计算用户数量 根据社区id、公司id     * @param $village_id     * @param $company_id     * @return mixed     */    public  function count_users($village_id,$company_id){//        $village_id = 4;//        $company_id = 0;        $map = array();        $village_id && $map['ub.village_id'] = array('eq',$village_id);        $company_id && $map['ub.company_id'] = array('eq',$company_id);        $count = M('user')->alias('u')            ->field('u.openid')            ->join('left join __HOUSE_VILLAGE_USER_BIND__ ub on u.uid = ub.uid')            ->where($map)            ->count();        return $count;    }    /**     * @param int $msg_id 消息ID     * @param bool $fixed 是否为定时发送     * @param int $send_time 定时发送的时间戳     */    public function send_group_msg($msg_id,$fixed=false,$send_time=0){        if($fixed){            $re = $this->add_fixedtime_task($msg_id,$send_time);        }else{            $wx = new WechatModel();            //更新发送时间            M('wxmsg')->where('id=%d',$msg_id)->setField('send_time',time());            return  $wx->send_group_msg($msg_id);        }    }    //ajax获取信息    //获取社区    public $expire = 86400; //缓存一天    public function ajax_get_village(){        $is_cache = true;//调试查看是否使用了缓存        //先尝试从缓存中获取        if(!$data = S('village_data')){            $is_cache = false;            $field = array(                'village_id',                'village_name',                'village_address',                'property_name',                'property_phone',                'property_address'            );            $data = M('house_village')                ->field($field)                ->cache('village_data',$this->expire)                ->select();        }        if($data){            $this->ajaxReturn(array('err'=>0,'data'=>$data,'is_cache'=>$is_cache));        }else{            $this->ajaxReturn(array('err'=>1,'data'=>null,'msg'=>mysql_error()));        }    }    //获取公司    public function ajax_get_company($village_id=0){        $is_cache = true;//调试查看是否使用了缓存        $cachename = 'company_data&vid=' . $village_id;        $map = array();        $village_id && $map['village_id'] = array('eq',$village_id);        if(!$data = S($cachename)){            $is_cache = false;            $data = M('company')                ->where($map)                ->cache($cachename,$this->expire)                ->select();        }        if($data){            $this->ajaxReturn(array('err'=>0,'data'=>$data,'is_cache'=>$is_cache));        }else{            $this->ajaxReturn(array('err'=>1,'data'=>null,'msg'=>mysql_error()));        }    }    //获取用户    public function ajax_get_users($village_id=0,$company_id=0){        $is_cache = true;//调试查看是否使用了缓存        $cachename = 'user_data&vid='.$village_id.'&cid=' . $company_id;        if(!$data = S($cachename)){            //没有使用缓存时            $is_cache = false;            $field = array(                'u.uid',                'u.openid',                'u.nickname',                'u.avatar',                'ub.company_id',                'ub.company',            );            //条件            $map = array();            //vid>0，cid 0 则计算出该社区所有公司            if($village_id&&(!$company_id)){                $company_id = M('company')->field('company_id')->where('village_id=%d',$village_id)->select();                $company_id = array_column($company_id,'company_id');            }            $company_id && $map['ub.company_id'] = array('in',$company_id);            $data = M('house_village_user_bind')->alias('ub')                ->field($field)                ->join('left join __USER__ u on u.uid=ub.uid')                ->where($map)                ->cache($cachename,$this->expire)                ->select();        }        if($data){            $this->ajaxReturn(array('err'=>0,'data'=>$data,'is_cache'=>$is_cache));        }else{            $this->ajaxReturn(array('err'=>1,'data'=>null,'msg'=>mysql_error()));        }    }    /**     * 保存模板     * @update-time: 2017-07-20 16:28:57     * @author: 王亚雄     */    public function save_tpl(){        $tpl_name = I('post.tpl_name');        $title = I('post.title');        $digest = I('post.digest');        $publish_admin_id = session('admin_id');        $content = $this->htmlspecialchars_decode_times($_POST['content'],3);        $msg_type = I('post.msg_type');        $send_type=I('post.send_type');        $data = array(            'tpl_name'=>$tpl_name,            'title'=>$title,            'digest'=>$digest,            'publish_admin_id'=>$publish_admin_id,            'content'=>$content,            'msg_type'=>$msg_type,            'send_type'=>$send_type,            'create_time'=>time(),            'is_del'=>0,        );       $num = M('wxmsg_tpl')->add($data);       if($num){           $this->ajaxReturn(array('err'=>0,'data'=>$data));       }else{           $this->ajaxReturn(array('err'=>1,'data'=>$data,'msg'=>mysql_error()));       }    }    /**     * 获取模板     * @update-time: 2017-07-21 09:36:27     * @author: 王亚雄     */    public function ajax_get_tpl($tpl_id=0){        if($tpl_id){            $data = M('wxmsg_tpl')->where('id=%d',$tpl_id)->find();            $data['content'] = htmlspecialchars_decode(htmlspecialchars_decode($data['content']));        }else{            $data =M('wxmsg_tpl')->select();        }        if($data){            $this->ajaxReturn(array('err'=>0,'data'=>$data));        }else{            $this->ajaxReturn(array('err'=>1,'data'=>null,'msg'=>"获取失败"));        }    }    //上传图片    public function upload_img(){        $path='images/' . date("Y-m-d"). "/";        $format='empty';        $maxSize='52428800';        ini_set('max_execution_time', '0');        // 去除两边的/        $path=trim($path,'/');        // 添加Upload根目录        $path=strtolower($this->img_dir .  $path);        if(!is_dir($path)){            $b = mkdir($path,0777,true);            if(!$b){                $this->err("创建文件夹失败",$path);            }        }        // 上传文件类型控制        $ext_arr= array(            'image' => array('gif', 'jpg', 'jpeg', 'png', 'bmp'),            'photo' => array('jpg', 'jpeg', 'png'),            'flash' => array('swf', 'flv'),            'media' => array('swf', 'flv', 'mp3', 'wav', 'wma', 'wmv', 'mid', 'avi', 'mpg', 'asf', 'rm', 'rmvb'),            'file' => array('doc', 'docx', 'xls', 'xlsx', 'ppt', 'htm', 'html', 'txt', 'zip', 'rar', 'gz', 'bz2','pdf')        );        if(!empty($_FILES)){            // 上传文件配置            $config=array(                'maxSize'   =>  $maxSize,               // 上传文件最大为50M                'rootPath'  =>  './',                   // 文件上传保存的根路径                'savePath'  =>  './'.$path.'/',         // 文件上传的保存路径（相对于根路径）                'saveName'  =>  array('uniqid',''),     // 上传文件的保存规则，支持数组和字符串方式定义                'autoSub'   =>  true,                   // 自动使用子目录保存上传文件 默认为true                'exts'      =>    isset($ext_arr[$format])?$ext_arr[$format]:'',            );            // 实例化上传            import('ORG.Net.UploadFile');            $upload = new UploadFile($config);// 实例化上传类            // 调用上传方法            $res=$upload->upload();            // p($info);            if(!$res){                // 返回错误信息                $error=$upload->getErrorMsg();                $data['error_info']=$error;                return $data;            }else{                // 返回成功信息                $info =  $upload->getUploadFileInfo();                return $info;            }        }    }    //获取消息类型    protected function get_msg_type_name($type){        $names = array(            'image'=>'图片',            'text'=>'纯文本',            'image_text'=>'图文'        );        return $names[$type]?:"没有找到";    }    //获取发送类型    protected function get_send_type_name($type){        $names = array(            'moment'=>'立即发送',            'fixed'=>'定时发送',        );        return $names[$type]?:"没有找到";    }    //获取状态描述    protected function get_status_name($type){        $names = array(            0 => '未审核',            1 => '审核通过',            2 => '审核未通过'        );        return $names[$type]?:"没有找到";    }    //向审核管理员推送消息    public function send_to_audit($title,$url=""){        //微信类库        $wechat = new WechatModel();        //获取物业相关人员微信openid        //相关角色        $role_names = array(            '45'=>"微信推送消息审核管理员",            '16'=>'点点滴滴',        );        $role_ids = array_keys($role_names);        $map = array();        $map['role_id'] = array('in',$role_ids);        $admins = M('admin')->where($map)->select();        $openids = array();        foreach($admins as $admin){            if($admin['openid']){                $openids[] = $admin['openid'];            }        }        $openids = array_unique($openids);        //测试        //$openids = array('ohgcf0jY6c8Rnj8hgkJw8mcVpOR8');        //测试结束        //流程审批提醒模板ID        $tpl_id = $wechat::TPLID_LCSPTX;        $data = array(            'first'=>array(                'value'=>"微信群发通知审核提醒",                'color'=>"#029700",            ),            'keyword1'=>array(                'value'=>"微信群发通知审核提醒",                'color'=>"#000000",            ),            'keyword2'=>array(                'value'=>session('admin_name'),                'color'=>"#000000",            ),            'keyword3'=>array(                'value'=>$title,                'color'=>"#000000",            ),            'keyword4'=>array(                'value'=>date('Y-m-d H:i:s',time()),                'color'=>"#000000",            ),        );        $res = $wechat->send_tpl_messages($openids, $tpl_id, $url, $data);        if($res[0]['errcode']!==0){            //TODO::与用户方逻辑无关，暂不提醒，应记录在日志系统当中            // $this->error("推送消息失败");        }    }    //向发布者推送消息    public  function send_to_publish($admin_id,$title,$url=""){        //微信类库        $wechat = new WechatModel();        //获取微信openid        $openid =  M('admin','pigcms_')->where('id=%d',$admin_id)->getField('openid');        //流程审批提醒模板ID        $tpl_id = $wechat::TPLID_LCSPTX;        $data = array(            'first'=>array(                'value'=>"微信群发通知审核提醒",                'color'=>"#029700",            ),            'keyword1'=>array(                'value'=>"退回修改意见提醒",                'color'=>"#000000",            ),            'keyword2'=>array(                'value'=>session('admin_name'),//人                'color'=>"#000000",            ),            'keyword3'=>array(                'value'=>$title,                'color'=>"#000000",            ),            'keyword4'=>array(                'value'=>date('Y-m-d H:i:s',time()),                'color'=>"#000000",            ),        );        if($openid){            $res = $wechat->send_tpl_message($openid, $tpl_id, $url, $data);            if($res[0]['errcode']!==0){                //TODO::与用户方逻辑无关，暂不提醒，应记录在日志系统当中                // $this->error("推送消息失败");            }        }else{            return false;        }        return $openid;    }    //是否为微信端    protected function is_weixin(){        return strpos($_SERVER['HTTP_USER_AGENT'], 'MicroMessenger') !== false ?true:false;    }    //多次转义实体    protected function htmlspecialchars_decode_times($content,$times){        for ($i=0;$i<$times;$i++){            $content = htmlspecialchars_decode($content);        }        return $content;    }    /**     * 添加到定时任务     * @param $msg_id     * @param $send_time     */    protected function add_fixedtime_task($msg_id,$send_time){        $connect = new Memcached;  //声明一个新的memcached链接        $connect->setOption(Memcached::OPT_COMPRESSION, false); //关闭压缩功能        $connect->setOption(Memcached::OPT_BINARY_PROTOCOL, true); //使用binary二进制协议        $connect->addServer('f120e580f9b74ec5.m.cnhzaliqshpub001.ocs.aliyuncs.com', 11211); //添加OCS实例地址及端口号        $group_msg = unserialize($connect->get('group_msg'))?:array();        $add_msg =array();        $add_msg['msg_id'] = $msg_id;        $add_msg['send_time'] = $send_time;        $group_msg[] = $add_msg;        return $connect->set('group_msg',serialize($group_msg));    }    /**     * 微信推送日志     */    public function wxmsg_log_list_news(){        $model = M('wxmsg_log','pigcms_');        $count = $model->count();        import('@.ORG.bootstrap_page');        $page = new Page($count, 20);        $list = $model            ->limit($page->firstRow,$page->listRows)            ->order('id desc')            ->select();        $wx = new WechatModel();        if($list){            foreach($list as &$row){                $row['tpl_title'] = $wx->get_private_template($row['tpl_id'])['title'];            }        }        $this->assign('list',$list);        $this->assign('page_bar',$page->show());        $this->display('wxmsg_log_list');    }    public function get_msg_log_info($log_id){        $user = array(            'uid'=>99999//游客ID        );        $_SESSION['user'] = $user;        $model = M('wxmsg_log','pigcms_');        $wx = new WechatModel();        $info = $model->where('id=%d',$log_id)->find();        $tpl_options = $wx->get_private_template($info['tpl_id']);        $tpl_data = unserialize($info['tpl_info']);        $html = $wx->create_msg_html($tpl_options['content'],$tpl_data['data']);        $this->assign('html',$html);        $this->assign('tpl_data',$tpl_data);        $this->assign('tpl_options',$tpl_options);        $this->display();    }	public function wx_test(){//        $model = new Visitor_logModel();//        $model->add_log(array('msg_id'=>48));//        echo mysql_error();        $connect = new Memcached;  //声明一个新的memcached链接        $connect->setOption(Memcached::OPT_COMPRESSION, false); //关闭压缩功能        $connect->setOption(Memcached::OPT_BINARY_PROTOCOL, true); //使用binary二进制协议        $connect->addServer('f120e580f9b74ec5.m.cnhzaliqshpub001.ocs.aliyuncs.com', 11211); //添加OCS实例地址及端口号        $group_msg = unserialize($connect->get('group_msg'))?:array();        dump($group_msg);    }    /**     * 水电煤上报列表     */    public function water_news(){//        $model = M('re_setmeter','pigcms_');//        $village_id =session('system.village_id')?:0;//        $company_id =session('system.company_id')?:0;//        //条件//        $map = array();//        $village_id && $map['ub.village_id'] = array('eq',$village_id);//        $company_id && $map['ub.village_id'] = array('eq',$company_id);//        $field = array(//            'meter.*',//            'a.realname',//            'ub.name',//            'ub.company',//            'ub.address',//            'ub.phone',//        );////        $count = $model->alias('meter')//            ->where($map)//            ->join('left join __ADMIN__ a on a.id=meter.admin_id')//            ->join('left join __HOUSE_VILLAGE_USER_BIND__ ub on ub.usernum = meter.usernum')//            ->count();//        //加载分页类//        import('@.ORG.merchant_page');//        $page =  new Page($count,10,'page');        $model = M('re_setmeter');        $field = array(            'log.tenantname',            'm.meter_code',            'm.meter_floor',            'realname',            'log.id',            'log.last_total_consume',            'log.total_consume',            'log.create_time',            'pc.desc'=>'price_type_name',            'mc.desc'=>'meter_type_name',            'mc.unit',            'pc.unit_price'        );        $list = $model->alias('Log.class')            ->field($field)            ->join('left join __HOUSE_VILLAGE_METERS__ m on m.meter_hash = log.meter_hash')            ->join('left join __ADMIN__ a on a.id=log.admin_id')            ->join('left join __RE_SETMETER_CONFIG__ mc on mc.id=m.meter_type_id ')            ->join('left join __RE_SETMETER_CONFIG__ pc on pc.id=m.price_type_id ')            ->order('log.create_time desc')            ->select();        foreach($list as &$row){            $row['unit'] = explode('/',$row['unit'])[1];            $row['price'] = $row['unit_price'] * ($row['total_consume']-$row['last_total_consume']);        }        if($mysql_error = mysql_error()){            echo mysql_error();        }        $this->assign('list',$list);        $this->display();    }    public function test11(){        //$this->send_to_audit(123);        $value['0']='单位名称：武汉汇得行物业服务有限公司（02广发银行大厦）';        preg_match_all('/(\d{2}.*)/', $value['0'], $match);        dump($value['0']);        dump($match);    }    /**     * @author zhukeqin     * 使用excel导入人员信息     */    public function add_personnel_excel(){        die;        if(IS_POST){            //PHPExcel_Shared_Date::ExcelToPHP($value['4']);            $education=array( '1'=>'小学', '2'=>'初中','3'=>'高中','4'=>'中专','5'=>'大专','6'=>'本科','7'=>'研究生','8'=>'博士');            $politics=array( '1'=>'中共党员', '2'=>'中共预备党员','3'=>'共青团员','4'=>'民革党员','5'=>'民盟盟员','6'=>'民建会员','7'=>'民进会员','8'=>'农工党党员','9'=>'致公党党员','10'=>'九三学社社员','11'=>'台盟盟员','12'=>'无党派人士','13'=>'普通居民');            $marital=array('1'=>'未婚','2'=>'已婚','3'=>'离异');            $arr1 = import_excel_sheet_one($_FILES['test'],'AQ','','0');            if(empty($arr1)) $this->error('文件不能为空');            $err=array();            $department_id='';            $department_name='';            $personnelModel=new PersonnelModel();            $personnel_annualModel=new Personnel_annualModel();            $personnel_contractModel=new Personnel_contractModel();            $personnel_positionModle=new Personnel_positionModel();            foreach ($arr1 as $key=>$value){                if(strstr($value['0'],'单位名称')){                    unset($department_id);                    preg_match_all('/\(?（?\d{2}(.*?)\)?）?/', $value['0'], $match);                    $department_name=$match['1']['0'];                    $department_info=M('department')->where(array('deptname'=>array('LIKE','%'.$department_name.'%')))->find();                    if(empty($department_info)&&$department_name!='职能中心'){                        $err[]=$department_name.'该部门不存在，请检查';                        continue;                    }else{                        $department_id=$department_info['id'];                        if(empty($department_id)) $department_id=1;                    }                }elseif(is_numeric($value['0'])){                    if(empty($department_id)) continue;                    $personnel=array();                    $personnel_annual=array();                    $personnel_contract=array();                    $personnel_position=array();                    if($value['4']=='公司'){                        if($value['5']=='领导'){                           if($value['7']=='执行总裁'||$value['7']=='副总裁'){                               $personnel['department_id']=69;                           }else{                               $cache=str_replace('总经理','',$value['7']);                               $cache_de=M('department')->where(array('deptname'=>array('LIKE','%'.$cache.'%')))->find();                               $cache_department=M('department')->where(array('deptname'=>'公司领导','pid'=>$cache_de['id']))->find();                               $personnel['department_id']=$cache_department['id'];                           }                        }else{                            $cache_department=M('department')->where(array('deptname'=>$value['5']))->find();                            $personnel['department_id']=$cache_department['id'];                        }                    }else{                        //查找是否有子部门，没有就归属根部门                        $department_child_list=M('department')->where(array('pid'=>$department_id))->select();                        if(empty($department_child_list)){                            $personnel['department_id']=$department_id;                        }else{                            $cache_department=M('department')->where(array('deptname'=>array('LIKE','%'.$value['5'].'%'),'pid'=>$department_id))->find();                            if(empty($cache_department)){                                $personnel['department_id']=$department_id;                            }else{                                $personnel['department_id']=$cache_department['id'];                            }                        }                    }                    $personnel['job_number']=$value['1'];                    $personnel['name']=$value['2'];                    $personnel['sex']=$value['3']=='男'?1:2;                    $personnel['position']=$value['6'];                    $personnel['entrytime']=is_numeric($value['12'])?PHPExcel_Shared_Date::ExcelToPHP($value['12']):$value['12'];                    $personnel['positivetime']=is_numeric($value['14'])?PHPExcel_Shared_Date::ExcelToPHP($value['14']):$value['14'];                    $personnel['social_addtime']=is_numeric($value['16'])?PHPExcel_Shared_Date::ExcelToPHP($value['16']):$value['16'];                    $personnel['social_condition']=$value['17'];                    $personnel['accumulation_addtime']=is_numeric($value['18'])?PHPExcel_Shared_Date::ExcelToPHP($value['18']):$value['18'];                    $personnel['accumulation_money']=$value['19'];                    $personnel['id_number']=$value['23'];                    $personnel['height']=$value['26'];                    $personnel['education']=array_search($value['27'],$education)?:'0';                    if($personnel['education']=='0') $personnel['education_remark']=$value['27'];                    $personnel['graduat_school']=$value['28'];                    $personnel['learning_type']=$value['29'];                    $personnel['major']=$value['30'];                    $personnel['certification']=$value['31'];                    $personnel['native_place']=$value['32'];                    $personnel['politics']=array_search($value['33'],$politics)?:'13';                    $personnel['marital']=array_search($value['34'],$marital)?:'1';                    $personnel['phone']=$value['35'];                    $personnel['family_address']=$value['36'];                    $personnel['family_phone']=$value['37'];                    $personnel['main_experience']=$value['38'];                    $personnel['enlist']=$value['39'];                    $personnel['induction_channel']=$value['40'];                    $personnel['job_remark']=$value['41'];                    $re=$personnelModel->change_personnel_one($personnel,'');                    if($re['err']==1) $err[]=($key+1).'行'.$re['data'];                    if($re['err']==0){                        $personnel_contract['time_start']=is_numeric($value['20'])?PHPExcel_Shared_Date::ExcelToPHP($value['20']):$value['20'];                        $personnel_contract['time_end']=is_numeric($value['21'])?PHPExcel_Shared_Date::ExcelToPHP($value['21']):$value['21'];                        $personnel_contract['personnel_id']=$re['data'];                        $re_contract=$personnel_contractModel->change_contract_one($personnel_contract,'');                        if($re_contract['err']==1) $err[]=($key+1).'行'.$re_contract['data'];                        $re_position=$personnel_positionModle->change_position_one(array('personnel_id'=>$re['data'],'position_now'=>$value['7'],'time_change'=>time()),'');                        if($re_position['err']==1) $err[]=($key+1).'行'.$re_position['data'];                    }                }            }            if(count($err)==0){                $this->success('导入成功');            }else{                echo "<center>";                echo "以下行数有对应问题，请处理之后再单独导入</br>";                foreach ($err as $value){                    echo $value."</br>";                }                echo "</center>";            }        }else{            $this->display();        }    }}