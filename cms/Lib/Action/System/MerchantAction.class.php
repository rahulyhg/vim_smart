<?php/* * 商户管理 * * @  Writers    Jaty * @  BuildTime  2014/11/07 14:45 *  */class MerchantAction extends BaseAction{    public function index(){		if(!empty($_GET['keyword'])){			if($_GET['searchtype'] == 'mer_id'){				$condition_merchant['mer_id'] = $_GET['keyword'];			}else if($_GET['searchtype'] == 'account'){				$condition_merchant['account'] = array('like','%'.$_GET['keyword'].'%');			}else if($_GET['searchtype'] == 'name'){				$condition_merchant['name'] = array('like','%'.$_GET['keyword'].'%');			}else if($_GET['searchtype'] == 'phone'){				$condition_merchant['phone'] = array('like','%'.$_GET['keyword'].'%');			}		}		$searchstatus = intval($_GET['searchstatus']);		switch($searchstatus){			case 0:				$condition_merchant['status'] = 1;				break;			case 1:				$condition_merchant['status'] = 2;				break;			case 2:				$condition_merchant['status'] = 0;				break;		}						if ($this->system_session['area_id']) {			$area_index = $this->system_session['level'] == 1 ? 'area_id' : 'city_id';			$condition_merchant[$area_index] = $this->system_session['area_id'];		}		$database_merchant = D('Merchant');				$count_merchant = $database_merchant->where($condition_merchant)->count();		import('@.ORG.system_page');		$p = new Page($count_merchant,15);		$merchant_list = $database_merchant->field(true)->where($condition_merchant)->order('`mer_id` DESC')->limit($p->firstRow.','.$p->listRows)->select();		$this->assign('merchant_list',$merchant_list);		$pagebar = $p->show();		$this->assign('pagebar',$pagebar);				$this->display();    }    public function _before_index_news(){        if(session('system.account')==SUPER_ADMIN){            $this->assign('admin',1);            $villageArray = M('house_village')->where(array('status'=>1))->select();            $this->assign('villageArray',$villageArray);            if(I('get.village_id')){                $presentVillage = M('house_village')->find(I('get.village_id'))['village_name'];            }else{                $presentVillage = '全部显示';            }        }else{            $this->assign('admin',0);            $presentVillage = M('house_village')->find(session('system.village_id'))['village_name'];        }        $this->assign('presentVillage',$presentVillage);    }    public function index_news(){        if(!empty($_GET['keyword'])){            if($_GET['searchtype'] == 'mer_id'){                $condition_merchant['mer_id'] = $_GET['keyword'];            }else if($_GET['searchtype'] == 'account'){                $condition_merchant['account'] = array('like','%'.$_GET['keyword'].'%');            }else if($_GET['searchtype'] == 'name'){                $condition_merchant['name'] = array('like','%'.$_GET['keyword'].'%');            }else if($_GET['searchtype'] == 'phone'){                $condition_merchant['phone'] = array('like','%'.$_GET['keyword'].'%');            }        }        $searchstatus = intval($_GET['searchstatus']);        switch($searchstatus){            case 0:                $condition_merchant['status'] = 1;                break;            case 1:                $condition_merchant['status'] = 2;                break;            case 2:                $condition_merchant['status'] = 0;                break;        }        if ($this->system_session['area_id']) {            $area_index = $this->system_session['level'] == 1 ? 'area_id' : 'city_id';            $condition_merchant[$area_index] = $this->system_session['area_id'];        }        $database_merchant = D('Merchant');        $condition_merchant = filter_village($condition_merchant,1,'');        $count_merchant = $database_merchant->where($condition_merchant)->count();        import('@.ORG.system_page');        $p = new Page($count_merchant,999);        $merchant_list = $database_merchant->field(true)->where($condition_merchant)->order('`mer_id` DESC')->limit($p->firstRow.','.$p->listRows)->select();        foreach ($merchant_list as &$value){            $village_info=M('house_village')->where('village_id='.$value['village_id'])->find();            $value['village_name']=$village_info['village_name'];            if($village_info['village_type']==1){                $project_info=M('house_village_project')->where('pigcms_id='.$value['project_id'])->find();                $value['village_name'] .='('.$project_info['desc'].')';            }        }        $this->assign('merchant_list',$merchant_list);        $pagebar = $p->show();        $this->assign('pagebar',$pagebar);        $this->display();    }	public function wait_merchant(){		$condition_merchant['status'] = 2;		//搜索		if(!empty($_GET['keyword'])){			if($_GET['searchtype'] == 'mer_id'){				$condition_merchant['mer_id'] = $_GET['keyword'];			}else if($_GET['searchtype'] == 'account'){				$condition_merchant['account'] = array('like','%'.$_GET['keyword'].'%');			}else if($_GET['searchtype'] == 'name'){				$condition_merchant['name'] = array('like','%'.$_GET['keyword'].'%');			}else if($_GET['searchtype'] == 'phone'){				$condition_merchant['phone'] = array('like','%'.$_GET['keyword'].'%');			}		}		if ($this->system_session['area_id']) {			$area_index = $this->system_session['level'] == 1 ? 'area_id' : 'city_id';			$condition_merchant[$area_index] = $this->system_session['area_id'];		}		$database_merchant = D('Merchant');				$count_merchant = $database_merchant->where($condition_merchant)->count();		import('@.ORG.system_page');		$p = new Page($count_merchant,15);		$merchant_list = $database_merchant->field(true)->where($condition_merchant)->order('`mer_id` DESC')->limit($p->firstRow.','.$p->listRows)->select();		$this->assign('merchant_list',$merchant_list);		$pagebar = $p->show();		$this->assign('pagebar',$pagebar);				$this->display();    }    public function wait_merchant_news(){        $condition_merchant['status'] = 2;        //搜索        if(!empty($_GET['keyword'])){            if($_GET['searchtype'] == 'mer_id'){                $condition_merchant['mer_id'] = $_GET['keyword'];            }else if($_GET['searchtype'] == 'account'){                $condition_merchant['account'] = array('like','%'.$_GET['keyword'].'%');            }else if($_GET['searchtype'] == 'name'){                $condition_merchant['name'] = array('like','%'.$_GET['keyword'].'%');            }else if($_GET['searchtype'] == 'phone'){                $condition_merchant['phone'] = array('like','%'.$_GET['keyword'].'%');            }        }        if ($this->system_session['area_id']) {            $area_index = $this->system_session['level'] == 1 ? 'area_id' : 'city_id';            $condition_merchant[$area_index] = $this->system_session['area_id'];        }        $database_merchant = D('Merchant');        $count_merchant = $database_merchant->where($condition_merchant)->count();        import('@.ORG.system_page');        $p = new Page($count_merchant,15);        $merchant_list = $database_merchant->field(true)->where($condition_merchant)->order('`mer_id` DESC')->limit($p->firstRow.','.$p->listRows)->select();        $this->assign('merchant_list',$merchant_list);        $pagebar = $p->show();        $this->assign('pagebar',$pagebar);        $this->display();    }    //动态获取期数信息    //@author zhukeqin    public function ajax_village_info(){        $data=array();        if(empty($_POST['village_id'])){            $data['res']=0;        }else{            $village_id=$_POST['village_id'];            $village_info=M('house_village')->where('village_id='.$village_id)->find();        }        if($village_info['village_type']==0){            $data['res']=0;        }else{            $project_list=M('house_village_project')->where('village_id='.$village_id)->select();            $data['res']=1;            $data['data']=$project_list;        }        echo json_encode($data);    }	public function add(){        //加入区域的选择        $village_result = D('house_village')->select();		$this->assign('bg_color','#F3F3F3');        $this->assign('village_result',$village_result);		$this->display();	}	public function modify(){		if(IS_POST){			$_POST['pwd'] = md5($_POST['pwd']);			if (empty($_POST['village_id'])) {                $this->error('请选择社区');            }			$_POST['reg_time'] = $_SERVER['REQUEST_TIME'];			$_POST['reg_ip'] = get_client_ip(1);			$_POST['from'] = '1';			$_POST['area_id'] = $this->system_session['area_id'];			$_POST['img_info']= 'hdhlogo.png';	//商户头像			$database_merchant = D('Merchant');			if ($database_merchant->field(true)->where(array('account' => htmlspecialchars($_POST['account'])))->find()) {				$this->error('账号已存在，请更换！');			}			if($insert_id=$database_merchant->data($_POST)->add()){				M('Merchant_score')->add(array('parent_id'=>$insert_id,'type'=>1));				$this->success('添加成功！');			}else{				$this->error('添加失败！请重试~');			}		}else{			$this->error('非法提交,请重新提交~');		}	}	public function edit(){		$this->assign('bg_color','#F3F3F3');		$database_merchant = D('Merchant');		$condition_merchant['mer_id'] = intval($_GET['mer_id']);		$merchant = $database_merchant->field('*')->where($condition_merchant)->find();//		dump($merchant);exit;		if(empty($merchant)){			$this->frame_error_tips('数据库中没有查询到该商户的信息！');		}		if(empty($merchant['city_id'])){			$now_area = D('Area')->field('`area_pid`')->where(array('area_id'=>$merchant['area_id']))->find();			$merchant['city_id'] = $now_area['area_pid'];		}		$now_city = D('Area')->field('`area_pid`')->where(array('area_id'=>$merchant['city_id']))->find();		$merchant['province_id'] = $now_city['area_pid'];		$this->assign('merchant',$merchant);		$home_share = D('Home_share')->where(array('mer_id' => $condition_merchant['mer_id']))->find();		//加入区域的选择		$village_result = D('house_village')->select();		//对比区域信息		$id = I('get.mer_id');		$village_me =  D('merchant')->where(array('mer_id'=>$id))->find();		$village_info=M('house_village')->where('village_id='.$merchant['village_id'])->find();		if($village_info['village_type']==1){		    $project_list=M('house_village_project')->where('village_id='.$merchant['village_id'])->select();		    $this->assign('project_list',$project_list);        }		//var_dump($village_result);exit;		$this->assign('village_result', $village_result);		$this->assign('home_share', $home_share);		$this->assign('village_me', $village_me);		$this->display();	}		public function amend(){		if(IS_POST){			if($_POST['pwd']){				$_POST['pwd'] = md5($_POST['pwd']);			}else{				unset($_POST['pwd']);			}			    		$data['a_href'] = isset($_POST['a_href']) && $_POST['a_href'] ? htmlspecialchars_decode($_POST['a_href']) : $this->config['site_url'] . '/wap.php?c=Index&a=index&token=' . $_POST['mer_id'];    		$data['a_name'] = isset($_POST['a_name']) && $_POST['a_name'] ? htmlspecialchars($_POST['a_name']) : '进入';    		$data['title'] = isset($_POST['a_title']) && $_POST['a_title'] ? htmlspecialchars($_POST['a_title']) : '您是' . $_POST['name'] . '的粉丝';    		unset($_POST['a_name'], $_POST['a_title'], $_POST['a_href']);    					$database_merchant = D('Merchant');			$database_merchant->data($_POST)->save();// 			if(){			$home_share = D('Home_share')->where(array('mer_id' => $_POST['mer_id']))->find();			if ($home_share) {				D('Home_share')->where(array('mer_id' => $_POST['mer_id']))->save($data);			} else {				$data['mer_id'] = $_POST['mer_id'];				D('Home_share')->add($data);			}			$this->success('修改成功！');// 			}else{// 				$this->error('修改失败！请检查内容是否有过修改（必须修改）后重试~');// 			}		}else{			$this->error('非法提交,请重新提交~');		}	}	/**	 * 商家提现管理	 * 汪威	 * 2016.5.10	 */	public function review(){		$data = M('take_cash');		//$model = $data->select();		//echo $data->getLastSql();		foreach($data as $ke=>$va){			$data[$ke]['dispose_name'] = M('Admin')->where(array('id' =>$va['dispose_id']))->getField('realname');		}		$this->yee();		//$rs = new Yeelink("b11cb20c2903230a0463fdc6ce337e2d","347694","388541",1);		//$rs->getStatus();		/*$this->assign('list',$data);		$this->display();*/	}    public function review_news(){        $data = M('take_cash');        //$model = $data->select();        //echo $data->getLastSql();        foreach($data as $ke=>$va){            $data[$ke]['dispose_name'] = M('Admin')->where(array('id' =>$va['dispose_id']))->getField('realname');        }        $this->yee();        //$rs = new Yeelink("b11cb20c2903230a0463fdc6ce337e2d","347694","388541",1);        //$rs->getStatus();        /*$this->assign('list',$data);        $this->display();*/    }	/*	 * yeelink调试	 *	 * 阳志鹏	 *	 * 2016.6.8	 */	public function yeelink($apikey='b11cb20c2903230a0463fdc6ce337e2d',$deviceid=347694,$sensorid=388541,$status){			//创建传感器,datapoints,查看datapoint			$url = 'http://api.yeelink.net/v1.1/device/'.$deviceid.'/sensor/'.$sensorid.'/datapoint/';			//编辑传感器			//$url = 'http://api.yeelink.net/v1.0/device/'.$deviceid.'/sensor/'.$sensorid;			//创建传感器			//$url = 'http://api.yeelink.net/v1.0/device/'.$deviceid.'/sensors/';			//编辑数据点			//$url = 'http://api.yeelink.net/v1.0/device/'.$deviceid.'/sensor/'.$sensorid.'/datapoint/2016-06-12T15:56:48';			//$url = 'http://api.yeelink.net/v1.0/device/'.$deviceid.'/sensor/'.$sensorid.'/datapoint/'.$key;			$curl = curl_init();			//0关闭,1开启			$json = '{			"value":0			}';			//编辑传参			/*            $json = '{                "title":"继电器开关111",                "about":"这是一个测试传感器",                "tags":"数据,温度",                "unit":{                    "name":"摄氏度",                    "symbol":"°C"                    }                }';            //创建传感器            $json = '{                "type":"value",                "title":"继电器开关1",                "about":"这是一个测试传感器1",                "tags":"数据,温度",                "unit":{                    "name":"temperature",                    "symbol":"C"                    }                }';            */			curl_setopt($curl, CURLOPT_URL, $url);			curl_setopt($curl, CURLOPT_HEADER, 0);			curl_setopt($curl, CURLOPT_HTTPHEADER, Array("U-ApiKey:".$apikey));			curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);			curl_setopt($curl, CURLOPT_CUSTOMREQUEST, "GET");			curl_setopt($curl,CURLOPT_POSTFIELDS,$json);			curl_setopt($curl,CUROPT_RETURNTRANSFER,1);			$data = curl_exec($curl);			curl_close($curl);			$rs = json_decode($data);			echo $rs.array_column("sensor_id");	}	public function yee(){		$connect = new Memcached;  //声明一个新的memcached链接		$connect->setOption(Memcached::OPT_COMPRESSION, false); //关闭压缩功能		$connect->setOption(Memcached::OPT_BINARY_PROTOCOL, true); //使用binary二进制协议		$connect->addServer('f120e580f9b74ec5.m.cnhzaliqshpub001.ocs.aliyuncs.com', 11211); //添加OCS实例地址及端口号		//$connect->setSaslAuthData('aaaaaaaaaa','password');//设置OCS帐号密码进行鉴权,如已开启免密码功能，则无需此步骤		$connect->set("hello", "world");		echo 'hello: ',$connect->get("hello");		$connect->quit();		exit;		$url = 'http://api.yeelink.net/v1.1/device/347694/sensor/388541/datapoints/';		$curl = curl_init();		//0关闭,1开启		$json = '{			"value":1			}';		curl_setopt($curl, CURLOPT_URL, $url);		curl_setopt($curl, CURLOPT_HEADER, 0);		curl_setopt($curl, CURLOPT_HTTPHEADER, Array("U-ApiKey:b11cb20c2903230a0463fdc6ce337e2d"));		curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);		curl_setopt($curl, CURLOPT_CUSTOMREQUEST, "POST");		curl_setopt($curl,CURLOPT_POSTFIELDS,$json);		curl_setopt($curl,CUROPT_RETURNTRANSFER,1);		$data = curl_exec($curl);		curl_close($curl);		print_r($data);	}	/**	 * 提现审核	 * 汪威	 * 2016.5.10	 */	public function check(){		$take_cash = D('take_cash');		if($_POST){			$status = trim(I('status'));			$remark = trim(I('remark'));			$id = trim(I('id'));				$data['dispose_id'] = $this->system_session['id'];				$data['dispose_time'] = time();				$data['status'] = $status;				$data['remark'] = $remark;				$eid = $take_cash->where('id='.$id)->save($data);			if($eid!=="false"){//				减去账户余额；				if($status=="2"){					M('merchant')->where('mer_id='.I('mer_id'))->setDec('money',I('tc_money'));				}				$this->success('修改成功！');			}else{ 				$this->error('修改失败'); 			}		}else{			$cash['id'] = intval($_GET['d_id']);			$info = $take_cash->where($cash)->find();//			$info['dispose_name'] = M('Admin')->where(array('id' =>$info['dispose_id']))->getField('realname');			$this->assign('info',$info);			$this->display();		}	}	/**	 * 删除提现审核	 * 汪威	 * 2016.5.10	 */	public function dradel(){		$take_cash = D('take_cash');		$cash['id'] = intval($_POST['d_id']);		if($take_cash->where($cash)->delete()){			$this->success('删除成功！');		}else{			$this->error('删除失败！请重试~');		}	}	public function del(){		if(IS_POST){			$database_merchant_store = D('Merchant_store');			$condition_merchant_store['mer_id'] = intval($_POST['mer_id']);			if($database_merchant_store->where($condition_merchant_store)->find()){				$this->error('商家存在店铺，请先清空店铺！');			}			$database_merchant = D('Merchant');			$condition_merchant['mer_id'] = intval($_POST['mer_id']);			if($database_merchant->where($condition_merchant)->delete()){				$this->success('删除成功！');			}else{				$this->error('删除失败！请重试~');			}		}else{			$this->error('非法提交,请重新提交~');		}	}	public function merchant_login(){		$database_merchant = D('Merchant');		$condition_merchant['mer_id'] = $_GET['mer_id'];		$now_merchant = $database_merchant->field(true)->where($condition_merchant)->find();		if(empty($now_merchant) || $now_merchant['status'] != 1){			exit('<html><head><script>window.top.toggleMenu(0);window.top.msg(0,"该商户的状态不存在！请查阅。",true,5);window.history.back();</script></head></html>');		}		if(!empty($now_merchant['last_ip'])){			import('ORG.Net.IpLocation');			$IpLocation = new IpLocation();			$last_location = $IpLocation->getlocation(long2ip($now_merchant['last_ip']));			$now_merchant['last']['country'] = iconv('GBK','UTF-8',$last_location['country']);			$now_merchant['last']['area'] = iconv('GBK','UTF-8',$last_location['area']);		}		session('merchant',$now_merchant);		$script_name = trim($_SERVER['SCRIPT_NAME'],'/');		if($_GET['group_id']){			redirect($this->config['site_url'].'/merchant.php?c=Group&a=frame_edit&group_id='.$_GET['group_id'].'&system_file='.$script_name);		}else if($_GET['activity_id']){			redirect($this->config['site_url'].'/merchant.php?c=Activity&a=frame_edit&id='.$_GET['activity_id'].'&system_file='.$script_name);		}else if($_GET['appoint_id']){			redirect($this->config['site_url'].'/merchant.php?c=Appoint&a=frame_edit&appoint_id='.$_GET['appoint_id'].'&system_file='.$script_name);		}else{			redirect($this->config['site_url'].'/merchant.php');		}	}	public function merchant_login_news(){		$database_merchant = D('Merchant');		$condition_merchant['mer_id'] = $_GET['mer_id'];		$now_merchant = $database_merchant->field(true)->where($condition_merchant)->find();		if(empty($now_merchant) || $now_merchant['status'] != 1){            $this->error("该商户的状态不存在！请查阅。");			//exit('<html><head><script>window.top.toggleMenu(0);window.top.msg(0,"该商户的状态不存在！请查阅。",true,5);window.history.back();</script></head></html>');		}		if(!empty($now_merchant['last_ip'])){			import('ORG.Net.IpLocation');			$IpLocation = new IpLocation();			$last_location = $IpLocation->getlocation(long2ip($now_merchant['last_ip']));			$now_merchant['last']['country'] = iconv('GBK','UTF-8',$last_location['country']);			$now_merchant['last']['area'] = iconv('GBK','UTF-8',$last_location['area']);		}		session('merchant',$now_merchant);		$script_name = trim($_SERVER['SCRIPT_NAME'],'/');		if($_GET['group_id']){			redirect($this->config['site_url'].'/merchant.php?c=Group&a=frame_edit&group_id='.$_GET['group_id'].'&system_file='.$script_name);		}else if($_GET['activity_id']){			redirect($this->config['site_url'].'/merchant.php?c=Activity&a=frame_edit&id='.$_GET['activity_id'].'&system_file='.$script_name);		}else if($_GET['appoint_id']){			redirect($this->config['site_url'].'/merchant.php?c=Appoint&a=frame_edit&appoint_id='.$_GET['appoint_id'].'&system_file='.$script_name);		}else{			redirect($this->config['site_url'].'/merchant.php');		}	}	/*店铺管理*/	public function store(){		$database_merchant = D('Merchant');		$condition_merchant['mer_id'] = intval($_GET['mer_id']);		$merchant = $database_merchant->field(true)->where($condition_merchant)->find();		if(empty($merchant)){			$this->error_tips('数据库中没有查询到该商户的信息！',5,U('Merchant/index'));		}		$this->assign('merchant',$merchant);				$database_merchant_store = D('Merchant_store');		$condition_merchant_store['mer_id'] = $merchant['mer_id'];		$condition_merchant_store['status'] = array('neq',4);		$count_store = $database_merchant_store->where($condition_merchant_store)->count();		import('@.ORG.system_page');		$p = new Page($count_store,15);		$store_list = $database_merchant_store->field(true)->where($condition_merchant_store)->order('`sort` DESC,`store_id` ASC')->limit($p->firstRow.','.$p->listRows)->select();		$this->assign('store_list',$store_list);		$pagebar = $p->show();		$this->assign('pagebar',$pagebar);				$this->display();	}	public function store_news(){		$database_merchant = D('Merchant');		$condition_merchant['mer_id'] = intval($_GET['mer_id']);		$merchant = $database_merchant->field(true)->where($condition_merchant)->find();		if(empty($merchant)){			$this->error_tips('数据库中没有查询到该商户的信息！',5,U('Merchant/index'));		}		$this->assign('merchant',$merchant);		$database_merchant_store = D('Merchant_store');		$condition_merchant_store['mer_id'] = $merchant['mer_id'];		$condition_merchant_store['status'] = array('neq',4);		$count_store = $database_merchant_store->where($condition_merchant_store)->count();		import('@.ORG.system_page');		$p = new Page($count_store,15);		$store_list = $database_merchant_store->field(true)->where($condition_merchant_store)->order('`sort` DESC,`store_id` ASC')->limit($p->firstRow.','.$p->listRows)->select();		$this->assign('store_list',$store_list);		$pagebar = $p->show();		$this->assign('pagebar',$pagebar);		$this->display();	}		public function wait_store(){		$where = array('status' => 2);		//搜索		if(!empty($_GET['keyword'])){			if($_GET['searchtype'] == 'store_id'){				$where['store_id'] = $_GET['keyword'];			}else if($_GET['searchtype'] == 'name'){				$where['name'] = array('like','%'.$_GET['keyword'].'%');			}else if($_GET['searchtype'] == 'phone'){				$where['phone'] = array('like','%'.$_GET['keyword'].'%');			}		}		if ($this->system_session['area_id']) {			$area_index = $this->system_session['level'] == 1 ? 'area_id' : 'city_id';			$where[$area_index] = $this->system_session['area_id'];		}		$database = D('Merchant_store');		$count = $database->where($where)->count();		import('@.ORG.system_page');		$p = new Page($count, 15);		$list = $database->field(true)->where($where)->order('`store_id` DESC')->limit($p->firstRow . ',' . $p->listRows)->select();		$this->assign('store_list', $list);		$pagebar = $p->show();		$this->assign('pagebar', $pagebar);				$this->display();    }    public function wait_store_news(){        $where = array('status' => 2);        //搜索        if(!empty($_GET['keyword'])){            if($_GET['searchtype'] == 'store_id'){                $where['store_id'] = $_GET['keyword'];            }else if($_GET['searchtype'] == 'name'){                $where['name'] = array('like','%'.$_GET['keyword'].'%');            }else if($_GET['searchtype'] == 'phone'){                $where['phone'] = array('like','%'.$_GET['keyword'].'%');            }        }        if ($this->system_session['area_id']) {            $area_index = $this->system_session['level'] == 1 ? 'area_id' : 'city_id';            $where[$area_index] = $this->system_session['area_id'];        }        $database = D('Merchant_store');        $count = $database->where($where)->count();        import('@.ORG.system_page');        $p = new Page($count, 15);        $list = $database->field(true)->where($where)->order('`store_id` DESC')->limit($p->firstRow . ',' . $p->listRows)->select();        $this->assign('store_list', $list);        $pagebar = $p->show();        $this->assign('pagebar', $pagebar);        $this->display();    }	public function store_add(){		$database_merchant = D('Merchant');		$condition_merchant['mer_id'] = intval($_GET['mer_id']);		$merchant = $database_merchant->field(true)->where($condition_merchant)->find();		if(empty($merchant)){			$this->frame_error_tips('数据库中没有查询到该商户的信息！无法添加店铺。',5);		}		$this->assign('merchant',$merchant);				$this->assign('bg_color','#F3F3F3');				$this->display();	}	public function store_modify(){		if(IS_POST){			$long_lat = explode(',',$_POST['long_lat']);			$_POST['long'] = $long_lat[0];			$_POST['lat'] = $long_lat[1];			$_POST['last_time'] = $_SERVER['REQUEST_TIME'];			$_POST['add_from'] = '1';			$database_merchant_store = D('Merchant_store');			if($insert_id=$database_merchant_store->data($_POST)->add()){				M('Merchant_score')->add(array('parent_id'=>$insert_id,'type'=>2));				$this->success('添加成功！');			}else{				$this->error('添加失败！请重试~');			}		}else{			$this->error('非法提交,请重新提交~');		}	}		public function store_edit(){		$database_merchant_store = D('Merchant_store');		$condition_merchant_store['store_id'] = intval($_GET['store_id']);		$store = $database_merchant_store->field(true)->where($condition_merchant_store)->find();		if(empty($store)){			$this->frame_error_tips('数据库中没有查询到该店铺的信息！',5);		}		$this->assign('store',$store);				$this->assign('bg_color','#F3F3F3');				$this->display();	}		public function store_amend(){		if(IS_POST){			$long_lat = explode(',',$_POST['long_lat']);			$_POST['long'] = $long_lat[0];			$_POST['lat'] = $long_lat[1];			$_POST['last_time'] = $_SERVER['REQUEST_TIME'];			$database_merchant_store = D('Merchant_store');			if($database_merchant_store->data($_POST)->save()){				$this->success('修改成功！');			}else{				$this->error('修改失败！请检查内容是否有过修改（必须修改）后重试~');			}		}else{			$this->error('非法提交,请重新提交~');		}	}	public function store_del(){		if(IS_POST){			$database_group_store = D('Group_store');			$condition_group_store['store_id'] = intval($_POST['store_id']);			if($database_group_store->where($condition_group_store)->find()){				$this->error('该店铺下有'.$this->config['group_alias_name'].'，请先解除店铺与对应'.$this->config['group_alias_name'].'的关系才能删除！');			}						$database_merchant_store = D('Merchant_store');			$condition_merchant_store['store_id'] = intval($_POST['store_id']);			/**$database_merchant_store->where($condition_merchant_store)->delete();**改软删除*4禁用***/			if($database_merchant_store->where($condition_merchant_store)->save(array('status'=>4))){				$this->success('删除成功！');			}else{				$this->error('删除失败！请重试~');			}		}else{			$this->error('非法提交,请重新提交~');		}	}		/*商户公告*/	public function news(){		$database_merchant_news = D('Merchant_news');		$news_list = $database_merchant_news->order('`is_top` DESC,`add_time` DESC')->select();		$this->assign('news_list',$news_list);				$this->display();	}    public function news_news(){        $database_merchant_news = D('Merchant_news');        $news_list = $database_merchant_news->order('`is_top` DESC,`add_time` DESC')->select();        $this->assign('news_list',$news_list);        $this->display();    }	public function news_add(){		$this->assign('bg_color','#F3F3F3');				$this->display();	}	public function news_modify(){		$database_merchant_news = D('Merchant_news');		$_POST['content'] = fulltext_filter($_POST['content']);		$_POST['add_time'] = $_SERVER['REQUEST_TIME'];		if($database_merchant_news->data($_POST)->add()){			$this->success('添加成功！');		}else{			$this->error('添加失败！');		}	}	public function news_edit(){		$database_merchant_news = D('Merchant_news');		$condition_merchant_news['id'] = $_GET['id'];		$now_news = $database_merchant_news->field(true)->where($condition_merchant_news)->find();		if(empty($now_news)){			$this->frame_error_tips('数据库中没有查询到该条公告！',5);		}		$this->assign('now_news',$now_news);				$this->assign('bg_color','#F3F3F3');				$this->display();	}	public function news_amend(){		$database_merchant_news = D('Merchant_news');		$_POST['content'] = fulltext_filter($_POST['content']);		$_POST['add_time'] = $_SERVER['REQUEST_TIME'];		if($database_merchant_news->data($_POST)->save()){			$this->success('编辑成功！');		}else{			$this->error('编辑失败！');		}	}	public function news_del(){		if(IS_POST){			$database_merchant_news = D('Merchant_news');			$condition_merchant_news['id'] = $_POST['id'];			if($database_merchant_news->where($condition_merchant_news)->delete()){				$this->success('删除成功！');			}else{				$this->error('删除失败！请重试~');			}		}else{			$this->error('非法提交,请重新提交~');		}	}		public function order(){		$percent = 0;        $period = 0;        $time = '';		if (!$_POST['begin_time']) {            $mer_id = isset($_GET['mer_id']) ? intval($_GET['mer_id']) : 0;            $type = isset($_GET['type']) ? htmlspecialchars($_GET['type']) : 'meal';        }else{            $mer_id = isset($_POST['mer_id']) ? intval($_POST['mer_id']) : 0;            $type = isset($_POST['type']) ? htmlspecialchars($_POST['type']) : 'meal';        }		switch($type){			case 'meal':			$where = "mer_id=".$mer_id." AND paid=1 AND is_own=0 AND status in (1,2) AND (pay_type<>'offline' OR balance_pay<>'0.00')";			break;			case 'group':			$where = "mer_id=".$mer_id." AND paid=1 AND is_own=0 AND status in (1,2) AND (pay_type<>'offline' OR balance_pay<>'0.00')";			break;			case 'weidian':			$where = "mer_id=".$mer_id." AND paid=1 AND pay_type<>'offline'";			break;			case 'wxapp':			$where = "mer_id=".$mer_id." AND paid=1 AND pay_type<>'offline'";			break;			case 'appoint':			$where = "mer_id=".$mer_id." AND paid=1 AND is_own=0 AND pay_type<>'offline' AND service_status=1";			break;			case 'store':			$where = "mer_id=".$mer_id." AND paid=1 AND is_own=0 AND refund=0";			break;		}        $pay_time=D($type.'_order')->where($where." AND pay_time<>0 AND pay_time<>''")->field('pay_time')->order('pay_time ASC')->limit('0,1')->getField('pay_time');        $start_year =empty($pay_time)?"":date('Y',$pay_time);        if ($_GET['year']) {            $time = array('year'=>$_GET['year'],'month'=>$_GET['month'],'period'=>$period);            $time = serialize($time);        }elseif(isset($_POST['begin_time'])&&isset($_POST['end_time'])){            if ($_POST['begin_time']>$_POST['end_time']) {                $this->error("结束时间应大于开始时间");            }            $period = $_POST['begin_time']==$_POST['end_time']?array(strtotime($_POST['begin_time']." 00:00:00"),strtotime($_POST['begin_time']." 23:59:59")):array(strtotime($_POST['begin_time']),strtotime($_POST['end_time']));            $time = array('year'=>$_GET['year'],'month'=>$_GET['month'],'period'=>$period);            $time = serialize($time);        }        $selected_year = isset($_GET['year'])?$_GET['year']:0;        $selected_month = isset($_GET['month'])?$_GET['month']:0;        		$merchant = D('Merchant')->field(true)->where('mer_id=' . $mer_id)->find();		if ($merchant['percent']) {			$percent = $merchant['percent'];		} elseif ($this->config['platform_get_merchant_percent']) {			$percent = $this->config['platform_get_merchant_percent'];		}		$this->assign('percent', $percent);		$result = D("Order")->get_order_by_mer_id($mer_id, $type, 1,$time,$_GET['is_pay_bill']);		$this->assign($result);		$this->assign('total_percent', $result['total'] * $percent * 0.01);		$this->assign('all_total_percent', ($result['alltotal']+$result['alltotalfinsh']) * $percent * 0.01);		// 		$this->assign(D("Meal_order")->get_order_by_mer_id($mer_id, 1));        $this->assign('start_year',$start_year);        $this->assign('selected_year',$selected_year);        $this->assign('selected_month',$selected_month);		$this->assign('now_merchant', $merchant);		$this->assign('mer_id', $mer_id);		$this->assign('type', $type);		$this->display();	}	public function order_news(){		$percent = 0;        $period = 0;        $time = '';		if (!$_POST['begin_time']) {            $mer_id = isset($_GET['mer_id']) ? intval($_GET['mer_id']) : 0;            $type = isset($_GET['type']) ? htmlspecialchars($_GET['type']) : 'meal';        }else{            $mer_id = isset($_POST['mer_id']) ? intval($_POST['mer_id']) : 0;            $type = isset($_POST['type']) ? htmlspecialchars($_POST['type']) : 'meal';        }		switch($type){			case 'meal':			$where = "mer_id=".$mer_id." AND paid=1 AND is_own=0 AND status in (1,2) AND (pay_type<>'offline' OR balance_pay<>'0.00')";			break;			case 'group':			$where = "mer_id=".$mer_id." AND paid=1 AND is_own=0 AND status in (1,2) AND (pay_type<>'offline' OR balance_pay<>'0.00')";			break;			case 'weidian':			$where = "mer_id=".$mer_id." AND paid=1 AND pay_type<>'offline'";			break;			case 'wxapp':			$where = "mer_id=".$mer_id." AND paid=1 AND pay_type<>'offline'";			break;			case 'appoint':			$where = "mer_id=".$mer_id." AND paid=1 AND is_own=0 AND pay_type<>'offline' AND service_status=1";			break;			case 'store':			$where = "mer_id=".$mer_id." AND paid=1 AND is_own=0 AND refund=0";			break;		}        $pay_time=D($type.'_order')->where($where." AND pay_time<>0 AND pay_time<>''")->field('pay_time')->order('pay_time ASC')->limit('0,1')->getField('pay_time');        $start_year =empty($pay_time)?"":date('Y',$pay_time);        if ($_GET['year']) {            $time = array('year'=>$_GET['year'],'month'=>$_GET['month'],'period'=>$period);            $time = serialize($time);        }elseif(isset($_POST['begin_time'])&&isset($_POST['end_time'])){            if ($_POST['begin_time']>$_POST['end_time']) {                $this->error("结束时间应大于开始时间");            }            $period = $_POST['begin_time']==$_POST['end_time']?array(strtotime($_POST['begin_time']." 00:00:00"),strtotime($_POST['begin_time']." 23:59:59")):array(strtotime($_POST['begin_time']),strtotime($_POST['end_time']));            $time = array('year'=>$_GET['year'],'month'=>$_GET['month'],'period'=>$period);            $time = serialize($time);        }        $selected_year = isset($_GET['year'])?$_GET['year']:0;        $selected_month = isset($_GET['month'])?$_GET['month']:0;		$merchant = D('Merchant')->field(true)->where('mer_id=' . $mer_id)->find();		if ($merchant['percent']) {			$percent = $merchant['percent'];		} elseif ($this->config['platform_get_merchant_percent']) {			$percent = $this->config['platform_get_merchant_percent'];		}		$this->assign('percent', $percent);		$result = D("Order")->get_order_by_mer_id($mer_id, $type, 1,$time,$_GET['is_pay_bill']);		$this->assign($result);		$this->assign('total_percent', $result['total'] * $percent * 0.01);		$this->assign('all_total_percent', ($result['alltotal']+$result['alltotalfinsh']) * $percent * 0.01);// 		$this->assign(D("Meal_order")->get_order_by_mer_id($mer_id, 1));        $this->assign('start_year',$start_year);        $this->assign('selected_year',$selected_year);        $this->assign('selected_month',$selected_month);		$this->assign('now_merchant', $merchant);		$this->assign('mer_id', $mer_id);		$this->assign('type', $type);		$this->display();	}		public function export()	{		$mer_id = isset($_GET['mer_id']) ? intval($_GET['mer_id']) : 0;		$type = isset($_GET['type']) ? htmlspecialchars($_GET['type']) : 'meal';		$title = '';		switch ($type) {			case 'meal':				$title = '快店账单';				break;			case 'group':				$title = '团购账单';				break;			case 'weidian':				$title = '微店账单';				break;			case 'wxapp':				$title = '预约账单';				break;			case 'appoint':				$title = '营销账单';				break;			case 'store':				$title = '收银账单';				break;		}		require_once APP_PATH . 'Lib/ORG/phpexcel/PHPExcel.php';		$objExcel = new PHPExcel();		$objProps = $objExcel->getProperties();		// 设置文档基本属性		$objProps->setCreator($title);		$objProps->setTitle($title);		$objProps->setSubject($title);		$objProps->setDescription($title);		// 设置当前的sheet		$objExcel->setActiveSheetIndex(0);		$objActSheet = $objExcel->getActiveSheet();				// 开始填充头部		$objActSheet->setCellValue('A1', '门店名称');		$objActSheet->setCellValue('B1', '订单编号');		$objActSheet->setCellValue('C1', '订单号');		$objActSheet->setCellValue('D1', '第三方订单ID');				$objActSheet->setCellValue('E1', '订单详情');		$objActSheet->setCellValue('F1', '数量');		$objActSheet->setCellValue('G1', '金额');		$objActSheet->setCellValue('H1', '余额支付金额');		$objActSheet->setCellValue('I1', '在线支付金额');		$objActSheet->setCellValue('J1', '商户余额支付金额');		$objActSheet->setCellValue('K1', '优惠券');		$objActSheet->setCellValue('L1', '下单时间');		$objActSheet->setCellValue('M1', '支付时间');		$objActSheet->setCellValue('N1', '支付类型');				$result = D("Order")->export_order_by_mid($mer_id, $type);		$i = 2;		foreach ($result as $row) {			$objActSheet->setCellValue('A' . $i, $row['store_name']);			$objActSheet->setCellValue('B' . $i, $row['order_id'] . ' ');			$objActSheet->setCellValue('C' . $i, $row['orderid'] . ' ');			$objActSheet->setCellValue('D' . $i, $row['thrid_id'] . ' ');			if ($type == 'meal') {				$str = '';				foreach ($row['order_name'] as $menu){					$str .= $menu['name'] . ':' . $menu['price'] . '*' . $menu['num'] . ';';				}				$objActSheet->setCellValue('E' . $i, $str);			} else {				$objActSheet->setCellValue('E' . $i, $row['order_name']);			}			$objActSheet->setCellValue('F' . $i, $row['total']);			$objActSheet->setCellValue('G' . $i, $row['order_price']);			$objActSheet->setCellValue('H' . $i, $row['balance_pay']);			$objActSheet->setCellValue('I' . $i, $row['payment_money']);			$objActSheet->setCellValue('J' . $i, $row['merchant_balance']);			$objActSheet->setCellValue('K' . $i, $row['card_id'] ? '已使用' : '未使用');			$objActSheet->setCellValue('L' . $i, date("Y-m-d H:i:s", $row['dateline']));			$objActSheet->setCellValue('M' . $i, $row['pay_time'] ? date('Y-m-d H:i:s', $row['pay_time']) : '');			$objActSheet->setCellValue('N' . $i, $row['pay_type_show']);			$i++;		}				//输出		$objWriter = new PHPExcel_Writer_Excel5($objExcel);		ob_end_clean();		header("Pragma: public");		header("Expires: 0");		header("Cache-Control:must-revalidate, post-check=0, pre-check=0");		header("Content-Type:application/force-download");		header("Content-Type:application/vnd.ms-execl");		header("Content-Type:application/octet-stream");		header("Content-Type:application/download");		header('Content-Disposition:attachment;filename="orderbill_' . date('YmdHis') . '.xls"');		header("Content-Transfer-Encoding:binary");		$objWriter->save('php://output');		exit();			}		public function weidian_order(){				$percent = 0;		$mer_id = isset($_GET['mer_id']) ? intval($_GET['mer_id']) : 0;		$merchant = D('Merchant')->field(true)->where('mer_id=' . $mer_id)->find();		if ($merchant['percent']) {			$percent = $merchant['percent'];		} elseif ($this->config['platform_get_merchant_percent']) {			$percent = $this->config['platform_get_merchant_percent'];		}		$this->assign('percent', $percent);		$result = D("Weidian_order")->get_order_by_mer_id($mer_id, 1);		$this->assign($result);		$this->assign('total_percent', $result['total'] * $percent * 0.01);		$this->assign('all_total_percent', ($result['alltotal']+$result['alltotalfinsh']) * $percent * 0.01);		// 		$this->assign(D("Meal_order")->get_order_by_mer_id($mer_id, 1));		$this->assign('now_merchant', $merchant);		$this->assign('mer_id', $mer_id);		$this->display();	}		public function change()	{		$mer_id = isset($_GET['mer_id']) ? intval($_GET['mer_id']) : 0;		$strids = isset($_GET['strids']) ? htmlspecialchars($_GET['strids']) : '';		$type = isset($_GET['type']) ? htmlspecialchars($_GET['type']) : '';		if ($strids) {			$array = explode(',', $strids);			$mealids = $groupids = array();			foreach ($array as $val) {				switch ($type) {					case 'meal' :						$mealids[] = intval($val);						break;					case 'group' :						$groupids[] = intval($val);						break;					case 'weidian' :						$weidianids[] = intval($val);						break;					case 'appoint' :						$appointids[] = intval($val);						break;					case 'wxapp' :						$wxappids[] = intval($val);						break;					case 'store' :						$storeids[] = intval($val);						break;				}			}			$mealids && D('Meal_order')->where(array('mer_id' => $mer_id, 'order_id' => array('in', $mealids)))->save(array('is_pay_bill' => 1));			$groupids && D('Group_order')->where(array('mer_id' => $mer_id, 'order_id' => array('in', $groupids)))->save(array('is_pay_bill' => 1));			$weidianids && D('Weidian_order')->where(array('mer_id' => $mer_id, 'order_id' => array('in', $weidianids)))->save(array('is_pay_bill' => 1));			$appointids && D('Appoint_order')->where(array('mer_id' => $mer_id, 'order_id' => array('in', $appointids)))->save(array('is_pay_bill' => 1));			$wxappids && D('Wxapp_order')->where(array('mer_id' => $mer_id, 'order_id' => array('in', $wxappids)))->save(array('is_pay_bill' => 1));			$storeids && D('Store_order')->where(array('mer_id' => $mer_id, 'order_id' => array('in', $storeids)))->save(array('is_pay_bill' => 1));		}		exit(json_encode(array('error_code' => 0)));	}		//平台提现	public function companypay(){		if(IS_POST){			if(!$phone=D('Merchant')->where('mer_id='.(int)$_POST['mer_id'])->getField('phone')){				$this->error('商家不存在！');			}			sort($_POST['orderid']);			$orderids = implode(',',$_POST['orderid']);			$data['pay_type'] = 'merchant';			$data['pay_id'] = $_POST['mer_id'];			$data['phone'] = $phone;			$data['money'] = $_POST['money'];			$data['desc'] = '商家'.$this->config[$_POST['pay_type'].'_alias_name'].'订单对账|订单号'.'('.$orderids.')'.'|转账 '.(float)($_POST['money']/100).' 元';			$data['status'] = 0;			$data['add_time'] = time();						$model=new Model();			$where['order_id']=array('in',$orderids);			if($model->table(C('DB_PREFIX').'companypay')->add($data)&&$model->table(C('DB_PREFIX').$_POST['pay_type'].'_order')->where($where)->setField('is_pay_bill',1)){				$this->success("提现申请成功！");			}else{				$this->error("提现失败！请联系管理员！");			}		}else{			$this->error('您提交的数据不正确');		}	}	//微店对账	public function weidian_change()	{		$mer_id = isset($_GET['mer_id']) ? intval($_GET['mer_id']) : 0;		$strids = isset($_GET['strids']) ? htmlspecialchars($_GET['strids']) : '';		if ($strids) {			$array = explode(',', $strids);			$ids = array();			foreach ($array as $val) {				$ids[] = $val;			}			$ids && D('Weidian_order')->where(array('mer_id' => $mer_id, 'order_id' => array('in', $ids)))->save(array('is_pay_bill' => 1));		}		exit(json_encode(array('error_code' => 0)));	}		public function menu()	{		$this->assign('bg_color','#F3F3F3');				$database_merchant = D('Merchant');		$condition_merchant['mer_id'] = intval($_GET['mer_id']);		$merchant = $database_merchant->field(true)->where($condition_merchant)->find();		if(empty($merchant)){			$this->frame_error_tips('数据库中没有查询到该商户的信息！');		}		$merchant['menus'] = explode(',', $merchant['menus']);		$this->assign('merchant',$merchant);				$menus = D('Merchant_menu')->field(true)->where(array('status' => 1, 'show' => 1))->order('`sort` DESC,`id` ASC')->select();				$list = array();				foreach ($menus as $menu) {			$menu['name'] =  str_replace('订餐',$this->config['meal_alias_name'],$menu['name']);			$menu['name'] =  str_replace('餐饮',$this->config['meal_alias_name'],$menu['name']);			$menu['name'] = str_replace('团购',$this->config['group_alias_name'],$menu['name']);			if (empty($menu['fid'])) {				if (isset($list[$menu['id']])) {					$list[$menu['id']] = array_merge($list[$menu['id']], $menu);				} else {					$list[$menu['id']] = $menu;				}			} else {				if (isset($list[$menu['fid']])) {					$list[$menu['fid']]['lists'][] = $menu;				} else {					$list[$menu['fid']]['lists'] = array($menu);				}			}		}		$this->assign('menus', $list);		$this->display();	}		public function savemenu()	{		if (IS_POST) {			$mer_id = isset($_POST['mer_id']) ? intval($_POST['mer_id']) : 0;			$menus = isset($_POST['menus']) ? $_POST['menus'] : '';			//$this->error( $menus.'---');			$menus = implode(',', $menus);			//$this->error( $menus.'---');			$database_merchant = D('Merchant');			$database_merchant->where(array('mer_id' => $mer_id))->save(array('menus' => $menus));						$this->success('权限设置成功！');		} else {			$this->error('非法提交,请重新提交~');		}	}	}